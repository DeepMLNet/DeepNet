<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HDF.PInvoke</name>
    </assembly>
    <members>
        <member name="T:HDF.PInvoke.H5AC.cache_config_t">
            <summary>
            Cache configuration struct used by H5F.[get,set]_mdc_config()
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.DEFAULT">
            <summary>
            Value for the default error stack
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5E.auto_is_v2(System.Int32,System.UInt32@)">
            <summary>
            Determines type of error stack.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-AutoIsV2
            </summary>
            <param name="estack_id">The error stack identifier</param>
            <param name="is_stack">A flag indicating which error stack typedef
            the specified error stack conforms to.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.clear(System.Int32)">
            <summary>
            Clears the specified error stack or the error stack for the current
            thread.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-Clear2
            </summary>
            <param name="estack_id">Error stack identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.close_msg(System.Int32)">
            <summary>
            Closes an error message identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-CloseMsg
            </summary>
            <param name="msg_id">Error message identifier.</param>
            <returns>Returns a non-negative value on success; otherwise returns
            a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.close_stack(System.Int32)">
            <summary>
            Closes object handle for error stack.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-CloseStack
            </summary>
            <param name="estack_id">Error stack identifier.</param>
            <returns>Returns a non-negative value on success; otherwise returns
            a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.create_msg(System.Int32,HDF.PInvoke.H5E.type_t,System.String)">
            <summary>
            Add major error message to an error class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-CreateMsg
            </summary>
            <param name="cls">Error class identifier.</param>
            <param name="msg_type">The type of the error message.</param>
            <param name="msg">Major error message.</param>
            <returns>Returns a message identifier on success; otherwise returns
            a negative value.</returns>
            <remarks>ASCII strings ONLY.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5E.create_stack">
            <summary>
            Creates a new empty error stack.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-CreateStack
            </summary>
            <returns>Returns an error stack identifier on success; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.get_auto(System.Int32,HDF.PInvoke.H5E.auto_t@,System.IntPtr@)">
            <summary>
            Returns the settings for the automatic error stack traversal
            function and its data.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-GetAuto2
            </summary>
            <param name="estack_id">Error stack identifier.
            <code>H5E_DEFAULT</code> indicates the current stack.</param>
            <param name="func">The function currently set to be called upon an
            error condition.</param>
            <param name="client_data">Data currently set to be passed to the
            error function.</param>
            <returns></returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.get_class_name(System.Int32,System.Text.StringBuilder,System.IntPtr)">
            <summary>
            Retrieves error class name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-GetClassName
            </summary>
            <param name="class_id">Error class identifier.</param>
            <param name="name">The name of the class to be queried.</param>
            <param name="size">The length of class name to be returned by
            this function.</param>
            <returns>Returns non-negative value as on success; otherwise
            returns negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5E.get_current_stack">
            <summary>
            Returns copy of current error stack.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-GetCurrentStack
            </summary>
            <returns>Returns an error stack identifier on success; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.get_msg(System.Int32,HDF.PInvoke.H5E.type_t@,System.Text.StringBuilder,System.IntPtr)">
            <summary>
            Retrieves an error message.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-GetMsg
            </summary>
            <param name="msg_id">Idenfier for error message to be queried.</param>
            <param name="msg_type">The type of the error message.</param>
            <param name="msg">Error message buffer.</param>
            <param name="size">The length of error message to be returned by
            this function.</param>
            <returns>Returns the size of the error message in bytes on success;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.get_num(System.Int32)">
            <summary>
            Retrieves the number of error messages in an error stack.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-GetNum
            </summary>
            <param name="estack_id">Error stack identifier.</param>
            <returns>Returns a non-negative value on success; otherwise returns
            a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.pop(System.Int32,System.IntPtr)">
            <summary>
            Deletes specified number of error messages from the error stack.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-Pop
            </summary>
            <param name="estack_id">Error stack identifier.</param>
            <param name="count">The number of error messages to be deleted from
            the top of error stack.</param>
            <returns></returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.print(System.Int32,System.IntPtr)">
            <summary>
            Prints the specified error stack in a default manner.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-Print2
            </summary>
            <param name="estack_id">Identifier of the error stack to be printed.</param>
            <param name="stream">File pointer, or stderr if NULL.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.push(System.Int32,System.String,System.String,System.UInt32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Pushes new error record onto error stack.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-Push2
            </summary>
            <param name="estack_id">Identifier of the error stack to which the
            error record is to be pushed. If the identifier is
            <code>H5E.DEFAULT</code> , the error record will be pushed to the
            current stack.</param>
            <param name="file">Name of the file in which the error was
            detected.</param>
            <param name="func">Name of the function in which the error was
            detected.</param>
            <param name="line">Line number within the file at which the error
            was detected.</param>
            <param name="class_id">Error class identifier.</param>
            <param name="major_id">Major error identifier.</param>
            <param name="minor_id">Minor error identifier.</param>
            <param name="msg">Error description string.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5E.register_class(System.String,System.String,System.String)">
            <summary>
            Registers a client library or application program to the HDF5 error
            API.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-RegisterClass
            </summary>
            <param name="cls_name">Name of the error class.</param>
            <param name="lib_name">Name of the client library or application to
            which the error class belongs.</param>
            <param name="version">Version of the client library or application
            to which the error class belongs. A NULL can be passed in.</param>
            <returns>Returns a class identifier on success; otherwise returns a
            negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.set_auto(System.Int32,HDF.PInvoke.H5E.auto_t,System.IntPtr)">
            <summary>
            Turns automatic error printing on or off.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-SetAuto2
            </summary>
            <param name="estack_id">Error stack identifier.</param>
            <param name="func">Function to be called upon an error condition.</param>
            <param name="client_data">Data passed to the error function.</param>
            <returns>Returns a non-negative value on success; otherwise returns
            a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.set_current_stack(System.Int32)">
            <summary>
            Replaces the current error stack.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-SetCurrentStack
            </summary>
            <param name="estack_id">Error stack identifier.</param>
            <returns>Returns a non-negative value on success; otherwise returns
            a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.unregister_class(System.Int32)">
            <summary>
            Removes an error class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-UnregisterClass
            </summary>
            <param name="class_id">Error class identifier.</param>
            <returns>Returns a non-negative value on success; otherwise returns
            a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5E.walk(System.Int32,HDF.PInvoke.H5E.direction_t,HDF.PInvoke.H5E.walk_t,System.IntPtr)">
            <summary>
            Walks the specified error stack, calling the specified function.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5E.html#Error-Walk2
            </summary>
            <param name="estack_id">Error stack identifier.</param>
            <param name="direction">Direction in which the error stack is to be
            walked.</param>
            <param name="func">Function to be called for each error encountered.</param>
            <param name="client_data">Data to be passed with
            <paramref name="func"/>.</param>
            <returns></returns>
        </member>
        <member name="T:HDF.PInvoke.H5E.type_t">
            <summary>
            Different kinds of error information
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5E.error_t">
            <summary>
            Information about an error; element of error stack
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.error_t.cls_id">
            <summary>
            class ID
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.error_t.maj_num">
            <summary>
            major error ID
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.error_t.min_num">
            <summary>
            minor error ID
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.error_t.line">
            <summary>
            line in file where error occurs
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.error_t.func_name">
            <summary>
            function in which error occurred
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.error_t.file_name">
            <summary>
            file in which error occurred
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.error_t.desc">
            <summary>
            optional supplied description
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5E.auto_t">
            <summary>
            Callback for error handling.
            </summary>
            <param name="estack">Error stack identifier</param>
            <param name="client_data">Pointer to client data in the format
            expected by the user-defined function.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5E.walk_t">
            <summary>
            Callback for H5E.walk
            </summary>
            <param name="n">Indexed position of the error in the stack.</param>
            <param name="err_desc">Reference to a data structure describing the
            error.</param>
            <param name="client_data">Pointer to client data in the format
            expected by the user-defined function.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5E.direction_t">
            <summary>
            Error stack traversal direction
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.direction_t.H5E_WALK_UPWARD">
            <summary>
            begin deep, end at API function [value = 0]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5E.direction_t.H5E_WALK_DOWNWARD">
            <summary>
            begin at API function, end deep [value = 1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5P.DEFAULT">
            <summary>
            Default value for all property list classes
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5P.add_merge_committed_dtype_path(System.Int32,System.Byte[])">
            <summary>
            Adds a path to the list of paths that will be searched in the
            destination file for a matching committed datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-AddMergeCommittedDtypePath
            </summary>
            <param name="ocpypl_id">Object copy property list identifier.</param>
            <param name="path">The path to be added.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.add_merge_committed_dtype_path(System.Int32,System.String)">
            <summary>
            Adds a path to the list of paths that will be searched in the
            destination file for a matching committed datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-AddMergeCommittedDtypePath
            </summary>
            <param name="ocpypl_id">Object copy property list identifier.</param>
            <param name="path">The path to be added.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.all_filters_avail(System.Int32)">
            <summary>
            Verifies that all required filters are available.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-AllFiltersAvail
            </summary>
            <param name="plist_id">Dataset or group creation property list
            identifier.</param>
            <returns>Returns 1 if all filters are available and 0 if one or
            more is not currently available. Returns a negative value
            on error.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.close(System.Int32)">
            <summary>
            Terminates access to a property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Close
            </summary>
            <param name="plist">Identifier of the property list to which
            access is terminated.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.close_class(System.Int32)">
            <summary>
            Closes an existing property list class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-CloseClass
            </summary>
            <param name="cls">Property list class to close</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.copy(System.Int32)">
            <summary>
            Copies an existing property list to create a new property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Copy
            </summary>
            <param name="plist">Identifier of property list to duplicate.</param>
            <returns>Returns a property list identifier if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.copy_prop(System.Int32,System.Int32,System.String)">
            <summary>
            Copies a property from one list or class to another.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-CopyProp
            </summary>
            <param name="dst_id">Identifier of the destination property list or
            class</param>
            <param name="src_id">Identifier of the source property list or
            class</param>
            <param name="name">Name of the property to copy</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.create(System.Int32)">
            <summary>
            Creates a new property list as an instance of a property list class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Create
            </summary>
            <param name="cls_id">The class of the property list to create.</param>
            <returns>Returns a property list identifier (<code>plist</code>)
            if successful; otherwise Fail (-1).</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.create_class(System.Int32,System.String,HDF.PInvoke.H5P.cls_create_func_t,System.IntPtr,HDF.PInvoke.H5P.cls_copy_func_t,System.IntPtr,HDF.PInvoke.H5P.cls_close_func_t,System.IntPtr)">
            <summary>
            Creates a new property list class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-CreateClass
            </summary>
            <param name="parent_class">Property list class to inherit from or
            <code>NULL</code></param>
            <param name="name">Name of property list class to register</param>
            <param name="create">Callback routine called when a property list
            is created</param>
            <param name="create_data">Pointer to user-defined class create data,
            to be passed along to class create callback</param>
            <param name="copy">Callback routine called when a property list is
            copied</param>
            <param name="copy_data">Pointer to user-defined class copy data, to
            be passed along to class copy callback</param>
            <param name="close">Callback routine called when a property list is
            being closed</param>
            <param name="close_data">Pointer to user-defined class close data,
            to be passed along to class close callback</param>
            <returns>On success, returns a valid property list class identifier;
            otherwise returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.equal(System.Int32,System.Int32)">
            <summary>
            Compares two property lists or classes for equality.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Equal
            </summary>
            <param name="id1">First property object to be compared</param>
            <param name="id2">Second property object to be compared</param>
            <returns>Returns 1 if equal; 0 if unequal. Returns a negative value
            on error.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.exist(System.Int32,System.String)">
            <summary>
            Queries whether a property name exists in a property list or class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Exist
            </summary>
            <param name="id">Identifier for the property to query</param>
            <param name="name">Name of property to check for</param>
            <returns>Returns 1 if the property exists in the property object;
            0 if the property does not exist. Returns a negative value
            on error.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.H5Pfill_value_defined(System.Int32,HDF.PInvoke.H5D.fill_value_t@)">
            <summary>
            Determines whether fill value is defined.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-FillValueDefined
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <param name="status">Status of fill value in property list.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.free_merge_committed_dtype_paths(System.Int32)">
            <summary>
            Clears the list of paths stored in the object copy property list
            <paramref name="ocpypl_id"/>.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-FreeMergeCommittedDtypePaths
            </summary>
            <param name="ocpypl_id">Object copy property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get(System.Int32,System.String,System.IntPtr)">
            <summary>
            Queries the value of a property.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Get
            </summary>
            <param name="plid">Identifier of the property list to query</param>
            <param name="name">Name of property to query</param>
            <param name="value">Pointer to a location to which to copy the
            value of of the property</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_alignment(System.Int32,System.UInt64@,System.UInt64@)">
            <summary>
            Retrieves the current settings for alignment properties from a file
            access property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetAlignment
            </summary>
            <param name="plist">Identifier of a file access property list.</param>
            <param name="threshold">Pointer to location of return threshold
            value.</param>
            <param name="alignment">Pointer to location of return alignment
            value.</param>
            <returns></returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_alloc_time(System.Int32,HDF.PInvoke.H5D.alloc_time_t@)">
            <summary>
            Retrieves the timing for storage space allocation.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetAllocTime
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <param name="alloc_time">When to allocate dataset storage space.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_attr_creation_order(System.Int32,System.UInt32@)">
            <summary>
            Retrieves tracking and indexing settings for attribute creation order.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetAttrCreationOrder
            </summary>
            <param name="ocpl_id">Object (group or dataset) creation property
            list identifier</param>
            <param name="crt_order_flags">Flags specifying whether to track and
            index attribute creation order</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_attr_phase_change(System.Int32,System.UInt32@,System.UInt32@)">
            <summary>
            Retrieves attribute storage phase change thresholds.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetAttrPhaseChange
            </summary>
            <param name="ocpl_id">Object creation property list identifier</param>
            <param name="max_compact">Maximum number of attributes to be stored
            in compact storage</param>
            <param name="min_dense">Minimum number of attributes to be stored
            in dense storage</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_btree_ratios(System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets B-tree split ratios for a dataset transfer property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetBTreeRatios
            </summary>
            <param name="plist">The dataset transfer property list identifier.</param>
            <param name="left">The B-tree split ratio for left-most nodes.</param>
            <param name="middle">The B-tree split ratio for right-most nodes
            and lone nodes.</param>
            <param name="right">The B-tree split ratio for all other nodes.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_buffer(System.Int32,System.IntPtr@,System.IntPtr@)">
            <summary>
            Reads buffer settings.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetBuffer
            </summary>
            <param name="plist">Identifier for the dataset transfer property
            list.</param>
            <param name="tconv">Address of the pointer to application-allocated
            type conversion buffer.</param>
            <param name="bkg">Address of the pointer to application-allocated
            background buffer.</param>
            <returns>Returns buffer size, in bytes, if successful; otherwise 0
            on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_cache(System.Int32,System.Int32@,System.IntPtr@,System.IntPtr@,System.Double@)">
            <summary>
            Queries the raw data chunk cache parameters.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetCache
            </summary>
            <param name="plist_id">Identifier of the file access property list.</param>
            <param name="mdc_nelmts">UNUSED.</param>
            <param name="rdcc_nelmts">Number of elements (objects) in the raw
            data chunk cache.</param>
            <param name="rdcc_nbytes">Total size of the raw data chunk cache,
            in bytes.</param>
            <param name="rdcc_w0">Preemption policy.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_char_encoding(System.Int32,HDF.PInvoke.H5T.cset_t@)">
            <summary>
            Retrieves the character encoding used to create a link or attribute
            name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetCharEncoding
            </summary>
            <param name="plist_id">Link creation or attribute creation property
            list identifier</param>
            <param name="encoding">String encoding character set</param>
            <returns>Returns a non-negative valule if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_chunk(System.Int32,System.Int32,System.UInt64[])">
            <summary>
            Retrieves the size of chunks for the raw data of a chunked layout
            dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetChunk
            </summary>
            <param name="plist_id">Identifier of property list to query.</param>
            <param name="max_ndims">Length of the <paramref name="dims"/>
            array.</param>
            <param name="dims">Array to store the chunk dimensions.</param>
            <returns>Returns chunk dimensionality if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_chunk_cache(System.Int32,System.IntPtr@,System.IntPtr@,System.Double@)">
            <summary>
            Retrieves the raw data chunk cache parameters.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetChunkCache
            </summary>
            <param name="dapl_id">Dataset access property list identifier.</param>
            <param name="rdcc_nslots">Number of chunk slots in the raw data 
            chunk cache hash table.</param>
            <param name="rdcc_nbytes">Total size of the raw data chunk cache,
            in bytes.</param>
            <param name="rdcc_w0">Preemption policy.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_class(System.Int32)">
            <summary>
            Returns the property list class identifier for a property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetClass
            </summary>
            <param name="plist">Identifier of property list to query.</param>
            <returns>Returns a property list class identifier if successful.
            Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_class_name(System.Int32)">
            <summary>
            Retrieves the name of a class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetClassName
            </summary>
            <param name="pcid">Identifier of the property class to query</param>
            <returns>If successful returns a pointer to an allocated string
            containing the class name; <code>NULL</code> if unsuccessful.</returns>
            <remarks>The pointer to the name must be freed by the user after
            each successful call.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_class_parent(System.Int32)">
            <summary>
            Retrieves the parent class of a property class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetClassParent
            </summary>
            <param name="pcid">Identifier of the property class to query</param>
            <returns>If successful, returns a valid parent class object
            identifier; returns a negative value on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_copy_object(System.Int32,System.UInt32@)">
            <summary>
            Retrieves the properties to be used when an object is copied.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetCopyObject
            </summary>
            <param name="ocp_plist_id">Object copy property list identifier</param>
            <param name="copy_options">Copy option(s) set in the object copy
            property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_core_write_tracking(System.Int32,System.UInt32@,System.IntPtr@)">
            <summary>
            Gets information about the write tracking feature used by the core VFD.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetCoreWriteTracking
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="is_enabled">Whether the feature is enabled.</param>
            <param name="page_size">Size, in bytes, of write aggregation pages.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_create_intermediate_group(System.Int32,System.UInt32@)">
            <summary>
            Determines whether property is set to enable creating missing
            intermediate groups.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetCreateIntermediateGroup
            </summary>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="crt_intermed_group">Flag specifying whether to create
            intermediate groups upon creation of an object</param>
            <returns>Returns a non-negative valule if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_data_transform(System.Int32,System.Text.StringBuilder,System.IntPtr)">
            <summary>
            Retrieves a data transform expression.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetDataTransform
            </summary>
            <param name="plist_id">Identifier of the property list or class</param>
            <param name="expression">Pointer to memory where the transform
            expression will be copied</param>
            <param name="size">Number of bytes of the transform expression to
            copy to</param>
            <returns>If successful, returns the size of the transform expression.
            Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_driver(System.Int32)">
            <summary>
            Returns low-lever driver identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetDriver
            </summary>
            <param name="plist_id">File access or data transfer property list
            identifier.</param>
            <returns>Returns a valid low-level driver identifier if successful.
            Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_driver_info(System.Int32)">
            <summary>
            Returns a pointer to file driver information.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetDriverInfo
            </summary>
            <param name="plist_id">File access or data transfer property list
            identifier.</param>
            <returns>Returns a pointer to a struct containing low-level driver
            information. Otherwise returns <code>NULL</code>.</returns>
            <remarks><code>NULL</code> is also returned if no driver-specific
            properties have been registered. No error is pushed on the stack
            in this case.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_edc_check(System.Int32)">
            <summary>
            Determines whether error-detection is enabled for dataset reads.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetEdcCheck
            </summary>
            <param name="plist">Dataset transfer property list identifier.</param>
            <returns>Returns <code>H5Z_ENABLE_EDC</code> or
            <code>H5Z_DISABLE_EDC</code>  if successful; otherwise returns a
            negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_elink_acc_flags(System.Int32,System.UInt32@)">
            <summary>
            Retrieves the external link traversal file access flag from the
            specified link access property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetELinkAccFlags
            </summary>
            <param name="lapl_id">Link access property list identifier</param>
            <param name="flags">File access flag for link traversal.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_elink_cb(System.Int32,HDF.PInvoke.H5L.elink_traverse_t@,System.IntPtr@)">
            <summary>
            Retrieves the external link traversal callback function from the
            specified link access property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetELinkCb
            </summary>
            <param name="lapl_id">Link access property list identifier.</param>
            <param name="func">User-defined external link traversal callback
            function.</param>
            <param name="op_data">User-defined input data for the callback
            function.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_elink_fapl(System.Int32)">
            <summary>
            Retrieves the file access property list identifier associated with
            the link access property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetELinkFapl
            </summary>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_elink_file_cache_size(System.Int32,System.UInt32@)">
            <summary>
            Retrieves the size of the external link open file cache.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetELinkFileCacheSize
            </summary>
            <param name="fapl_id">File access property list identifier</param>
            <param name="efc_size">External link open file cache size in number
            of files.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_elink_prefix(System.Int32,System.Byte[],System.IntPtr)">
            <summary>
            Retrieves prefix applied to external link paths.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetELinkPrefix
            </summary>
            <param name="lapl_id">Link access property list identifier</param>
            <param name="prefix">Prefix applied to external link paths</param>
            <param name="size">Size of prefix, including null terminator</param>
            <returns>If successful, returns a non-negative value specifying the
            size in bytes of the prefix without the <code>NULL</code>
            terminator; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_est_link_info(System.Int32,System.UInt32@,System.UInt32@)">
            <summary>
            Queries data required to estimate required local heap or object
            header size.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetEstLinkInfo
            </summary>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="est_num_entries">Estimated number of links to be
            inserted into group</param>
            <param name="est_name_len">Estimated average length of link names</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_external(System.Int32,System.UInt32,System.IntPtr,System.Byte[],System.IntPtr@,System.UInt64@)">
            <summary>
            Returns information about an external file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetExternal
            </summary>
            <param name="plist">Identifier of a dataset creation property list.</param>
            <param name="idx">External file index.</param>
            <param name="name_size">Maximum length of <paramref name="name"/>
            array.</param>
            <param name="name">Name of the external file.</param>
            <param name="offset">Pointer to a location to return an offset
            value.</param>
            <param name="size">Pointer to a location to return the size of the
            external file data.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_external_count(System.Int32)">
            <summary>
            Returns the number of external files for a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetExternalCount
            </summary>
            <param name="plist">Identifier of a dataset creation property list.</param>
            <returns>Returns the number of external files if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_family_offset(System.Int32,System.UInt64@)">
            <summary>
            Retrieves a data offset from the file access property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFamilyOffset
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="offset">Offset in bytes within the HDF5 file.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_fapl_core(System.Int32,System.IntPtr@,System.UInt32@)">
            <summary>
            Queries core file driver properties.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFaplCore
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="increment">Size, in bytes, of memory increments.</param>
            <param name="backing_store">Boolean flag indicating whether to
            write the file contents to disk when the file is closed.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_fapl_direct(System.Int32,System.IntPtr@,System.IntPtr@,System.IntPtr@)">
            <summary>
            Retrieves direct I/O driver settings.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFaplDirect
            </summary>
            <param name="fapl_id">File access property list identifier</param>
            <param name="alignment">Required memory alignment boundary</param>
            <param name="block_size">File system block size</param>
            <param name="cbuf_size">Copy buffer size</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_fapl_family(System.Int32,System.UInt64@,System.Int32@)">
            <summary>
            Returns file access property list information.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFaplFamily
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="memb_size">Size in bytes of each file member.</param>
            <param name="memb_fapl_id">Identifier of file access property list
            for each family member.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_fclose_degree(System.Int32,HDF.PInvoke.H5F.close_degree_t@)">
            <summary>
            Returns the file close degree.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFcloseDegree
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="fc_degree"> Pointer to a location to which to return
            the file close degree property, the value of
            <code>fc_degree</code>.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_file_image(System.Int32,System.IntPtr@,System.IntPtr@)">
            <summary>
            Retrieves a copy of the file image designated as the initial
            content and structure of a file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFileImage
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="buf_ptr_ptr">On input, <code>NULL</code> or a pointer
            to a pointer to a buffer that contains the file image.</param>
            <param name="buf_len_ptr">On input, <code>NULL</code> or a pointer
            to a buffer specifying the required size of the buffer to hold the
            file image.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_file_image_callbacks(System.Int32,HDF.PInvoke.H5FD.file_image_callbacks_t@)">
            <summary>
            Retrieves callback routines for working with file images.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFileImageCallbacks
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="callbacks_ptr">Pointer to the instance of the
            <code>H5FD.file_image_callbacks_t</code> struct in which the
            callback routines are to be returned.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>Struct fields must be initialized to <code>NULL</code>
            before the call is made.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_fill_time(System.Int32,HDF.PInvoke.H5D.fill_time_t@)">
            <summary>
            Retrieves the time when fill value are written to a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFillTime
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <param name="fill_time">Setting for the timing of writing fill
            values to the dataset.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_fill_value(System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Retrieves a dataset fill value.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFillValue
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <param name="type_id">Datatype identifier for the value passed via
            <code>value</code>.</param>
            <param name="value">Pointer to buffer to contain the returned fill
            value.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_filter(System.Int32,System.UInt32,System.UInt32@,System.IntPtr@,System.UInt32[],System.IntPtr,System.Byte[],System.UInt32@)">
            <summary>
            Returns information about a filter in a pipeline.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFilter2
            </summary>
            <param name="plist_id">Dataset or group creation property list 
            identifier.</param>
            <param name="idx">Sequence number within the filter pipeline of the
            filter for which information is sought.</param>
            <param name="flags">Bit vector specifying certain general
            properties of the filter.</param>
            <param name="cd_nelmts">Number of elements in
            <paramref name="cd_values"/>.</param>
            <param name="cd_values">Auxiliary data for the filter.</param>
            <param name="namelen">Anticipated number of characters in
            <paramref name="name"/>.</param>
            <param name="name">Name of the filter.</param>
            <param name="filter_config">Bit field.</param>
            <returns>Returns the filter identifier if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_filter_by_id(System.Int32,HDF.PInvoke.H5Z.filter_t,System.UInt32@,System.IntPtr@,System.UInt32[],System.IntPtr,System.Byte[],System.UInt32@)">
            <summary>
            Returns information about the specified filter.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFilterById2
            </summary>
            <param name="plist_id">Dataset or group creation property list 
            identifier.</param>
            <param name="filter_id">Filter identifier.</param>
            <param name="flags">Bit vector specifying certain general
            properties of the filter.</param>
            <param name="cd_nelmts">Number of elements in
            <paramref name="cd_values"/>.</param>
            <param name="cd_values">Auxiliary data for the filter.</param>
            <param name="namelen">Anticipated number of characters in
            <paramref name="name"/>.</param>
            <param name="name">Name of the filter.</param>
            <param name="filter_config">Bit field.</param>
            <returns>Returns the filter identifier if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_gc_references(System.Int32,System.UInt32@)">
            <summary>
            Returns garbage collecting references setting.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetGCReferences
            </summary>
            <param name="plist">File access property list identifier.</param>
            <param name="gc_ref">Flag returning the state of reference garbage
            collection. A returned value of 1 indicates that garbage collection
            is on while 0 indicates that garbage collection is off.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_hyper_vector_size(System.Int32,System.IntPtr@)">
            <summary>
            Retrieves number of I/O vectors to be read/written in hyperslab I/O.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetHyperVectorSize
            </summary>
            <param name="dxpl_id">Dataset transfer property list identifier.</param>
            <param name="vector_size">Number of I/O vectors to accumulate in
            memory for I/O operations.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_istore_k(System.Int32,System.UInt32@)">
            <summary>
            Queries the 1/2 rank of an indexed storage B-tree.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetIstoreK
            </summary>
            <param name="fcpl_id">File creation property list identifier</param>
            <param name="ik">Pointer to location to return the chunked storage
            B-tree 1/2 rank</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_layout(System.Int32)">
            <summary>
            Returns the layout of the raw data for a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetLayout
            </summary>
            <param name="plist">Identifier for property list to query.</param>
            <returns>Returns the layout type (a non-negative value) of a
            dataset creation property list if successful. Otherwise, returns a
            negative value indicating failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_libver_bounds(System.Int32,HDF.PInvoke.H5F.libver_t@,HDF.PInvoke.H5F.libver_t@)">
            <summary>
            Retrieves library version bounds settings that indirectly control
            the format versions used when creating objects.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetLibverBounds
            </summary>
            <param name="fapl_id">File access property list identifier</param>
            <param name="libver_low">The earliest version of the library that
            will be used for writing objects.</param>
            <param name="libver_high">The latest version of the library that
            will be used for writing objects.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_link_creation_order(System.Int32,System.UInt32@)">
            <summary>
            Queries whether link creation order is tracked and/or indexed in a
            group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetLinkCreationOrder
            </summary>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="crt_order_flags">Creation order flag(s)</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_link_phase_change(System.Int32,System.UInt32@,System.UInt32@)">
            <summary>
            Queries the settings for conversion between compact and dense
            groups.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetLinkPhaseChange
            </summary>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="max_compact">Maximum number of links for compact
            storage</param>
            <param name="min_dense">Minimum number of links for dense storage</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_local_heap_size_hint(System.Int32,System.IntPtr@)">
            <summary>
            Retrieves the anticipated size of the local heap for original-style
            groups.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetLocalHeapSizeHint
            </summary>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="size_hint">Anticipated size of local heap</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_mcdt_search_cb(System.Int32,HDF.PInvoke.H5O.mcdt_search_cb_t@,System.IntPtr@)">
            <summary>
            Retrieves the callback function from the specified object copy
            property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetMcdtSearchCb
            </summary>
            <param name="ocpypl_id">Object copy property list identifier</param>
            <param name="func">User-defined callback function</param>
            <param name="op_data">User-defined input data for the callback
            function</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_mdc_config(System.Int32,HDF.PInvoke.H5AC.cache_config_t@)">
            <summary>
            Get the current initial metadata cache configuration from the
            indicated File Access Property List.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetMdcConfig
            </summary>
            <param name="plist_id">Identifier of the file access property list.</param>
            <param name="config_ptr">Pointer to the instance of
            <code>H5AC.cache_config_t</code> in which the current metadata
            cache configuration is to be reported.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_meta_block_size(System.Int32,System.UInt64@)">
            <summary>
            Returns the current metadata block size setting.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetMetaBlockSize
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="size">Minimum size, in bytes, of metadata block
            allocations.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_nfilters(System.Int32)">
            <summary>
            Returns the number of filters in the pipeline.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetNFilters
            </summary>
            <param name="plist">Property list identifier.</param>
            <returns>Returns the number of filters in the pipeline if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_nlinks(System.Int32,System.IntPtr@)">
            <summary>
            Retrieves the maximum number of link traversals.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetNLinks
            </summary>
            <param name="lapl_id">File access property list identifier</param>
            <param name="nlinks">Maximum number of links to traverse</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_nprops(System.Int32,System.IntPtr@)">
            <summary>
            Queries the number of properties in a property list or class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetNProps
            </summary>
            <param name="plist_id">Identifier for property object to query</param>
            <param name="nprops">Number of properties in object</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_obj_track_times(System.Int32,System.UInt32@)">
            <summary>
            Determines whether times associated with an object are being recorded.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetObjTrackTimes
            </summary>
            <param name="ocpl_id">Object creation property list identifier</param>
            <param name="track_times">Boolean value, 1 or 0, specifying whether
            object times are being recorded</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_shared_mesg_index(System.Int32,System.UInt32,System.UInt32@,System.UInt32@)">
            <summary>
            Retrieves the configuration settings for a shared message index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetSharedMesgIndex
            </summary>
            <param name="fcpl_id">File creation property list identifier.</param>
            <param name="index_num">Index being configured.</param>
            <param name="mesg_type_flags">Types of messages that may be stored
            in this index.</param>
            <param name="min_mesg_size">Minimum message size.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_shared_mesg_nindexes(System.Int32,System.UInt32@)">
            <summary>
            Retrieves number of shared object header message indexes in file
            creation property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetSharedMesgNIndexes
            </summary>
            <param name="fcpl_id">File creation property list</param>
            <param name="nindexes">Number of shared object header message
            indexes available in files created with this property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_shared_mesg_phase_change(System.Int32,System.UInt32@,System.UInt32@)">
            <summary>
            Retrieves shared object header message phase change information.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetSharedMesgPhaseChange
            </summary>
            <param name="fcpl_id">File creation property list identifier</param>
            <param name="max_list">Threshold above which storage of a shared
            object header message index shifts from list to B-tree</param>
            <param name="min_btree">Threshold below which storage of a shared
            object header message index reverts to list format</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_sieve_buf_size(System.Int32,System.IntPtr@)">
            <summary>
            Returns maximum data sieve buffer size.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetSieveBufSize
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="size">Maximum size, in bytes, of data sieve buffer.</param>
            <returns>Returns a non-negative value if successful.
            Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_size(System.Int32,System.String,System.IntPtr@)">
            <summary>
            Queries the size of a property value in bytes.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetSize
            </summary>
            <param name="id">Identifier of property object to query</param>
            <param name="name">Name of property to query</param>
            <param name="size">Size of property in bytes</param>
            <returns>Returns a non-negative value if successful.
            Otherwise returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_sizes(System.Int32,System.IntPtr@,System.IntPtr@)">
            <summary>
            Retrieves the size of the offsets and lengths used in an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetSizes
            </summary>
            <param name="plist">Identifier of property list to query.</param>
            <param name="sizeof_addr">Pointer to location to return offset size
            in bytes.</param>
            <param name="sizeof_size">Pointer to location to return length size
            in bytes.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_small_data_block_size(System.Int32,System.UInt64@)">
            <summary>
            Retrieves the current small data block size setting.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetSmallData
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="size">Maximum size, in bytes, of the small data block.</param>
            <returns>Returns a non-negative value if successful; otherwise a
            negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_sym_k(System.Int32,System.UInt32@,System.UInt32@)">
            <summary>
            Retrieves the size of the symbol table B-tree 1/2 rank and the
            symbol table leaf node 1/2 size.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetSymK
            </summary>
            <param name="fcpl_id">File creation property list identifier</param>
            <param name="ik">Pointer to location to return the symbol table's
            B-tree 1/2 rank </param>
            <param name="lk">Pointer to location to return the symbol table's
            leaf node 1/2 size</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_type_conv_cb(System.Int32,HDF.PInvoke.H5T.conv_except_func_t@,System.IntPtr@)">
            <summary>
            Gets user-defined datatype conversion callback function.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetTypeConvCb
            </summary>
            <param name="plist">Dataset transfer property list identifier.</param>
            <param name="func">User-defined type conversion callback function.</param>
            <param name="op_data">User-defined input data for the callback
            function.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_userblock(System.Int32,System.UInt64@)">
            <summary>
            Retrieves the size of a user block.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetUserblock
            </summary>
            <param name="plist">Identifier for property list to query.</param>
            <param name="size">Pointer to location to return user-block size.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_version(System.Int32,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            Retrieves the version information of various objects for a file
            creation property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetVersion
            </summary>
            <param name="plist">Identifier of the file creation property list.</param>
            <param name="super">Pointer to location to return super block
            version number.</param>
            <param name="freelist">Pointer to location to return global
            freelist version number.</param>
            <param name="stab">Pointer to location to return symbol table
            version number.</param>
            <param name="shhdr">Pointer to location to return shared object
            header version number.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.get_vlen_mem_manager(System.Int32,HDF.PInvoke.H5MM.allocate_t@,System.IntPtr@,HDF.PInvoke.H5MM.free_t@,System.IntPtr@)">
            <summary>
            Gets the memory manager for variable-length datatype allocation in
            <code>H5D.read</code> and <code>H5D.vlen_reclaim</code>.
            </summary>
            <param name="plist">Identifier for the dataset transfer property
            list.</param>
            <param name="alloc">User’s allocate routine, or <code>NULL</code>
            for system <code>malloc</code>.</param>
            <param name="alloc_info">Extra parameter for user’s allocation
            routine. Contents are ignored if preceding parameter is
            <code>NULL</code>.</param>
            <param name="free">User’s free routine, or <code>NULL</code>
            for system <code>free</code>.</param>
            <param name="free_info">Extra parameter for user’s free
            routine. Contents are ignored if preceding parameter is
            <code>NULL</code>.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.insert(System.Int32,System.String,System.IntPtr,System.IntPtr,HDF.PInvoke.H5P.prp_cb2_t,HDF.PInvoke.H5P.prp_cb2_t,HDF.PInvoke.H5P.prp_cb2_t,HDF.PInvoke.H5P.prp_cb1_t,HDF.PInvoke.H5P.prp_compare_func_t,HDF.PInvoke.H5P.prp_cb1_t)">
            <summary>
            Registers a temporary property with a property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Insert2
            </summary>
            <param name="plid">Property list identifier to create temporary
            property within</param>
            <param name="name">Name of property to create</param>
            <param name="size">Size of property in bytes</param>
            <param name="value">Initial value for the property</param>
            <param name="set">Callback routine called before a new value is
            copied into the property's value</param>
            <param name="get">Callback routine called when a property value is
            retrieved from the property</param>
            <param name="delete">Callback routine called when a property is
            deleted from a property list</param>
            <param name="copy">Callback routine called when a property is
            copied from an existing property list</param>
            <param name="compare">Callback routine called when a property is
            compared with another property list</param>
            <param name="close">Callback routine called when a property list is
            being closed and the property value will be disposed of</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.isa_class(System.Int32,System.Int32)">
            <summary>
            Determines whether a property list is a member of a class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-IsAClass
            </summary>
            <param name="plist">Property list identifier</param>
            <param name="pclass">Property list class identifier</param>
            <returns>Returns a positive value if true or zero if false; returns
            a negative value on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.iterate(System.Int32,System.Int32@,HDF.PInvoke.H5P.iterate_t,System.IntPtr)">
            <summary>
            Iterates over properties in a property class or list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Iterate
            </summary>
            <param name="id">Identifier of property object to iterate over</param>
            <param name="idx">Index of the property to begin with</param>
            <param name="iter_func">Function pointer to function to be called
            with each property iterated over</param>
            <param name="iter_data">Pointer to iteration data from user</param>
            <returns>Returns the value of the last call to
            <code>iter_func</code> if it was non-zero; zero if all properties
            have been processed. Returns a negative value on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.modify_filter(System.Int32,HDF.PInvoke.H5Z.filter_t,System.UInt32,System.IntPtr,System.UInt32[])">
            <summary>
            Modifies a filter in the filter pipeline.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-ModifyFilter
            </summary>
            <param name="plist_id">Dataset or group creation property list
            identifier</param>
            <param name="filter_id">Filter to be modified.</param>
            <param name="flags">Bit vector specifying certain general
            properties of the filter.</param>
            <param name="cd_nelmts">Number of elements in <code>cd_values</code>.</param>
            <param name="cd_values">Auxiliary data for the filter.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.register(System.Int32,System.String,System.IntPtr,System.IntPtr,HDF.PInvoke.H5P.prp_cb1_t,HDF.PInvoke.H5P.prp_cb2_t,HDF.PInvoke.H5P.prp_cb2_t,HDF.PInvoke.H5P.prp_cb2_t,HDF.PInvoke.H5P.prp_cb1_t,HDF.PInvoke.H5P.prp_compare_func_t,HDF.PInvoke.H5P.prp_cb1_t)">
            <summary>
            Registers a permanent property with a property list class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Register2
            </summary>
            <param name="cls">Property list class to register permanent property within</param>
            <param name="name">Name of property to register</param>
            <param name="size">Size of property in bytes</param>
            <param name="default_value">Default value for property in newly
            created property lists</param>
            <param name="create">Callback routine called when a property list
            is being created and the property value will be initialized</param>
            <param name="set">Callback routine called before a new value is
            copied into the property's value</param>
            <param name="get">Callback routine called when a property value is
            retrieved from the property</param>
            <param name="delete">Callback routine called when a property is
            deleted from a property list</param>
            <param name="copy">Callback routine called when a property is
            copied from a property list</param>
            <param name="compare">Callback routine called when a property is
            compared with another property list</param>
            <param name="close">Callback routine called when a property list is
            being closed and the property value will be disposed of</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.remove(System.Int32,System.String)">
            <summary>
            Removes a property from a property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Remove
            </summary>
            <param name="plid">Identifier of the property list to modify</param>
            <param name="name">Name of property to remove</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.remove_filter(System.Int32,HDF.PInvoke.H5Z.filter_t)">
            <summary>
            Delete one or more filters in the filter pipeline.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-RemoveFilter
            </summary>
            <param name="plist_id">Dataset or group creation property list
            identifier.</param>
            <param name="filter">Filter to be deleted.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set(System.Int32,System.String,System.IntPtr)">
            <summary>
            Sets a property list value.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Set
            </summary>
            <param name="plid">Property list identifier to modify</param>
            <param name="name">Name of property to modify</param>
            <param name="value">Pointer to value to set the property to</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_alignment(System.Int32,System.UInt64,System.UInt64)">
            <summary>
            Sets alignment properties of a file access property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetAlignment
            </summary>
            <param name="plist">Identifier for a file access property list.</param>
            <param name="threshold">Threshold value.</param>
            <param name="alignment">Alignment value.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_alloc_time(System.Int32,HDF.PInvoke.H5D.alloc_time_t)">
            <summary>
            Sets the timing for storage space allocation.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetAllocTime
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <param name="alloc_time">When to allocate dataset storage space.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_attr_creation_order(System.Int32,System.UInt32)">
            <summary>
            Sets tracking and indexing of attribute creation order.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetAttrCreationOrder
            </summary>
            <param name="ocpl_id">Object creation property list identifier</param>
            <param name="crt_order_flags">Flags specifying whether to track and
            index attribute creation order</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_attr_phase_change(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Sets attribute storage phase change thresholds.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetAttrPhaseChange
            </summary>
            <param name="ocpl_id">Object creation property list identifier</param>
            <param name="max_compact">Maximum number of attributes to be stored
            in compact storage</param>
            <param name="min_dense">Minimum number of attributes to be stored
            in dense storage </param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_btree_ratios(System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Sets B-tree split ratios for a dataset transfer property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetBTreeRatios
            </summary>
            <param name="plist">The dataset transfer property list identifier.</param>
            <param name="left">The B-tree split ratio for left-most nodes.</param>
            <param name="middle">The B-tree split ratio for right-most nodes
            and lone nodes.</param>
            <param name="right">The B-tree split ratio for all other nodes.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_buffer(System.Int32,System.UInt64,System.IntPtr,System.IntPtr)">
            <summary>
            Sets type conversion and background buffers.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetBuffer
            </summary>
            <param name="plist">Identifier for the dataset transfer property
            list.</param>
            <param name="size">Size, in bytes, of the type conversion and
            background buffers.</param>
            <param name="tconv">Pointer to application-allocated type
            conversion buffer.</param>
            <param name="bkg">Pointer to application-allocated background
            buffer.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_cache(System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.Double)">
            <summary>
            Sets the raw data chunk cache parameters.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetCache
            </summary>
            <param name="plist_id">File access property list identifier.</param>
            <param name="mdc_nelmts">UNSUSED</param>
            <param name="rdcc_nslots">The number of chunk slots in the raw
            data chunk cache for this dataset.</param>
            <param name="rdcc_nbytes">Total size of the raw data chunk cache 
            in bytes.</param>
            <param name="rdcc_w0">The chunk preemption policy for all datasets.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_char_encoding(System.Int32,HDF.PInvoke.H5T.cset_t)">
            <summary>
            Sets the character encoding used to encode link and attribute names.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetCharEncoding
            </summary>
            <param name="plist_id">Link creation or attribute creation property
            list identifier</param>
            <param name="encoding">String encoding character set</param>
            <returns>Returns a non-negative valule if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_chunk(System.Int32,System.Int32,System.UInt64[])">
            <summary>
            Sets the size of the chunks used to store a chunked layout dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetChunk
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <param name="ndims">The number of dimensions of each chunk.</param>
            <param name="dims">An array defining the size, in dataset elements,
            of each chunk.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_chunk_cache(System.Int32,System.IntPtr,System.IntPtr,System.Double)">
            <summary>
            Sets the raw data chunk cache parameters.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetChunkCache
            </summary>
            <param name="dapl_id">Dataset access property list identifier.</param>
            <param name="rdcc_nslots">The number of chunk slots in the raw data
            chunk cache for this dataset.</param>
            <param name="rdcc_nbytes">The total size of the raw data chunk
            cache for this dataset.</param>
            <param name="rdcc_w0">The chunk preemption policy for this dataset.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_copy_object(System.Int32,System.UInt32)">
            <summary>
            Sets properties to be used when an object is copied.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetCopyObject
            </summary>
            <param name="ocpypl_id">Object copy property list identifier</param>
            <param name="copy_options">Copy option(s) to be set</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_core_write_tracking(System.Int32,System.UInt32,System.IntPtr)">
            <summary>
            Sets write tracking information for core driver, <code>H5FD_CORE</code>.
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="is_enabled">Boolean value specifying whether feature
            is enabled.</param>
            <param name="page_size">Positive integer specifying size, in bytes,
            of write aggregation pages.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_create_intermediate_group(System.Int32,System.UInt32)">
            <summary>
            Specifies in property list whether to create missing intermediate
            groups.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetCreateIntermediateGroup
            </summary>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="crt_intermed_group">Flag specifying whether to create
            intermediate groups upon the creation of an object</param>
            <returns>Returns a non-negative valule if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_data_transform(System.Int32,System.String)">
            <summary>
            Sets a data transform expression.
            </summary>
            <param name="plist_id">Identifier of the property list or class</param>
            <param name="expression">Pointer to the null-terminated data
            transform expression</param>
            <returns>Returns a non-negative valule if successful;
            otherwise returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_deflate(System.Int32,System.UInt32)">
            <summary>
            Sets deflate (GNU gzip) compression method and compression level.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetDeflate
            </summary>
            <param name="plist_id">Dataset or group creation property list
            identifier.</param>
            <param name="level">Compression level.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_driver(System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Sets a file driver.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetDriver
            </summary>
            <param name="plist_id">File access or data transfer property list
            identifier.</param>
            <param name="new_driver_id">Driver identifier.</param>
            <param name="new_driver_info">Optional struct containing driver
            properties.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_edc_check(System.Int32,HDF.PInvoke.H5Z.EDC_t)">
            <summary>
            Sets whether to enable error-detection when reading a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetEdcCheck
            </summary>
            <param name="plist">Dataset transfer property list identifier.</param>
            <param name="check">Specifies whether error checking is enabled or
            disabled for dataset read operations.</param>
            <returns>Returns a non-negative value if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_elink_acc_flags(System.Int32,System.UInt32)">
            <summary>
            Sets the external link traversal file access flag in a link access
            property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetELinkAccFlags
            </summary>
            <param name="lapl_id">Link access property list identifier</param>
            <param name="flags">The access flag for external link traversal.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_elink_cb(System.Int32,HDF.PInvoke.H5L.elink_traverse_t,System.IntPtr)">
            <summary>
            Sets the external link traversal callback function in a link access
            property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetELinkCb
            </summary>
            <param name="lapl_id">Link access property list identifier.</param>
            <param name="func">User-defined external link traversal callback
            function.</param>
            <param name="op_data">User-defined input data for the callback
            function.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_elink_fapl(System.Int32,System.Int32)">
            <summary>
            Sets a file access property list for use in accessing a file
            pointed to by an external link.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetELinkFapl
            </summary>
            <param name="lapl_id">Link access property list identifier</param>
            <param name="fapl_id">File access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_elink_file_cache_size(System.Int32,System.UInt32)">
            <summary>
            Sets the number of files that can be held open in an external link
            open file cache.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetELinkFileCacheSize
            </summary>
            <param name="fapl_id">File access property list identifier</param>
            <param name="efc_size">External link open file cache size in number
            of files.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_elink_prefix(System.Int32,System.String)">
            <summary>
            Sets prefix to be applied to external link paths.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetELinkPrefix
            </summary>
            <param name="lapl_id">Link access property list identifier</param>
            <param name="prefix">Prefix to be applied to external link paths</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_est_link_info(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Sets estimated number of links and length of link names in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetEstLinkInfo
            </summary>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="est_num_entries">Estimated number of links to be
            inserted into group</param>
            <param name="est_name_len">Estimated average length of link names</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_external(System.Int32,System.String,System.IntPtr,System.UInt64)">
            <summary>
            Adds an external file to the list of external files.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetExternal
            </summary>
            <param name="plist">Identifier of a dataset creation property list.</param>
            <param name="name">Name of an external file.</param>
            <param name="offset">Offset, in bytes, from the beginning of the
            file to the location in the file where the data starts.</param>
            <param name="size">Number of bytes reserved in the file for the
            data.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_family_offset(System.Int32,System.UInt64)">
            <summary>
            Sets offset property for low-level access to a file in a family of files.
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="offset">Offset in bytes within the HDF5 file.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fapl_core(System.Int32,System.IntPtr,System.UInt32)">
            <summary>
            Modifies the file access property list to use the
            <code>H5FD_CORE</code> driver.
            </summary>
            <param name="fapl">File access property list identifier.</param>
            <param name="increment">Size, in bytes, of memory increments.</param>
            <param name="backing_store">Boolean flag indicating whether to
            write the file contents to disk when the file is closed.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fapl_family(System.Int32,System.UInt64,System.Int32)">
            <summary>
            Sets the file access property list to use the family driver.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFaplFamily
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="memb_size">Size in bytes of each file member.</param>
            <param name="memb_fapl_id">Identifier of file access property list
            for each family member.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fapl_direct(System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sets up use of the direct I/O driver.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFaplDirect
            </summary>
            <param name="fapl_id">File access property list identifier</param>
            <param name="alignment">Required memory alignment boundary</param>
            <param name="block_size">File system block size</param>
            <param name="cbuf_size">Copy buffer size</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fapl_log(System.Int32,System.String,System.UInt64,System.IntPtr)">
            <summary>
            Sets up the logging virtual file driver (<code>H5FD_LOG</code>) for
            use.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFaplLog
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="logfile">Name of the log file.</param>
            <param name="flags">Flags specifying the types of logging activity.</param>
            <param name="buf_size">The size of the logging buffers, in bytes.</param>
            <returns>Returns non-negative if successful. Otherwise returns
            negative.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fapl_sec2(System.Int32)">
            <summary>
            Modifies the file access property list to use the
            <code>H5FD_SEC2</code> driver.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFaplSec2
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fapl_split(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Emulates the old split file driver.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFaplSplit
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="meta_ext">Metadata filename extension.</param>
            <param name="meta_plist_id">File access property list identifier
            for the metadata file.</param>
            <param name="raw_ext">Raw data filename extension.</param>
            <param name="raw_plist_id">File access property list identifier for
            the raw data file.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fapl_stdio(System.Int32)">
            <summary>
            Sets the standard I/O driver.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFaplStdio
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fapl_windows(System.Int32)">
            <summary>
            Sets the Windows I/O driver.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFaplWindows
            </summary>
            <param name="fapl_id">File access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fclose_degree(System.Int32,HDF.PInvoke.H5F.close_degree_t)">
            <summary>
            Sets the file close degree.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFcloseDegree
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="fc_degree">The file close degree property.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_file_image(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sets an initial file image in a memory buffer.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFileImage
            </summary>
            <param name="fapl_id">File access property list identifier</param>
            <param name="buf_ptr">Pointer to the initial file image, or
            <code>NULL</code> if no initial file image is desired</param>
            <param name="buf_len">Size of the supplied buffer, or 0 (zero) if
            no initial image is desired</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_file_image_callbacks(System.Int32,HDF.PInvoke.H5FD.file_image_callbacks_t@)">
            <summary>
            Sets the callbacks for working with file images.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFileImageCallbacks
            </summary>
            <param name="fapl_id">File access property list identifier</param>
            <param name="callbacks_ptr">Pointer to an instance of the
            <code>H5FD.file_image_callbacks_t</code> structure.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fill_time(System.Int32,HDF.PInvoke.H5D.fill_time_t)">
            <summary>
            Sets the time when fill values are written to a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFillTime
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <param name="fill_time">When to write fill values to a dataset.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fill_value(System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Sets the fill value for a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFillValue
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <param name="type_id">Datatype of <paramref name="value"/>.</param>
            <param name="value">Pointer to buffer containing value to use as
            fill value.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_filter(System.Int32,HDF.PInvoke.H5Z.filter_t,System.UInt32,System.IntPtr,System.UInt32[])">
            <summary>
            Adds a filter to the filter pipeline.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFilter
            </summary>
            <param name="plist_id">Dataset or group creation property list
            identifier.</param>
            <param name="filter_id">Filter identifier for the filter to be
            added to the pipeline.</param>
            <param name="flags">Bit vector specifying certain general
            properties of the filter.</param>
            <param name="cd_nelmts">Number of elements in
            <code>cd_values</code>.</param>
            <param name="cd_values">Auxiliary data for the filter.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_filter_callback(System.Int32,HDF.PInvoke.H5Z.filter_func_t,System.IntPtr)">
            <summary>
            Sets user-defined filter callback function.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFilterCallback
            </summary>
            <param name="plist">Dataset transfer property list identifier.</param>
            <param name="func">User-defined filter callback function.</param>
            <param name="op_data">User-defined input data for the callback
            function.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_fletcher32(System.Int32)">
            <summary>
            Sets up use of the Fletcher32 checksum filter.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFletcher32
            </summary>
            <param name="plist_id">Dataset or group creation property list
            identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_gc_reference(System.Int32,System.UInt32)">
            <summary>
            Sets garbage collecting references flag.
            </summary>
            <param name="plist">File access property list identifier.</param>
            <param name="gc_ref">Flag setting reference garbage collection to
            on (1) or off (0).</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_hyper_vector_size(System.Int32,System.IntPtr)">
            <summary>
            Sets number of I/O vectors to be read/written in hyperslab I/O.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetHyperVectorSize
            </summary>
            <param name="dxpl_id">Dataset transfer property list identifier.</param>
            <param name="vector_size">Number of I/O vectors to accumulate in
            memory for I/O operations.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_istore_k(System.Int32,System.UInt32)">
            <summary>
            Sets the size of the parameter used to control the B-trees for
            indexing chunked datasets.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetIstoreK
            </summary>
            <param name="fcpl_id">File creation property list identifier</param>
            <param name="ik">1/2 rank of chunked storage B-tree</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_layout(System.Int32,HDF.PInvoke.H5D.layout_t)">
            <summary>
            Sets the type of storage used to store the raw data for a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetLayout
            </summary>
            <param name="plist">Identifier of property list to query.</param>
            <param name="layout">Type of storage layout for raw data.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_libver_bounds(System.Int32,HDF.PInvoke.H5F.libver_t,HDF.PInvoke.H5F.libver_t)">
            <summary>
            Sets bounds on library versions, and indirectly format versions,
            to be used when creating objects.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetLibverBounds
            </summary>
            <param name="plist">File access property list identifier</param>
            <param name="low">The earliest version of the library that will be
            used for writing objects, indirectly specifying the earliest object
            format version that can be used when creating objects in the file.
            </param>
            <param name="high">The latest version of the library that will be
            used for writing objects, indirectly specifying the latest object
            format version that can be used when creating objects in the file.
            </param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_link_creation_order(System.Int32,System.UInt32)">
            <summary>
            Sets creation order tracking and indexing for links in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetLinkCreationOrder
            </summary>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="crt_order_flags">Creation order flag(s)</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_link_phase_change(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Sets the parameters for conversion between compact and dense groups.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetLinkPhaseChange
            </summary>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="max_compact">Maximum number of links for compact
            storage</param>
            <param name="min_dense">Minimum number of links for dense storage</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_local_heap_size_hint(System.Int32,System.IntPtr)">
            <summary>
            Specifies the anticipated maximum size of a local heap.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetLocalHeapSizeHint
            </summary>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="size_hint">Anticipated maximum size in bytes of
            local heap</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_mcdt_search_cb(System.Int32,HDF.PInvoke.H5O.mcdt_search_cb_t,System.IntPtr)">
            <summary>
            Sets the callback function that <code>H5Ocopy</code> will invoke
            before searching the entire destination file for a matching
            committed datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetMcdtSearchCb
            </summary>
            <param name="ocpypl_id">Object copy property list identifier</param>
            <param name="func">User-defined callback function</param>
            <param name="op_data">User-defined input data for the callback
            function</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_mdc_config(System.Int32,HDF.PInvoke.H5AC.cache_config_t@)">
            <summary>
            Set the initial metadata cache configuration in the indicated File
            Access Property List to the supplied value.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetMdcConfig
            </summary>
            <param name="plist_id">Identifier of the file access property list.</param>
            <param name="config_ptr">Pointer to the instance of
            <code>H5AC.cache_config_t</code> containing the desired
            configuration.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_meta_block_size(System.Int32,System.UInt64)">
            <summary>
            Sets the minimum metadata block size.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetMetaBlockSize
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="size">Minimum size, in bytes, of metadata block
            allocations.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_nbit(System.Int32)">
            <summary>
            Sets up the use of the N-Bit filter.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetNbit
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_nlinks(System.Int32,System.IntPtr)">
            <summary>
            Sets maximum number of soft or user-defined link traversals.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetNLinks
            </summary>
            <param name="lapl_id">File access property list identifier</param>
            <param name="nlinks">Maximum number of links to traverse</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_obj_track_times(System.Int32,System.UInt32)">
            <summary>
            Sets the recording of times associated with an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetObjTrackTimes
            </summary>
            <param name="ocpl_id">Object creation property list identifier</param>
            <param name="track_times">Boolean value, 1 or 0, specifying whether
            object times are to be tracked</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_scaleoffset(System.Int32,HDF.PInvoke.H5Z.SO_scale_type_t,System.Int32)">
            <summary>
            Sets up the use of the scale-offset filter.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetScaleoffset
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <param name="scale_type">Flag indicating compression method.</param>
            <param name="scale_factor">Parameter related to scale. Must be
            non-negative.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_shared_mesg_index(System.Int32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Configures the specified shared object header message index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetSharedMesgIndex
            </summary>
            <param name="fcpl_id">File creation property list identifier.</param>
            <param name="index_num">Index being configured</param>
            <param name="mesg_type_flags">Types of messages that should be
            stored in this index.</param>
            <param name="min_mesg_size">Minimum message size.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_shared_mesg_nindexes(System.Int32,System.UInt32)">
            <summary>
            Sets number of shared object header message indexes.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetSharedMesgNIndexes
            </summary>
            <param name="plist_id">File creation property list</param>
            <param name="nindexes">Number of shared object header message
            indexes to be available in files created with this property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_shared_mesg_phase_change(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Sets shared object header message storage phase change thresholds.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetSharedMesgPhaseChange
            </summary>
            <param name="fcpl_id">File creation property list identifier</param>
            <param name="max_list">Threshold above which storage of a shared
            object header message index shifts from list to B-tree</param>
            <param name="min_btree">Threshold below which storage of a shared
            object header message index reverts to list format</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_shuffle(System.Int32)">
            <summary>
            Sets up use of the shuffle filter.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetShuffle
            </summary>
            <param name="plist_id">Dataset creation property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_sieve_buf_size(System.Int32,System.IntPtr)">
            <summary>
            Sets the maximum size of the data sieve buffer.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetSieveBufSize
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="size">Maximum size, in bytes, of data sieve buffer.</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_sizes(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sets the byte size of the offsets and lengths used to address
            objects in an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetSizes
            </summary>
            <param name="plist">Identifier of property list to modify.</param>
            <param name="sizeof_addr">Size of an object offset in bytes.</param>
            <param name="sizeof_size">Size of an object length in bytes.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_small_data_block_size(System.Int32,System.UInt64)">
            <summary>
            Sets the size of a contiguous block reserved for small data.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetSmallData
            </summary>
            <param name="fapl_id">File access property list identifier.</param>
            <param name="size">Maximum size, in bytes, of the small data block.</param>
            <returns>Returns a non-negative value if successful; otherwise a
            negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_sym_k(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Sets the size of parameters used to control the symbol table nodes.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetSymK
            </summary>
            <param name="fcpl_id">File creation property list identifier</param>
            <param name="ik">Symbol table tree rank</param>
            <param name="lk">Symbol table node size</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_szip(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Sets up use of the SZIP compression filter.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetSzip
            </summary>
            <param name="plist">Dataset creation property list identifier.</param>
            <param name="options_mask">A bit-mask conveying the desired SZIP
            options.</param>
            <param name="pixels_per_block">The number of pixels or data
            elements in each data block.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_type_conv_cb(System.Int32,HDF.PInvoke.H5T.conv_except_func_t,System.IntPtr)">
            <summary>
            Sets user-defined datatype conversion callback function.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetTypeConvCb
            </summary>
            <param name="plist">Dataset transfer property list identifier.</param>
            <param name="func">User-defined type conversion callback function.</param>
            <param name="op_data">User-defined input data for the callback
            function.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_userblock(System.Int32,System.UInt64)">
            <summary>
            Sets user block size.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetUserblock
            </summary>
            <param name="plist">Identifier of property list to modify.</param>
            <param name="size">Size of the user-block in bytes.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.set_vlen_mem_manager(System.Int32,HDF.PInvoke.H5MM.allocate_t,System.IntPtr,HDF.PInvoke.H5MM.free_t,System.IntPtr)">
            <summary>
            Sets the memory manager for variable-length datatype allocation in
            <code>H5Dread</code> and <code>H5Dvlen_reclaim</code>.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetVLMemManager
            </summary>
            <param name="plist">Identifier for the dataset transfer property list.</param>
            <param name="alloc">User's allocate routine, or <code>NULL</code>
            for system <code>malloc</code>.</param>
            <param name="alloc_info">Extra parameter for user's allocation
            routine. Contents are ignored if preceding parameter is <code>NULL</code>.</param>
            <param name="free">User's free routine, or <code>NULL</code>
            for system <code>free</code>.</param>
            <param name="free_info">Extra parameter for user's free
            routine. Contents are ignored if preceding parameter is <code>NULL</code>.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5P.unregister(System.Int32,System.String)">
            <summary>
            Removes a property from a property list class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-Unregister
            </summary>
            <param name="cls">Property list class from which to remove
            permanent property</param>
            <param name="name">Name of property to remove</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5R.create(System.IntPtr,System.Int32,System.Byte[],HDF.PInvoke.H5R.type_t,System.Int32)">
            <summary>
            Creates a reference.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5R.html#Reference-Create
            </summary>
            <param name="refer">Reference created by the function call.</param>
            <param name="loc_id">Location identifier used to locate the object
            being pointed to.</param>
            <param name="name">Name of object at location
            <paramref name="loc_id"/>.</param>
            <param name="ref_type">Type of reference.</param>
            <param name="space_id">Dataspace identifier with selection. Used
            only for dataset region references; pass as -1 if reference is an
            object reference.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5R.create(System.IntPtr,System.Int32,System.String,HDF.PInvoke.H5R.type_t,System.Int32)">
            <summary>
            Creates a reference.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5R.html#Reference-Create
            </summary>
            <param name="refer">Reference created by the function call.</param>
            <param name="loc_id">Location identifier used to locate the object
            being pointed to.</param>
            <param name="name">Name of object at location
            <paramref name="loc_id"/>.</param>
            <param name="ref_type">Type of reference.</param>
            <param name="space_id">Dataspace identifier with selection. Used
            only for dataset region references; pass as -1 if reference is an
            object reference.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5R.dereference(System.Int32,HDF.PInvoke.H5R.type_t,System.IntPtr)">
            <summary>
            Opens the HDF5 object referenced.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5R.html#Reference-Dereference
            </summary>
            <param name="obj_id">Valid identifier for the file containing the
            referenced object or any object in that file.</param>
            <param name="ref_type">The reference type of
            <paramref name="refer"/>.</param>
            <param name="refer">Reference to open.</param>
            <returns>Returns identifier of referenced object if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5R.get_name(System.Int32,HDF.PInvoke.H5R.type_t,System.IntPtr,System.Byte[],System.IntPtr)">
            <summary>
            Retrieves a name for a referenced object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5R.html#Reference-GetName
            </summary>
            <param name="loc_id">Identifier for the file containing the
            reference or for any object in that file.</param>
            <param name="ref_type">Type of reference.</param>
            <param name="refer">An object or dataset region reference.</param>
            <param name="name">A buffer to place the name of the referenced
            object or dataset region. If <code>NULL</code>, then this call will
            return the size in bytes of the name.</param>
            <param name="size">The size of the <paramref name="name"/>
            buffer.</param>
            <returns>Returns the length of the name if successful, returning 0
            (zero) if no name is associated with the identifier. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5R.get_name(System.Int32,HDF.PInvoke.H5R.type_t,System.IntPtr,System.Text.StringBuilder,System.IntPtr)">
            <summary>
            Retrieves a name for a referenced object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5R.html#Reference-GetName
            </summary>
            <param name="loc_id">Identifier for the file containing the
            reference or for any object in that file.</param>
            <param name="ref_type">Type of reference.</param>
            <param name="refer">An object or dataset region reference.</param>
            <param name="name">A buffer to place the name of the referenced
            object or dataset region. If <code>NULL</code>, then this call will
            return the size in bytes of the name.</param>
            <param name="size">The size of the <paramref name="name"/>
            buffer.</param>
            <returns>Returns the length of the name if successful, returning 0
            (zero) if no name is associated with the identifier. Otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5R.get_obj_type(System.Int32,HDF.PInvoke.H5R.type_t,System.IntPtr,HDF.PInvoke.H5O.type_t@)">
            <summary>
            Retrieves the type of object that an object reference points to.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5R.html#Reference-GetObjType2
            </summary>
            <param name="loc_id">The dataset containing the reference object or
            the group containing that dataset.</param>
            <param name="ref_type">Type of reference to query.</param>
            <param name="refer">Reference to query.</param>
            <param name="obj_type">Type of referenced object.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5R.get_region(System.Int32,HDF.PInvoke.H5R.type_t,System.IntPtr)">
            <summary>
            Sets up a dataspace and selection as specified by a region reference.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5R.html#Reference-GetRegion
            </summary>
            <param name="loc_id">File identifier or identifier for any object
            in the file containing the referenced region</param>
            <param name="ref_type">Reference type of <paramref name="refer"/>,
            which must be <code>DATASET_REGION</code>.</param>
            <param name="refer">Region reference to open</param>
            <returns>Returns a valid dataspace identifier if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5R.type_t">
            <summary>
            Reference types allowed.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5R.type_t.BADTYPE">
            <summary>
            invalid Reference Type
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5R.type_t.OBJECT">
            <summary>
            Object reference
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5R.type_t.DATASET_REGION">
            <summary>
            Dataset Region Reference
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5R.type_t.MAXTYPE">
            <summary>
            highest type (Invalid as true type)
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5PL.get_loading_state(System.Int32@)">
            <summary>
            Query state of the loading of dynamic plugins.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5PL.html
            </summary>
            <param name="plugin_flags">List of dynamic plugin types that are
            enabled or disabled.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5PL.set_loading_state(System.Int32)">
            <summary>
            Control the loading of dynamic plugins.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5PL.html
            </summary>
            <param name="plugin_flags">The list of dynamic plugin types to
            enable or disable.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.close(System.Int32)">
            <summary>
            Closes the specified dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Close
            </summary>
            <param name="dset_id">Identifier of the dataset to close access to.
            </param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.create(System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new dataset and links it into the file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Create2
            </summary>
            <param name="loc_id">Location identifier</param>
            <param name="name">Dataset name</param>
            <param name="type_id">Datatype identifier</param>
            <param name="space_id">Dataspace identifier</param>
            <param name="lcpl_id">Link creation property list</param>
            <param name="dcpl_id">Dataset creation property list</param>
            <param name="dapl_id">Dataset access property list</param>
            <returns>Returns a dataset identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.create(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new dataset and links it into the file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Create2
            </summary>
            <param name="loc_id">Location identifier</param>
            <param name="name">Dataset name</param>
            <param name="type_id">Datatype identifier</param>
            <param name="space_id">Dataspace identifier</param>
            <param name="lcpl_id">Link creation property list</param>
            <param name="dcpl_id">Dataset creation property list</param>
            <param name="dapl_id">Dataset access property list</param>
            <returns>Returns a dataset identifier if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5D.create_anon(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a dataset in a file without linking it into the file structure.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-CreateAnon
            </summary>
            <param name="file_id">Identifier of the file or group within which
            to create the dataset.</param>
            <param name="type_id">Identifier of the datatype to use when
            creating the dataset.</param>
            <param name="space_id">Identifier of the dataspace to use when
            creating the dataset.</param>
            <param name="dcpl_id">Dataset creation property list identifier.</param>
            <param name="dapl_id">Dataset access property list identifier.</param>
            <returns>Returns a dataset identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.fill(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Fills dataspace elements with a fill value in a memory buffer.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Fill
            </summary>
            <param name="fill">Pointer to the fill value to be used.</param>
            <param name="fill_type">Fill value datatype identifier.</param>
            <param name="buf">Pointer to the memory buffer containing the
            selection to be filled.</param>
            <param name="buf_type">Datatype of dataspace elements to be filled.
            </param>
            <param name="space">Dataspace describing memory buffer and
            containing the selection to be filled.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.gather(System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,HDF.PInvoke.H5D.gather_func_t,System.IntPtr)">
            <summary>
            Gathers data from a selection within a memory buffer.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Gather
            </summary>
            <param name="src_space_id">Identifier for the dataspace describing
            both the dimensions of the source buffer and the selection within
            the source buffer to gather data from.</param>
            <param name="src_buf">Source buffer which the data will be gathered
            from.</param>
            <param name="type_id"> Identifier for the datatype describing the
            data in both the source and definition buffers. This is only used
            to calculate the element size.</param>
            <param name="dst_buf_size">Size in bytes of
            <paramref name="dst_buf"/>.</param>
            <param name="dst_buf">Destination buffer where the gathered data
            will be placed.</param>
            <param name="op">Callback function which handles the gathered data.
            Optional if <paramref name="dst_buf"/> is large enough to hold all
            of the gathered data; required otherwise.</param>
            <param name="op_data">User-defined pointer to data required by
            <paramref name="op"/>.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.get_access_plist(System.Int32)">
            <summary>
            Returns the dataset access property list associated with a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-GetAccessPlist
            </summary>
            <param name="dset_id">Identifier of the dataset to get access
            property list of.</param>
            <returns>Returns a dataset access property list identifier if
            Ssuccessful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.get_create_plist(System.Int32)">
            <summary>
            Returns an identifier for a copy of the dataset creation property
            list for a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-GetCreatePlist
            </summary>
            <param name="dset_id">Identifier of the dataset to query.</param>
            <returns>Returns a dataset creation property list identifier if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.get_offset(System.Int32)">
            <summary>
            Returns dataset address in file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-GetOffset
            </summary>
            <param name="dset_id">Dataset identifier.</param>
            <returns>Returns the offset in bytes; otherwise returns
            <code>HADDR_UNDEF</code>, a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.get_space(System.Int32)">
            <summary>
            Returns an identifier for a copy of the dataspace for a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-GetSpace
            </summary>
            <param name="dset_id">Identifier of the dataset to query.</param>
            <returns>Returns a dataspace identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.get_space_status(System.Int32,HDF.PInvoke.H5D.space_status_t@)">
            <summary>
            Determines whether space has been allocated for a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-GetSpaceStatus
            </summary>
            <param name="dset_id">Identifier of the dataset to query.</param>
            <param name="allocation">Space allocation status.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.get_storage_size(System.Int32)">
            <summary>
            Returns the amount of storage allocated for a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-GetStorageSize
            </summary>
            <param name="dset_id">Identifier of the dataset to query.</param>
            <returns>Returns the amount of storage space, in bytes, allocated
            for the dataset, not counting metadata; otherwise returns 0 (zero).
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.get_type(System.Int32)">
            <summary>
            Returns an identifier for a copy of the datatype for a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-GetType
            </summary>
            <param name="dset_id">Identifier of the dataset to query.</param>
            <returns>Returns a datatype identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.iterate(System.IntPtr,System.Int32,System.Int32,HDF.PInvoke.H5D.operator_t,System.IntPtr)">
            <summary>
            Iterates over all selected elements in a dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Iterate
            </summary>
            <param name="buf">Pointer to the buffer in memory containing the
            elements to iterate over</param>
            <param name="type_id">Datatype identifier for the elements stored
            in <code>buf</code></param>
            <param name="space_id">Dataspace identifier for <code>buf</code></param>
            <param name="op">Function pointer to the routine to be called for
            each element in buf iterated over</param>
            <param name="op_data">Pointer to any user-defined data
            associated with the operation</param>
            <returns>Returns the return value of the last operator if it was
            non-zero, or zero if all elements have been processed. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.open(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Opens an existing dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Open2
            </summary>
            <param name="file_id">Location identifier</param>
            <param name="name">Dataset name</param>
            <param name="dapl_id">Dataset access property list</param>
            <returns>Returns a dataset identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.open(System.Int32,System.String,System.Int32)">
            <summary>
            Opens an existing dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Open2
            </summary>
            <param name="file_id">Location identifier</param>
            <param name="name">Dataset name</param>
            <param name="dapl_id">Dataset access property list</param>
            <returns>Returns a dataset identifier if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5D.read(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Reads raw data from a dataset into a buffer.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Read
            </summary>
            <param name="dset_id">Identifier of the dataset read from.</param>
            <param name="mem_type_id">Identifier of the memory datatype.</param>
            <param name="mem_space_id">Identifier of the memory dataspace.</param>
            <param name="file_space_id">Identifier of the dataset's dataspace
            in the file.</param>
            <param name="plist_id">Identifier of a transfer property list for
            this I/O operation.</param>
            <param name="buf">Buffer to receive data read from file.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.scatter(HDF.PInvoke.H5D.scatter_func_t,System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Scatters data into a selection within a memory buffer.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Scatter
            </summary>
            <param name="op">Callback function which provides data to be
            scattered.</param>
            <param name="op_data">User-defined pointer to data required by op.</param>
            <param name="type_id">Identifier for the datatype describing the
            data in both the source and definition buffers. This is only used
            to calculate the element size.</param>
            <param name="dst_space_id">Identifier for the dataspace describing
            both the dimensions of the destination buffer and the selection
            within the destination buffer that data will be scattered to.</param>
            <param name="dst_buf">Destination buffer which the data will be
            scattered to.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.set_extent(System.Int32,System.UInt64[])">
            <summary>
            Changes the sizes of a dataset’s dimensions.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-SetExtent
            </summary>
            <param name="dset_id">Dataset identifier</param>
            <param name="size">Array containing the new magnitude of each
            dimension of the dataset.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.vlen_get_buf_size(System.Int32,System.Int32,System.Int32,System.UInt64@)">
            <summary>
            Determines the number of bytes required to store variable-length
            (VL) data.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-VLGetBuf
            </summary>
            <param name="dataset_id">Identifier of the dataset to query.</param>
            <param name="type_id">Datatype identifier.</param>
            <param name="space_id">Dataspace identifier.</param>
            <param name="size">The size in bytes of the memory buffer required
            to store the VL data.</param>
            <returns>Returns non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.vlen_reclaim(System.Int32,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Reclaims variable-length (VL) datatype memory buffers.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-VLReclaim
            </summary>
            <param name="type_id">Identifier of the datatype.</param>
            <param name="space_id">Identifier of the dataspace.</param>
            <param name="plist_id">Identifier of the property list used to
            create the buffer.</param>
            <param name="buf">Pointer to the buffer to be reclaimed.</param>
            <returns>Returns non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5D.write(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Writes raw data from a buffer to a dataset.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Write
            </summary>
            <param name="dset_id">Identifier of the dataset to write to.</param>
            <param name="mem_type_id">Identifier of the memory datatype.</param>
            <param name="mem_space_id">Identifier of the memory dataspace.</param>
            <param name="file_space_id">Identifier of the dataset's dataspace
            in the file.</param>
            <param name="plist_id">Identifier of a transfer property list for
            this I/O operation.</param>
            <param name="buf">Buffer with data to be written to the file.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5D.layout_t">
            <summary>
            Values for the H5D_LAYOUT property
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5D.chunk_index_t">
            <summary>
            Types of chunk index data structures
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5D.chunk_index_t.BTREE">
            <summary>
            v1 B-tree index [value = 0]
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5D.alloc_time_t">
            <summary>
            Values for the space allocation time property
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5D.space_status_t">
            <summary>
            Values for the status of space allocation
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5D.fill_time_t">
            <summary>
            Values for time of writing fill value property
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5D.fill_value_t">
            <summary>
            Values for fill value status
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5D.gather_func_t">
            <summary>
            Delegate for H5Dgather() callback
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Gather
            </summary>
            <param name="dst_buf">Pointer to the destination buffer which has
            been filled with the next set of elements gathered.</param>
            <param name="dst_buf_bytes_used">Pointer to the number of valid
            bytes in <paramref name="dst_buf"/>.</param>
            <param name="op_data">User-defined pointer to data required by the
            callback function.</param>
            <returns>The callback function should return zero (0) to indicate
            success, and a negative value to indicate failure.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5D.operator_t">
            <summary>
            Delegate for H5Diterate() callback
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Iterate
            </summary>
            <param name="elem">Pointer to the memory buffer containing the
            current data element</param>
            <param name="type_id">Datatype identifier for the elements stored
            in <paramref name="elem"/></param>
            <param name="ndim">Number of dimensions for the
            <paramref name="point"/> array</param>
            <param name="point">Array containing the location of the element
            within the original dataspace</param>
            <param name="op_data">Pointer to any user-defined data associated
            with the operation</param>
            <returns>Zero causes the iterator to continue, returning zero when
            all data elements have been processed. A positive value causes the
            iterator to immediately return that positive value, indicating
            short-circuit success. A negative value causes the iterator to
            immediately return that value, indicating failure.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5D.scatter_func_t">
            <summary>
            Delegate for H5Dscatter()
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5D.html#Dataset-Scatter
            </summary>
            <param name="src_buf">Pointer to the buffer holding the next set of
            elements to scatter. </param>
            <param name="src_buf_bytes_used">Pointer to the number of valid
            bytes in <paramref name="src_buf"/>.</param>
            <param name="op_data">User-defined pointer to data required by the
            callback function.</param>
            <returns>The callback function should return zero (0) to indicate
            success, and a negative value to indicate failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.close(System.Int32)">
            <summary>
            Closes the specified attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Close
            </summary>
            <param name="attr_id">Attribute to release access to.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.create(System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an attribute attached to a specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Create2
            </summary>
            <param name="loc_id">Location or object identifier</param>
            <param name="attr_name">Attribute name</param>
            <param name="type_id">Attribute datatype identifier</param>
            <param name="space_id">Attribute dataspace identifier</param>
            <param name="acpl_id">Attribute creation property list identifier</param>
            <param name="aapl_id">Attribute access property list identifier</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.create(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an attribute attached to a specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Create2
            </summary>
            <param name="loc_id">Location or object identifier</param>
            <param name="attr_name">Attribute name</param>
            <param name="type_id">Attribute datatype identifier</param>
            <param name="space_id">Attribute dataspace identifier</param>
            <param name="acpl_id">Attribute creation property list identifier</param>
            <param name="aapl_id">Attribute access property list identifier</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.create_by_name(System.Int32,System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an attribute attached to a specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-CreateByName
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name, relative to <paramref name="loc_id"/>,
            of object that attribute is to be attached to</param>
            <param name="attr_name">Attribute name</param>
            <param name="type_id">Attribute datatype identifier</param>
            <param name="space_id">Attribute dataspace identifier</param>
            <param name="acpl_id">Attribute creation property list identifier</param>
            <param name="aapl_id">Attribute access property list identifier</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.create_by_name(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an attribute attached to a specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-CreateByName
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name, relative to <paramref name="loc_id"/>,
            of object that attribute is to be attached to</param>
            <param name="attr_name">Attribute name</param>
            <param name="type_id">Attribute datatype identifier</param>
            <param name="space_id">Attribute dataspace identifier</param>
            <param name="acpl_id">Attribute creation property list identifier</param>
            <param name="aapl_id">Attribute access property list identifier</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.delete(System.Int32,System.Byte[])">
            <summary>
            Deletes an attribute from a specified location.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Delete
            </summary>
            <param name="loc_id">Identifier of the dataset, group, or named
            datatype to have the attribute deleted from.</param>
            <param name="name">Name of the attribute to delete.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.delete(System.Int32,System.String)">
            <summary>
            Deletes an attribute from a specified location.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Delete
            </summary>
            <param name="loc_id">Identifier of the dataset, group, or named
            datatype to have the attribute deleted from.</param>
            <param name="name">Name of the attribute to delete.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.delete_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Int32)">
            <summary>
            Deletes an attribute from an object according to index order.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-DeleteByIdx
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name of object, relative to location, from
            which attribute is to be removed</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which to iterate over index</param>
            <param name="n">Offset within index</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.delete_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Int32)">
            <summary>
            Deletes an attribute from an object according to index order.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-DeleteByIdx
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name of object, relative to location, from
            which attribute is to be removed</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which to iterate over index</param>
            <param name="n">Offset within index</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.delete_by_name(System.Int32,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Removes an attribute from a specified location.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-DeleteByName
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name of object, relative to location, from
            which attribute is to be removed</param>
            <param name="attr_name">Name of attribute to delete</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.delete_by_name(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Removes an attribute from a specified location.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-DeleteByName
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name of object, relative to location, from
            which attribute is to be removed</param>
            <param name="attr_name">Name of attribute to delete</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.exists(System.Int32,System.Byte[])">
            <summary>
            Determines whether an attribute with a given name exists on an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Exists
            </summary>
            <param name="obj_id">Object identifier</param>
            <param name="attr_name">Attribute name</param>
            <returns>When successful, returns a positive value, for
            <code>TRUE</code>, or 0 (zero), for <code>FALSE</code>. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.exists(System.Int32,System.String)">
            <summary>
            Determines whether an attribute with a given name exists on an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Exists
            </summary>
            <param name="obj_id">Object identifier</param>
            <param name="attr_name">Attribute name</param>
            <returns>When successful, returns a positive value, for
            <code>TRUE</code>, or 0 (zero), for <code>FALSE</code>. Otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.exists_by_name(System.Int32,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Determines whether an attribute with a given name exists on an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-ExistsByName
            </summary>
            <param name="loc_id">Location identifier</param>
            <param name="obj_name">Object name</param>
            <param name="attr_name">Attribute name</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>When successful, returns a positive value, for
            <code>TRUE</code>, or 0 (zero), for <code>FALSE</code>. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.exists_by_name(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Determines whether an attribute with a given name exists on an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-ExistsByName
            </summary>
            <param name="loc_id">Location identifier</param>
            <param name="obj_name">Object name</param>
            <param name="attr_name">Attribute name</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>When successful, returns a positive value, for
            <code>TRUE</code>, or 0 (zero), for <code>FALSE</code>. Otherwise
            returns a negative value.</returns>
            <remarks>ANSI strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_create_plist(System.Int32)">
            <summary>
            Gets an attribute creation property list identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetCreatePlist
            </summary>
            <param name="attr_id">Identifier of the attribute.</param>
            <returns>Returns an identifier for the attribute’s creation property
            list if successful. Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_info(System.Int32,HDF.PInvoke.H5A.info_t@)">
            <summary>
            Retrieves attribute information, by attribute identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetInfo
            </summary>
            <param name="attr_id">Attribute identifier</param>
            <param name="ainfo">Attribute information struct</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_info_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,HDF.PInvoke.H5A.info_t@,System.Int32)">
            <summary>
            Retrieves attribute information, by attribute index position.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetInfoByIdx
            </summary>
            <param name="loc_id">Location of object to which attribute is
            attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to location</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Index traversal order</param>
            <param name="n">Attribute’s position in index</param>
            <param name="ainfo">Struct containing returned attribute
            information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_info_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,HDF.PInvoke.H5A.info_t@,System.Int32)">
            <summary>
            Retrieves attribute information, by attribute index position.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetInfoByIdx
            </summary>
            <param name="loc_id">Location of object to which attribute is
            attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to location</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Index traversal order</param>
            <param name="n">Attribute’s position in index</param>
            <param name="ainfo">Struct containing returned attribute
            information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_info_by_name(System.Int32,System.Byte[],System.Byte[],HDF.PInvoke.H5A.info_t@,System.Int32)">
            <summary>
            Retrieves attribute information, by attribute name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetInfoByName
            </summary>
            <param name="loc_id">Location of object to which attribute is
            attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to location</param>
            <param name="attr_name">Attribute name</param>
            <param name="ainfo">Struct containing returned attribute
            information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_info_by_name(System.Int32,System.String,System.String,HDF.PInvoke.H5A.info_t@,System.Int32)">
            <summary>
            Retrieves attribute information, by attribute name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetInfoByName
            </summary>
            <param name="loc_id">Location of object to which attribute is
            attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to location</param>
            <param name="attr_name">Attribute name</param>
            <param name="ainfo">Struct containing returned attribute
            information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_name(System.Int32,System.IntPtr,System.Byte[])">
            <summary>
            Gets an attribute name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetName
            </summary>
            <param name="attr_id">Identifier of the attribute.</param>
            <param name="size">The size of the buffer to store the name
            in.</param>
            <param name="name">Buffer to store name in.</param>
            <returns>Returns the length of the attribute's name, which may be
            longer than <code>buf_size</code>, if successful. Otherwise returns
            a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_name(System.Int32,System.IntPtr,System.Text.StringBuilder)">
            <summary>
            Gets an attribute name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetName
            </summary>
            <param name="attr_id">Identifier of the attribute.</param>
            <param name="size">The size of the buffer to store the name
            in.</param>
            <param name="name">Buffer to store name in.</param>
            <returns>Returns the length of the attribute's name, which may be
            longer than <code>buf_size</code>, if successful. Otherwise returns
            a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_name_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Byte[],System.IntPtr,System.Int32)">
            <summary>
            Gets an attribute name, by attribute index position.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetNameByIdx
            </summary>
            <param name="loc_id">Location of object to which attribute is
            attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to location</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Index traversal order</param>
            <param name="n">Attribute’s position in index</param>
            <param name="name">Attribute name</param>
            <param name="size">Size, in bytes, of attribute name</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns attribute name size, in bytes, if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_name_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Text.StringBuilder,System.IntPtr,System.Int32)">
            <summary>
            Gets an attribute name, by attribute index position.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetNameByIdx
            </summary>
            <param name="loc_id">Location of object to which attribute is
            attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to location</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Index traversal order</param>
            <param name="n">Attribute’s position in index</param>
            <param name="name">Attribute name</param>
            <param name="size">Size, in bytes, of attribute name</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns attribute name size, in bytes, if successful;
            otherwise returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_space(System.Int32)">
            <summary>
            Gets a copy of the dataspace for an attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetSpace
            </summary>
            <param name="attr_id">Identifier of an attribute.</param>
            <returns>Returns attribute dataspace identifier if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_storage_size(System.Int32)">
            <summary>
            Returns the amount of storage required for an attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetStorageSize
            </summary>
            <param name="attr_id">Identifier of the attribute to query.</param>
            <returns>Returns the amount of storage size allocated for the
            attribute; otherwise returns 0 (zero).</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.get_type(System.Int32)">
            <summary>
            Returns the amount of storage required for an attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-GetType
            </summary>
            <param name="attr_id">Identifier of an attribute.</param>
            <returns>Returns a datatype identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.iterate(System.Int32,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64@,HDF.PInvoke.H5A.operator_t,System.IntPtr)">
            <summary>
            Calls user-defined function for each attribute on an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Iterate2
            </summary>
            <param name="obj_id">Identifier for object to which attributes are
            attached; may be group, dataset, or named datatype.</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which to iterate over index</param>
            <param name="n">Initial and returned offset within index</param>
            <param name="op">User-defined function to pass each attribute to</param>
            <param name="op_data">User data to pass through to and to be
            returned by iterator operator function</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value. Further note that this function returns
            the return value of the last operator if it was non-zero, which
            can be a negative value, zero if all attributes were processed, or
            a positive value indicating short-circuit success
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.iterate_by_name(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64@,HDF.PInvoke.H5A.operator_t,System.IntPtr,System.Int32)">
            <summary>
            Calls user-defined function for each attribute on an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-IterateByName
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name of object, relative to location</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which to iterate over index</param>
            <param name="n">Initial and returned offset within index</param>
            <param name="op">User-defined function to pass each attribute to</param>
            <param name="op_data">User data to pass through to and to be
            returned by iterator operator function</param>
            <param name="lapd_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value. Further note that this function returns
            the return value of the last operator if it was non-zero, which can
            be a negative value, zero if all attributes were processed, or a
            positive value indicating short-circuit success</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.iterate_by_name(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64@,HDF.PInvoke.H5A.operator_t,System.IntPtr,System.Int32)">
            <summary>
            Calls user-defined function for each attribute on an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-IterateByName
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name of object, relative to location</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which to iterate over index</param>
            <param name="n">Initial and returned offset within index</param>
            <param name="op">User-defined function to pass each attribute to</param>
            <param name="op_data">User data to pass through to and to be
            returned by iterator operator function</param>
            <param name="lapd_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value. Further note that this function returns
            the return value of the last operator if it was non-zero, which can
            be a negative value, zero if all attributes were processed, or a
            positive value indicating short-circuit success</returns>
            <remarks>ANSI strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.open(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Opens an attribute for an object specified by object identifier
            and attribute name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Open
            </summary>
            <param name="obj_id">Identifer for object to which attribute is
            attached</param>
            <param name="attr_name">Name of attribute to open</param>
            <param name="aapl_id">Attribute access property list</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.open(System.Int32,System.String,System.Int32)">
            <summary>
            Opens an attribute for an object specified by object identifier
            and attribute name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Open
            </summary>
            <param name="obj_id">Identifer for object to which attribute is
            attached</param>
            <param name="attr_name">Name of attribute to open</param>
            <param name="aapl_id">Attribute access property list</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.open_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Int32,System.Int32)">
            <summary>
            Opens an attribute for an object specified by attribute index
            position.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-OpenByIdx
            </summary>
            <param name="loc_id">Location of object to which attribute is
            attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to location</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Index traversal order</param>
            <param name="n">Attribute’s position in index</param>
            <param name="aapl_id">Attribute access property list</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.open_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Int32,System.Int32)">
            <summary>
            Opens an attribute for an object specified by attribute index
            position.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-OpenByIdx
            </summary>
            <param name="loc_id">Location of object to which attribute is
            attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to location</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Index traversal order</param>
            <param name="n">Attribute’s position in index</param>
            <param name="aapl_id">Attribute access property list</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.open_by_name(System.Int32,System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Opens an attribute for an object by object name and attribute name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-OpenByName
            </summary>
            <param name="loc_id">Location from which to find object to which
            attribute is attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to <paramref name="loc_id"/></param>
            <param name="attr_name">Name of attribute to open</param>
            <param name="aapl_id">Attribute access property list </param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.open_by_name(System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Opens an attribute for an object by object name and attribute name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-OpenByName
            </summary>
            <param name="loc_id">Location from which to find object to which
            attribute is attached</param>
            <param name="obj_name">Name of object to which attribute is
            attached, relative to <paramref name="loc_id"/></param>
            <param name="attr_name">Name of attribute to open</param>
            <param name="aapl_id">Attribute access property list </param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns an attribute identifier if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.read(System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Reads an attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Read
            </summary>
            <param name="attr_id">Identifier of an attribute to read.</param>
            <param name="type_id"> Identifier of the attribute datatype
            (in memory).</param>
            <param name="buf">Buffer for data to be read.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.rename(System.Int32,System.Byte[],System.Byte[])">
            <summary>
            Renames an attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Rename
            </summary>
            <param name="loc_id">Location of the attribute.</param>
            <param name="old_name">Name of the attribute to be changed.</param>
            <param name="new_name">New name for the attribute.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.S</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.rename(System.Int32,System.String,System.String)">
            <summary>
            Renames an attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Rename
            </summary>
            <param name="loc_id">Location of the attribute.</param>
            <param name="old_name">Name of the attribute to be changed.</param>
            <param name="new_name">New name for the attribute.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.rename_by_name(System.Int32,System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Renames an attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-RenameByName
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name of object, relative to location, whose
            attribute is to be renamed</param>
            <param name="old_attr_name">Prior attribute name</param>
            <param name="new_attr_name">New attribute name</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5A.rename_by_name(System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            Renames an attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-RenameByName
            </summary>
            <param name="loc_id">Location or object identifier; may be dataset
            or group</param>
            <param name="obj_name">Name of object, relative to location, whose
            attribute is to be renamed</param>
            <param name="old_attr_name">Prior attribute name</param>
            <param name="new_attr_name">New attribute name</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5A.write(System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Writes data to an attribute.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Write
            </summary>
            <param name="attr_id">Identifier of an attribute to write.</param>
            <param name="mem_type_id">Identifier of the attribute datatype
            (in memory).</param>
            <param name="buf">Data to be written.</param>
        </member>
        <member name="T:HDF.PInvoke.H5A.info_t">
            <summary>
            Information struct for attribute
            (for H5Aget_info/H5Aget_info_by_idx)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5A.info_t.corder_valid">
            <summary>
            Indicate if creation order is valid
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5A.info_t.corder">
            <summary>
            Creation order
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5A.info_t.cset">
            <summary>
            Character set of attribute name
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5A.info_t.data_size">
            <summary>
            Size of raw data
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5A.operator_t">
            <summary>
            Delegate for H5Aiterate2() callbacks
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5A.html#Annot-Iterate2
            </summary>
            <param name="location_id">The location identifier for the group or
            dataset being iterated over</param>
            <param name="attr_name">The name of the current object attribute.</param>
            <param name="ainfo">The attribute’s <code>info</code>struct</param>
            <param name="op_data">A pointer referencing operator data passed
            to <code>iterate</code></param>
            <returns>Valid return values from an operator and the resulting
            H5Aiterate2 and op behavior are as follows: Zero causes the iterator
            to continue, returning zero when all attributes have been processed.
            A positive value causes the iterator to immediately return that
            positive value, indicating short-circuit success. The iterator can
            be restarted at the next attribute, as indicated by the return
            value of <code>n</code>. A negative value causes the iterator to
            immediately return that value, indicating failure. The iterator can
            be restarted at the next attribute, as indicated by the return value
            of <code>n</code>.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5DLLImporter">
            <summary>
            Helper class used to fetch public variables (e.g. native type values)
            exported by the HDF5 DLL
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5DO.write_chunk(System.Int32,System.Int32,System.UInt32,System.UInt64@,System.IntPtr,System.IntPtr)">
            <summary>
            Writes a raw data chunk from a buffer directly to a dataset.
            See https://www.hdfgroup.org/HDF5/doc/HL/RM_HDF5Optimized.html
            </summary>
            <param name="dset_id">Identifier for the dataset to write to</param>
            <param name="dxpl_id">UNUSED</param>
            <param name="filter_mask">Mask for identifying the filters in use</param>
            <param name="offset">Logical position of the chunk’s first element
            in the dataspace</param>
            <param name="data_size">Size of the actual data to be written in
            bytes</param>
            <param name="buf">Buffer containing data to be written to the file</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="F:HDF.PInvoke.H5F.ACC_RDONLY">
            <summary>
            absence of rdwr => rd-only
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.ACC_RDWR">
            <summary>
            open for read and write
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.ACC_TRUNC">
            <summary>
            overwrite existing files
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.ACC_EXCL">
            <summary>
            fail if file already exists
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.ACC_CREAT">
            <summary>
            create non-existing files
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.ACC_DEFAULT">
            <summary>
            Value passed to H5P.set_elink_acc_flags to cause flags to be taken
            from the parent file.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.OBJ_FILE">
            <summary>
            File objects
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.OBJ_DATASET">
            <summary>
            Dataset objects
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.OBJ_GROUP">
            <summary>
            Group objects
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.OBJ_DATATYPE">
            <summary>
            Named datatype objects
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.OBJ_ATTR">
            <summary>
            Attribute objects
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.OBJ_ALL">
            <summary>
            All objects:
            H5F_OBJ_FILE|H5F_OBJ_DATASET|H5F_OBJ_GROUP|H5F_OBJ_DATATYPE|H5F_OBJ_ATTR)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.OBJ_LOCAL">
            <summary>
            All local objects:
            Restrict search to objects opened through current file ID
            (as opposed to objects opened through any file ID accessing this
            file)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.H5F_UNLIMITED">
            <summary>
            Unlimited file size for H5P.set_external()
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5F.clear_elink_file_cache(System.Int32)">
            <summary>
            Clears the external link open file cache.
            https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-ClearELinkFileCache
            </summary>
            <param name="file_id">File identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.close(System.Int32)">
            <summary>
            Terminates access to an HDF5 file.
            https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Close
            </summary>
            <param name="file_id">Identifier of a file to which access is
            terminated.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.create(System.String,System.UInt32,System.Int32,System.Int32)">
            <summary>
            Creates an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-CreateS
            </summary>
            <param name="filename">Name of the file to access.</param>
            <param name="flags">File access flags (H5.ACC_*).</param>
            <param name="create_plist">File creation property list identifier.
            </param>
            <param name="access_plist">File access property list identifier.
            </param>
            <returns>Returns a file identifier if successful; otherwise returns
            a negative value.</returns>
            <remarks><paramref name="filename"/> MUST be an ASCII string.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5F.flush(System.Int32,HDF.PInvoke.H5F.scope_t)">
            <summary>
            Flushes all buffers associated with a file to disk.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Flush
            </summary>
            <param name="object_id">Identifier of object used to identify the
            file.</param>
            <param name="scope">Specifies the scope of the flushing
            action.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_access_plist(System.Int32)">
            <summary>
            Returns a file access property list identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetAccessPlist
            </summary>
            <param name="file_id">Identifier of file of which to get access
            property list</param>
            <returns>Returns a file access property list identifier if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_create_plist(System.Int32)">
            <summary>
            Returns a file creation property list identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetCreatePlist
            </summary>
            <param name="file_id">Identifier of file of which to get creation
            property list</param>
            <returns>Returns a file access property list identifier if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_file_image(System.Int32,System.IntPtr,System.IntPtr@)">
            <summary>
            Retrieves a copy of the image of an existing, open file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetFileImage
            </summary>
            <param name="file_id">Target file identifier</param>
            <param name="buf_ptr">Pointer to the buffer into which the image of
            the HDF5 file is to be copied</param>
            <param name="buf_len">Size of the supplied buffer</param>
            <returns>If successful, returns the size in bytes of the buffer
            required to store the file image if successful; otherwise returns
            a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_filesize(System.Int32,System.UInt64@)">
            <summary>
            Returns the size of an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetFilesize
            </summary>
            <param name="file_id">Identifier of a currently-open HDF5
            file</param>
            <param name="size">Size of the file, in bytes.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_freespace(System.Int32)">
            <summary>
            Returns the amount of free space in a file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetFreespace
            </summary>
            <param name="file_id">Identifier of a currently-open HDF5
            file</param>
            <returns>Returns the amount of free space in the file if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_info(System.Int32,HDF.PInvoke.H5F.info_t@)">
            <summary>
            Returns global information for a file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetInfo
            </summary>
            <param name="obj_id">Object identifier for any object in the
            file.</param>
            <param name="bh_info">Struct containing global file
            information.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_intent(System.Int32,System.UInt32@)">
            <summary>
            Determines the read/write or read-only status of a file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetIntent
            </summary>
            <param name="file_id">File identifier for a currently-open HDF5
            file.</param>
            <param name="intent">Intended access mode flag as originally passed
            with H5Fopen.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_mdc_config(System.Int32,HDF.PInvoke.H5AC.cache_config_t@)">
            <summary>
            Obtain current metadata cache configuration for target file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetMdcConfig
            </summary>
            <param name="file_id">Identifier of the target file</param>
            <param name="config_ptr">Pointer to the instance of
            <code>H5AC_cache_config_t</code> in which the current metadata
            cache configuration is to be reported.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_mdc_hit_rate(System.Int32,System.Double@)">
            <summary>
            Obtain target file's metadata cache hit rate.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetMdcHitRate
            </summary>
            <param name="file_id">Identifier of the target file</param>
            <param name="hit_rate_ptr">Pointer to the double in which the hit
            rate is returned.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_mdc_size(System.Int32,System.IntPtr@,System.IntPtr@,System.IntPtr@,System.Int32@)">
            <summary>
            Obtain current metadata cache size data for specified file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetMdcSize
            </summary>
            <param name="file_id">Identifier of the target file</param>
            <param name="max_size_ptr">Pointer to the location in which the
            current cache maximum size is to be returned, or NULL if this datum
            is not desired.</param>
            <param name="min_clean_size_ptr">Pointer to the location in which
            the current cache minimum clean size is to be returned, or NULL if
            that datum is not desired.</param>
            <param name="cur_size_ptr">Pointer to the location in which the
            current cache size is to be returned, or NULL if that datum is not
            desired.</param>
            <param name="cur_num_entries_ptr">Pointer to the location in which
            the current number of entries in the cache is to be returned, or
            NULL if that datum is not desired.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_name(System.Int32,System.Text.StringBuilder,System.IntPtr)">
            <summary>
            Retrieves name of file to which object belongs.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetName
            </summary>
            <param name="obj_id">Identifier of the object for which the
            associated filename is sought.</param>
            <param name="name">Buffer to contain the returned filename.</param>
            <param name="size">Buffer size, in bytes.</param>
            <returns>Returns the length of the filename if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_obj_count(System.Int32,System.UInt32)">
            <summary>
            Returns the number of open object identifiers for an open file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetObjCount
            </summary>
            <param name="file_id">Identifier of a currently-open HDF5 file.
            </param>
            <param name="types">Type of object for which identifiers are to be
            returned.</param>
            <returns>Returns the number of open objects if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_obj_ids(System.Int32,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Returns a list of open object identifiers.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetObjIDs
            </summary>
            <param name="file_id">Identifier of a currently-open HDF5 file.</param>
            <param name="types">Type of object for which identifiers are to be
            returned.</param>
            <param name="max_objs">Maximum number of object identifiers to be
            returned.</param>
            <param name="obj_id_list">Pointer to the returned list of open
            object identifiers.</param>
            <returns>Returns number of objects placed into obj_id_list if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.get_vfd_handle(System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            Returns pointer to the file handle from the virtual file driver.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-GetVfdHandle
            </summary>
            <param name="file_id">Identifier of the file to be queried.</param>
            <param name="fapl">File access property list identifier.</param>
            <param name="file_handle">Pointer to the file handle being used by
            the low-level virtual file driver.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.is_hdf5(System.String)">
            <summary>
            Determines whether a file is in the HDF5 format.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-IsHDF5
            </summary>
            <returns>When successful, returns a positive value, for TRUE,
            or 0 (zero), for FALSE. On any error, including the case that
            the file does not exist, returns a negative value.</returns>
            <remarks><paramref name="filename"/> MUST be an ASCII string.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5F.mount(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Mounts a file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Mount
            </summary>
            <param name="loc">Identifier for of file or group in which name
            is defined.</param>
            <param name="name">Name of the group onto which the file specified
            by <paramref name="child"/> is to be mounted.</param>
            <param name="child">Identifier of the file to be mounted.</param>
            <param name="plist">File mount property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.mount(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Mounts a file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Mount
            </summary>
            <param name="loc">Identifier for of file or group in which name
            is defined.</param>
            <param name="name">Name of the group onto which the file specified
            by <paramref name="child"/> is to be mounted.</param>
            <param name="child">Identifier of the file to be mounted.</param>
            <param name="plist">File mount property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5F.open(System.String,System.UInt32,System.Int32)">
            <summary>
            Opens an existing HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Open
            </summary>
            <param name="filename">Name of the file to be opened.</param>
            <param name="flags">File access flags. (<code>H5F_ACC_RDWR</code>
            or <code>H5F_ACC_RDONLY</code>)</param>
            <param name="plist">Identifier for the file access properties
            list.</param>
            <returns>Returns a file identifier if successful; otherwise returns
            a negative value.</returns>
            <remarks><paramref name="filename"/> MUST be an ASCII string!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5F.reopen(System.Int32)">
            <summary>
            Returns a new identifier for a previously-opened HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Reopen
            </summary>
            <param name="file_id">Identifier of a file for which an additional
            identifier is required.</param>
            <returns>Returns a new file identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.reset_mdc_hit_rate_stats(System.Int32)">
            <summary>
            Reset hit rate statistics counters for the target file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-ResetMdcHitRateStats
            </summary>
            <param name="file_id">Identifier of the target file.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.set_mdc_config(System.Int32,HDF.PInvoke.H5AC.cache_config_t@)">
            <summary>
            Attempt to configure metadata cache of target file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-SetMdcConfig
            </summary>
            <param name="file_id">Identifier of the target file</param>
            <param name="config_ptr">Pointer to the instance of
            <code>H5AC_cache_config_t</code> containing the desired
            configuration.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.unmount(System.Int32,System.Byte[])">
            <summary>
            Unmounts a file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Unmount
            </summary>
            <param name="loc">File or group identifier for the location at
            which the specified file is to be unmounted.</param>
            <param name="name">Name of the mount point.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5F.unmount(System.Int32,System.String)">
            <summary>
            Unmounts a file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Unmount
            </summary>
            <param name="loc">File or group identifier for the location at
            which the specified file is to be unmounted.</param>
            <param name="name">Name of the mount point.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5F.scope_t">
            <summary>
            The difference between a single file and a set of mounted files
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.scope_t.LOCAL">
            <summary>
            specified file handle only [value = 0].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.scope_t.GLOBAL">
            <summary>
            entire virtual file [value = 1].
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5F.close_degree_t">
            <summary>
            Flags that control the behavior of H5F.close()
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.close_degree_t.DEFAULT">
            <summary>
            Use the degree pre-defined by underlining VFL [value = 0].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.close_degree_t.WEAK">
            <summary>
            file closes only after all opened objects are closed [value = 1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.close_degree_t.SEMI">
            <summary>
            if no opened objects, file is close; otherwise, file close
            fails [value = 2].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.close_degree_t.STRONG">
            <summary>
            if there are opened objects, close them first, then close file
            [value = 3].
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5F.info_t">
            <summary>
            Current "global" information about a file
            (just size info currently)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.info_t.super_ext_size">
            <summary>
            Superblock extension size
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.info_t.sohm_t.hdr_size">
            <summary>
            Shared object header message header size
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.info_t.sohm_t.msgs_info">
            <summary>
            Shared object header message index and heap size
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5F.mem_t">
            <summary>
             Types of allocation requests
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.mem_t.NOLIST">
            <summary>
            Data should not appear in the free list. [value = -1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.mem_t.DEFAULT">
            <summary>
            Value not yet set.  Can also be the datatype set in a larger
            allocation that will be suballocated by the library.
            Must be zero. [value = 0].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.mem_t.SUPER">
            <summary>
            Superblock data [value = 1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.mem_t.BTREE">
            <summary>
            B-tree data [value = 2].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.mem_t.DRAW">
            <summary>
            Raw data (content of datasets, etc.) [value = 3].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.mem_t.GHEAP">
            <summary>
            Global heap data [value = 4].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.mem_t.LHEAP">
            <summary>
            Local heap data [value = 5].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.mem_t.OHDR">
            <summary>
            Object header data [value = 6].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.mem_t.NTYPES">
            <summary>
            Sentinel value [value = 7].
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5F.libver_t">
            <summary>
            Library's file format versions
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.libver_t.EARLIEST">
            <summary>
            Use the earliest possible format for storing objects
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5F.libver_t.LATEST">
            <summary>
            Use the latest possible format available for storing objects
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5G.close(System.Int32)">
            <summary>
            Closes the specified group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-Close
            </summary>
            <param name="group_id">Group identifier to release.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5G.create(System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new group and links it into the file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-Create2
            </summary>
            <param name="loc_id">File or group identifier</param>
            <param name="name">Absolute or relative name of the link to the
            new group</param>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="gapl_id">Group access property list identifier</param>
            <returns>Returns a group identifier if successful; otherwise returns
            a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5G.create(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new group and links it into the file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-Create2
            </summary>
            <param name="loc_id">File or group identifier</param>
            <param name="name">Absolute or relative name of the link to the
            new group</param>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="gapl_id">Group access property list identifier</param>
            <returns>Returns a group identifier if successful; otherwise returns
            a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5G.create_anon(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new empty group without linking it into the file structure.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-CreateAnon
            </summary>
            <param name="loc_id">File or group identifier specifying the file
            in which the new group is to be created</param>
            <param name="gcpl_id">Group creation property list identifier</param>
            <param name="gapl_id">Group access property list identifier</param>
            <returns>Returns a new group identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5G.get_create_plist(System.Int32)">
            <summary>
            Gets a group creation property list identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-GetCreatePlist
            </summary>
            <param name="group_id"> Identifier of the group.</param>
            <returns>Returns an identifier for the group’s creation property
            list if successful. Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5G.get_info(System.Int32,HDF.PInvoke.H5G.info_t@)">
            <summary>
            Retrieves information about a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-GetInfo
            </summary>
            <param name="loc_id">Group identifier</param>
            <param name="ginfo">Struct in which group information is returned
            </param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5G.get_info_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,HDF.PInvoke.H5G.info_t@,System.Int32)">
            <summary>
            Retrieves information about a group, according to the group’s
            position within an index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-GetInfoByIdx
            </summary>
            <param name="loc_id">File or group identifier</param>
            <param name="group_name">Name of group containing group for which
            information is to be retrieved</param>
            <param name="idx_type">Index type</param>
            <param name="order">Order of the count in the index</param>
            <param name="n">Position in the index of the group for which
            information is retrieved</param>
            <param name="ginfo">Struct in which group information is returned</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5G.get_info_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,HDF.PInvoke.H5G.info_t@,System.Int32)">
            <summary>
            Retrieves information about a group, according to the group’s
            position within an index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-GetInfoByIdx
            </summary>
            <param name="loc_id">File or group identifier</param>
            <param name="group_name">Name of group containing group for which
            information is to be retrieved</param>
            <param name="idx_type">Index type</param>
            <param name="order">Order of the count in the index</param>
            <param name="n">Position in the index of the group for which
            information is retrieved</param>
            <param name="ginfo">Struct in which group information is returned</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5G.get_info_by_name(System.Int32,System.Byte[],HDF.PInvoke.H5G.info_t@,System.Int32)">
            <summary>
            Retrieves information about a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-GetInfoByName
            </summary>
            <param name="loc_id">File or group identifier</param>
            <param name="name">Name of group for which information is to be
            retrieved</param>
            <param name="ginfo">Struct in which group information is returned</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5G.get_info_by_name(System.Int32,System.String,HDF.PInvoke.H5G.info_t@,System.Int32)">
            <summary>
            Retrieves information about a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-GetInfoByName
            </summary>
            <param name="loc_id">File or group identifier</param>
            <param name="name">Name of group for which information is to be
            retrieved</param>
            <param name="ginfo">Struct in which group information is returned</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strngs ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5G.open(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Opens an existing group with a group access property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-Open2
            </summary>
            <param name="loc_id">File or group identifier specifying the
            location of the group to be opened</param>
            <param name="name">Name of the group to open</param>
            <param name="gapl_id">Group access property list identifier</param>
            <returns>Returns a group identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5G.open(System.Int32,System.String,System.Int32)">
            <summary>
            Opens an existing group with a group access property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-Open2
            </summary>
            <param name="loc_id">File or group identifier specifying the
            location of the group to be opened</param>
            <param name="name">Name of the group to open</param>
            <param name="gapl_id">Group access property list identifier</param>
            <returns>Returns a group identifier if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5G.storage_type_t">
            <summary>
            Types of link storage for groups
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5G.storage_type_t.UNKNOWN">
            <summary>
            Unknown link storage type [value = -1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5G.storage_type_t.SYMBOL_TABLE">
            <summary>
            Links in group are stored with a "symbol table"
            (this is sometimes called "old-style" groups) [value = 0].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5G.storage_type_t.COMPACT">
            <summary>
            Links are stored in object header [value = 1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5G.storage_type_t.DENSE">
            <summary>
            Links are stored in fractal heap and indexed with v2 B-tree
            [value = 2].
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5G.info_t">
            <summary>
            Information struct for group
            (for H5Gget_info/H5Gget_info_by_name/H5Gget_info_by_idx)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5G.info_t.storage_type">
            <summary>
            Type of storage for links in group
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5G.info_t.nlinks">
            <summary>
            Number of links in group
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5G.info_t.max_corder">
            <summary>
            Current max. creation order value for group
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5G.info_t.mounted">
            <summary>
            Whether group has a file mounted on it
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.H5I_INVALID_HID">
            <summary>
            An invalid object ID. This is also negative for error return.
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5I.clear_type(HDF.PInvoke.H5I.type_t,System.UInt32)">
            <summary>
            Deletes all identifiers of the given type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-ClearType
            </summary>
            <param name="type">Identifier of identifier type which is to be
            cleared of identifiers</param>
            <param name="force">Whether or not to force deletion of all
            identifiers</param>
            <returns>Returns non-negative on success, negative on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.dec_ref(System.Int32)">
            <summary>
            Decrements the reference count for an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-DecRef
            </summary>
            <param name="obj_id">Object identifier whose reference count will
            be modified.</param>
            <returns>Returns a non-negative reference count of the object
            identifier after decrementing it, if successful; otherwise a
            negative value is returned.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.dec_type_ref(HDF.PInvoke.H5I.type_t)">
            <summary>
            Decrements the reference count on an identifier type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-DecTypeRef
            </summary>
            <param name="type">The identifier of the type whose reference count
            is to be decremented</param>
            <returns>Returns the current reference count on success, negative
            on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.destroy_type(HDF.PInvoke.H5I.type_t)">
            <summary>
            Removes the type type and all identifiers within that type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-DestroyType
            </summary>
            <param name="type">Identifier of identifier type which is to be
            destroyed</param>
            <returns>Returns non-negative on success, negative on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.get_file_id(System.Int32)">
            <summary>
            Retrieves an identifier for the file containing the specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-GetFileId
            </summary>
            <param name="obj_id">Identifier of the object whose associated file
            identifier will be returned.</param>
            <returns>Returns a file identifier on success, negative on failure.S</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.get_name(System.Int32,System.Text.StringBuilder,System.IntPtr)">
            <summary>
            Retrieves a name of an object based on the object identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-GetName
            </summary>
            <param name="obj_id">Identifier of the object. This identifier can
            refer to a group, dataset, or named datatype.</param>
            <param name="name">A name associated with the identifier.</param>
            <param name="size">The size of the name buffer; must be the size of
            the name in bytes plus 1 for a <code>NULL</code> terminator.</param>
            <returns>Returns the length of the name if successful, returning 0
            (zero) if no name is associated with the identifier. Otherwise 
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY! This function does not work with UTF-8
            encoded strings. See JIRA issue HDF5/HDFFV-9686.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5I.get_ref(System.Int32)">
            <summary>
            Retrieves the reference count for an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-GetRef
            </summary>
            <param name="obj_id">Object identifier whose reference count will
            be retrieved.</param>
            <returns>Returns a non-negative current reference count of the
            object identifier if successful; otherwise a negative value is
            returned.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.get_type(System.Int32)">
            <summary>
            Retrieves the type of an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-GetType
            </summary>
            <param name="obj_id">Object identifier whose type is to be
            determined.</param>
            <returns>Returns the object type if successful; otherwise
            <code>H5I_BADID</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.H5Iget_type_ref(HDF.PInvoke.H5I.type_t)">
            <summary>
            Retrieves the reference count on an ID type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-GetTypeRef
            </summary>
            <param name="type">The identifier of the type whose reference count
            is to be retrieved</param>
            <returns>Returns the current reference count on success, negative
            on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.inc_ref(System.Int32)">
            <summary>
            Increments the reference count for an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-IncRef
            </summary>
            <param name="obj_id">Object identifier whose reference count will
            be modified.</param>
            <returns>Returns a non-negative reference count of the object ID
            after incrementing it if successful; otherwise a negative value is
            returned.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.inc_type_ref(HDF.PInvoke.H5I.type_t)">
            <summary>
            Increments the reference count on an ID type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-IncTypeRef
            </summary>
            <param name="type">The identifier of the type whose reference count
            is to be incremented</param>
            <returns>Returns the current reference count on success, negative
            on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.is_valid(System.Int32)">
            <summary>
            Determines whether an identifier is valid.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-IsValid
            </summary>
            <param name="obj_id">Identifier to validate</param>
            <returns>Returns <code>TRUE</code> if <paramref name="obj_id"/> is
            valid and <code>FALSE</code> if invalid.
            Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.nmembers(HDF.PInvoke.H5I.type_t,System.UInt64@)">
            <summary>
            Returns the number of identifiers in a given identifier type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-NMembers
            </summary>
            <param name="type">Identifier for the identifier type whose member
            count will be retrieved</param>
            <param name="num_members">Number of identifiers of the specified
            identifier type.</param>
            <returns>Returns a non-negative value on success; otherwise returns
            negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.object_verify(System.Int32,HDF.PInvoke.H5I.type_t)">
            <summary>
            Returns the object referenced by id.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-ObjectVerify
            </summary>
            <param name="id">ID to be dereferenced</param>
            <param name="id_type">ID type to which id should belong</param>
            <returns>Pointer to the object referenced by id on success,
            <code>NULL</code> on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.register(HDF.PInvoke.H5I.type_t,System.IntPtr)">
            <summary>
            Creates and returns a new ID.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-Register
            </summary>
            <param name="type">The identifier of the type to which the new ID
            will belong</param>
            <param name="obj">Pointer to memory for the library to store</param>
            <returns>Returns the new ID on success, negative on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.register_type(System.IntPtr,System.UInt32,HDF.PInvoke.H5I.free_t)">
            <summary>
            Creates and returns a new ID type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-RegisterType
            </summary>
            <param name="hash_size">Size of the hash table (in entries) used to
            store IDs for the new type</param>
            <param name="reserved">Number of reserved IDs for the new type</param>
            <param name="free_func">Function used to deallocate space for a
            single ID</param>
            <returns>Returns the type identifier on success, negative on
            failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.remove_verify(System.Int32,HDF.PInvoke.H5I.type_t)">
            <summary>
            Removes an ID from internal storage.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-RemoveVerify
            </summary>
            <param name="id">The ID to be removed from internal storage</param>
            <param name="id_type">The identifier of the type whose reference
            count is to be retrieved</param>
            <returns>Returns a pointer to the memory referred to by id on
            success, <code>NULL</code> on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.search(HDF.PInvoke.H5I.type_t,HDF.PInvoke.H5I.search_func_t,System.IntPtr)">
            <summary>
            Finds the memory referred to by an ID within the given ID type such
            that some criterion is satisfied.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-Search
            </summary>
            <param name="type">The identifier of the type to be searched</param>
            <param name="func">The function defining the search criteria</param>
            <param name="key">A key for the search function</param>
            <returns>Returns a pointer to the object which satisfies the search
            function on success, NULL on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5I.type_exists(HDF.PInvoke.H5I.type_t)">
            <summary>
            Determines whether an identifier type is registered.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5I.html#Identify-TypeExists
            </summary>
            <param name="type">Identifier type.</param>
            <returns>Returns 1 if the type is registered and 0 if not. Returns
            a negative value on failure.</returns>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.UNINIT">
            <summary>
            uninitialized type [value = -2]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.BADID">
            <summary>
            invalid Type [value = -1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.FILE">
            <summary>
            type ID for File objects [value = 1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.GROUP">
            <summary>
            type ID for Group objects [value = 2]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.DATATYPE">
            <summary>
            type ID for Datatype objects [value = 3]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.DATASPACE">
            <summary>
            type ID for Dataspace objects [value = 4]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.DATASET">
            <summary>
            type ID for Dataset objects [value = 5]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.ATTR">
            <summary>
            type ID for Attribute objects [value = 6]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.REFERENCE">
            <summary>
            type ID for Reference objects [value = 7]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.VFL">
            <summary>
            type ID for virtual file layer [value = 8]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.GENPROP_CLS">
            <summary>
            type ID for generic property list classes [value = 9]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.GENPROP_LST">
            <summary>
            type ID for generic property lists [value = 10]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.ERROR_CLASS">
            <summary>
            type ID for error classes [value = 11]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.ERROR_MSG">
            <summary>
            type ID for error messages [value = 12]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.ERROR_STACK">
            <summary>
            type ID for error stacks [value = 13]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5I.type_t.NTYPES">
            <summary>
            number of library types, MUST BE LAST! [value = 14]
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5I.free_t">
            <summary>
            Function for freeing objects. This function will be called with an
            object ID type number and a pointer to the object. The function
            should free the object and return non-negative to indicate that
            the object can be removed from the ID type. If the function returns
            negative (failure) then the object will remain in the ID type.
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5I.search_func_t">
            <summary>
            Type of the function to compare objects and keys
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.COPY_SHALLOW_HIERARCHY_FLAG">
            <summary>
            Copy only immediate members
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.COPY_EXPAND_SOFT_LINK_FLAG">
            <summary>
            Expand soft links into new objects
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.COPY_EXPAND_EXT_LINK_FLAG">
            <summary>
            Expand external links into new objects
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.COPY_EXPAND_REFERENCE_FLAG">
            <summary>
            Copy objects that are pointed by references
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.COPY_WITHOUT_ATTR_FLAG">
            <summary>
            Copy object without copying attributes
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.COPY_PRESERVE_NULL_FLAG">
            <summary>
            Copy <code>NULL</code> messages (empty space)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.COPY_MERGE_COMMITTED_DTYPE_FLAG">
            <summary>
            Merge committed datatypes in dest file
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.COPY_ALL">
            <summary>
            All object copying flags (for internal checking
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.SHMESG_NONE_FLAG">
            <summary>
            No shared messages
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.SHMESG_SDSPACE_FLAG">
            <summary>
            Simple Dataspace Message.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.SHMESG_DTYPE_FLAG">
            <summary>
            Datatype Message.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.SHMESG_FILL_FLAG">
            <summary>
            Fill Value Message.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.SHMESG_PLINE_FLAG">
            <summary>
            Filter pipeline message.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.SHMESG_ATTR_FLAG">
            <summary>
            Attribute Message.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.HDR_CHUNK0_SIZE">
            <summary>
            2-bit field indicating # of bytes to store the size of chunk 0's
            data
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.HDR_ATTR_CRT_ORDER_TRACKED">
            <summary>
            Attribute creation order is tracked
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.HDR_ATTR_CRT_ORDER_INDEXED">
            <summary>
            Attribute creation order has index
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.HDR_ATTR_STORE_PHASE_CHANGE">
            <summary>
            Non-default attribute storage phase change values stored
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.HDR_STORE_TIMES">
            <summary>
            Store access, modification, change and birth times for object
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5O.close(System.Int32)">
            <summary>
            Closes an object in an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-Close
            </summary>
            <param name="object_id">Object identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.copy(System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies an object in an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-Copy
            </summary>
            <param name="src_loc_id">Object identifier indicating the location
            of the source object to be copied</param>
            <param name="src_name">Name of the source object to be copied</param>
            <param name="dst_loc_id">Location identifier specifying the
            destination</param>
            <param name="dst_name">Name to be assigned to the new copy</param>
            <param name="ocpypl_id">Object copy property list</param>
            <param name="lcpl_id">Link creation property list for the new hard
            link</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.copy(System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Copies an object in an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-Copy
            </summary>
            <param name="src_loc_id">Object identifier indicating the location
            of the source object to be copied</param>
            <param name="src_name">Name of the source object to be copied</param>
            <param name="dst_loc_id">Location identifier specifying the
            destination</param>
            <param name="dst_name">Name to be assigned to the new copy</param>
            <param name="ocpypl_id">Object copy property list</param>
            <param name="lcpl_id">Link creation property list for the new hard
            link</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.decr_refcount(System.Int32)">
            <summary>
            Decrements an object's reference count.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-DecrRefCount
            </summary>
            <param name="object_id">Object identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>
            This function must be used with care! Improper use can lead to
            inaccessible data, wasted space in the file, or file corruption.
            </remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.exists_by_name(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Determines whether a link resolves to an actual object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-ExistsByName
            </summary>
            <param name="loc_id">Identifier of the file or group to query.</param>
            <param name="name">The name of the link to check.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns 1 or 0 if successful; otherwise returns a negative
            value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.exists_by_name(System.Int32,System.String,System.Int32)">
            <summary>
            Determines whether a link resolves to an actual object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-ExistsByName
            </summary>
            <param name="loc_id">Identifier of the file or group to query.</param>
            <param name="name">The name of the link to check.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns 1 or 0 if successful; otherwise returns a negative
            value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.get_comment(System.Int32,System.Text.StringBuilder,System.IntPtr)">
            <summary>
            Retrieves comment for specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-GetComment
            </summary>
            <param name="obj_id">Identifier for the target object.</param>
            <param name="comment">The comment.</param>
            <param name="size">Size of the <paramref name="comment"/> buffer.</param>
            <returns>Upon success, returns the number of characters in the
            comment, not including the <code>NULL</code> terminator, or zero
            (0) if the object has no comment. The value returned may be larger
            than <code>size</code>. Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.get_comment_by_name(System.Int32,System.Byte[],System.Text.StringBuilder,System.IntPtr,System.Int32)">
            <summary>
            Retrieves comment for specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-GetCommentByName
            </summary>
            <param name="loc_id">Identifier of a file, group, dataset, or named
            datatype.</param>
            <param name="name">Name of the object whose comment is to be
            retrieved, specified as a path relative to
            <paramref name="loc_id"/>.</param>
            <param name="comment">The comment.</param>
            <param name="size">Size of the <paramref name="comment"/> buffer.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Upon success, returns the number of characters in the
            comment, not including the <code>NULL</code> terminator, or zero
            (0) if the object has no comment. The value returned may be larger
            than <paramref name="size"/>. Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.get_comment_by_name(System.Int32,System.String,System.Text.StringBuilder,System.IntPtr,System.Int32)">
            <summary>
            Retrieves comment for specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-GetCommentByName
            </summary>
            <param name="loc_id">Identifier of a file, group, dataset, or named
            datatype.</param>
            <param name="name">Name of the object whose comment is to be
            retrieved, specified as a path relative to
            <paramref name="loc_id"/>.</param>
            <param name="comment">The comment.</param>
            <param name="size">Size of the <paramref name="comment"/> buffer.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Upon success, returns the number of characters in the
            comment, not including the <code>NULL</code> terminator, or zero
            (0) if the object has no comment. The value returned may be larger
            than <paramref name="size"/>. Otherwise returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.get_info(System.Int32,HDF.PInvoke.H5O.info_t@)">
            <summary>
            Retrieves the metadata for an object specified by an identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-GetInfo
            </summary>
            <param name="loc_id">Identifier for object of type specified by
            <code>H5O.type_t</code></param>
            <param name="oinfo">Buffer in which to return object information</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.get_info_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,HDF.PInvoke.H5O.info_t@,System.Int32)">
            <summary>
            Retrieves the metadata for an object, identifying the object by an
            index position.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-GetInfoByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of group in which object is located</param>
            <param name="group_name">Name of group in which object is located</param>
            <param name="idx_type">Index or field that determines the order</param>
            <param name="order">Order within field or index</param>
            <param name="n">Object for which information is to be returned</param>
            <param name="oinfo">Buffer in which to return object information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.get_info_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,HDF.PInvoke.H5O.info_t@,System.Int32)">
            <summary>
            Retrieves the metadata for an object, identifying the object by an
            index position.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-GetInfoByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of group in which object is located</param>
            <param name="group_name">Name of group in which object is located</param>
            <param name="idx_type">Index or field that determines the order</param>
            <param name="order">Order within field or index</param>
            <param name="n">Object for which information is to be returned</param>
            <param name="oinfo">Buffer in which to return object information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.get_info_by_name(System.Int32,System.Byte[],HDF.PInvoke.H5O.info_t@,System.Int32)">
            <summary>
            Retrieves the metadata for an object, identifying the object by
            location and relative name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-GetInfoByName
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of group in which object is located</param>
            <param name="name">Name of object, relative to
            <paramref name="loc_id"/></param>
            <param name="oinfo">Buffer in which to return object information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.get_info_by_name(System.Int32,System.String,HDF.PInvoke.H5O.info_t@,System.Int32)">
            <summary>
            Retrieves the metadata for an object, identifying the object by
            location and relative name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-GetInfoByName
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of group in which object is located</param>
            <param name="name">Name of group, relative to
            <paramref name="loc_id"/></param>
            <param name="oinfo">Buffer in which to return object information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.incr_refcount(System.Int32)">
            <summary>
            Increments an object's reference count.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-IncrRefCount
            </summary>
            <param name="object_id">Object identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>This function must be used with care! Improper use can
            lead to inaccessible data, wasted space in the file, or file
            corruption.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.link(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates a hard link to an object in an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-Link
            </summary>
            <param name="obj_id">Object to be linked.</param>
            <param name="new_loc_id">File or group identifier specifying
            location at which object is to be linked.</param>
            <param name="new_name">Name of link to be created, relative to
            <paramref name="new_loc_id"/>.</param>
            <param name="lcpl_id">Link creation property list identifier.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.link(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Creates a hard link to an object in an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-Link
            </summary>
            <param name="obj_id">Object to be linked.</param>
            <param name="new_loc_id">File or group identifier specifying
            location at which object is to be linked.</param>
            <param name="new_name">Name of link to be created, relative to
            <paramref name="new_loc_id"/>.</param>
            <param name="lcpl_id">Link creation property list identifier.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.open(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Opens an object in an HDF5 file by location identifier and path name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-Open
            </summary>
            <param name="loc_id">File or group identifier</param>
            <param name="name">Path to the object, relative to
            <paramref name="loc_id"/>.</param>
            <param name="lapl_id">Access property list identifier for the link
            pointing to the object</param>
            <returns>Returns an object identifier for the opened object if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.open(System.Int32,System.String,System.Int32)">
            <summary>
            Opens an object in an HDF5 file by location identifier and path name.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-Open
            </summary>
            <param name="loc_id">File or group identifier</param>
            <param name="name">Path to the object, relative to
            <paramref name="loc_id"/>.</param>
            <param name="lapl_id">Access property list identifier for the link
            pointing to the object</param>
            <returns>Returns an object identifier for the opened object if
            successful; otherwise returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.open_by_addr(System.Int32,System.UInt64)">
            <summary>
            Opens an object using its address within an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-OpenByAddr
            </summary>
            <param name="loc_id">File or group identifier</param>
            <param name="addr">Object’s address in the file</param>
            <returns>Returns an object identifier for the opened object if
            successful; otherwise returns a negative value.</returns>
            <remarks>This function must be used with care! Improper use can
            lead to inaccessible data, wasted space in the file, or file
            corruption.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.open_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Int32)">
            <summary>
            Open the n-th object in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-OpenByIdx
            </summary>
            <param name="loc_id">A file or group identifier.</param>
            <param name="group_name">Name of group, relative to
            <paramref name="loc_id"/>, in which object is located</param>
            <param name="idx_type">Type of index by which objects are ordered</param>
            <param name="order">Order of iteration within index</param>
            <param name="n">Object to open</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns an object identifier for the opened object if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.open_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Int32)">
            <summary>
            Open the n-th object in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-OpenByIdx
            </summary>
            <param name="loc_id">A file or group identifier.</param>
            <param name="group_name">Name of group, relative to
            <paramref name="loc_id"/>, in which object is located</param>
            <param name="idx_type">Type of index by which objects are ordered</param>
            <param name="order">Order of iteration within index</param>
            <param name="n">Object to open</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns an object identifier for the opened object if
            successful; otherwise returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5O.visit(System.Int32,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,HDF.PInvoke.H5O.iterate_t,System.IntPtr)">
            <summary>
            Recursively visits all objects accessible from a specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-Visit
            </summary>
            <param name="obj_id">Identifier of the object at which the
            recursive iteration begins.</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which index is traversed</param>
            <param name="op">Callback function passing data regarding the
            object to the calling application</param>
            <param name="op_data">User-defined pointer to data required by the
            application for its processing of the object</param>
            <returns>On success, returns the return value of the first operator
            that returns a positive value, or zero if all members were
            processed with no operator returning non-zero. On failure, returns
            a negative value if something goes wrong within the library, or the
            first negative value returned by an operator.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.visit_by_name(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,HDF.PInvoke.H5O.iterate_t,System.IntPtr,System.Int32)">
            <summary>
            Recursively visits all objects starting from a specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-VisitByName
            </summary>
            <param name="loc_id">Identifier of a file or group</param>
            <param name="obj_name">Name of the object, generally relative to
            <paramref name="loc_id"/>, that will serve as root of the iteration</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which index is traversed</param>
            <param name="op">Callback function passing data regarding the
            object to the calling application</param>
            <param name="op_data">User-defined pointer to data required by the
            application for its processing of the object</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>On success, returns the return value of the first operator
            that returns a positive value, or zero if all members were
            processed with no operator returning non-zero. On failure, returns
            a negative value if something goes wrong within the library, or the
            first negative value returned by an operator.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5O.visit_by_name(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,HDF.PInvoke.H5O.iterate_t,System.IntPtr,System.Int32)">
            <summary>
            Recursively visits all objects starting from a specified object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5O.html#Object-VisitByName
            </summary>
            <param name="loc_id">Identifier of a file or group</param>
            <param name="obj_name">Name of the object, generally relative to
            <paramref name="loc_id"/>, that will serve as root of the iteration</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which index is traversed</param>
            <param name="op">Callback function passing data regarding the
            object to the calling application</param>
            <param name="op_data">User-defined pointer to data required by the
            application for its processing of the object</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>On success, returns the return value of the first operator
            that returns a positive value, or zero if all members were
            processed with no operator returning non-zero. On failure, returns
            a negative value if something goes wrong within the library, or the
            first negative value returned by an operator.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5O.type_t">
            <summary>
            Types of objects in file
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.type_t.UNKNOWN">
            <summary>
            Unknown object type [value = -1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.type_t.GROUP">
            <summary>
            Object is a group [value = 0]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.type_t.DATASET">
            <summary>
            Object is a dataset [value = 1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.type_t.NAMED_DATATYPE">
            <summary>
            Object is a named data type [value = 2]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.type_t.NTYPES">
            <summary>
            Number of different object types (must be last!) [value = 3]
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5O.hdr_info_t">
            <summary>
            Information struct for object header metadata
            (for H5Oget_info/H5Oget_info_by_name/H5Oget_info_by_idx)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.version">
            <summary>
            Version number of header format in file
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.nmesgs">
            <summary>
            Number of object header messages
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.nchunks">
            <summary>
            Number of object header chunks
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.flags">
            <summary>
            Object header status flags
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.space_t.total">
            <summary>
            Total space for storing object header in file
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.space_t.meta">
            <summary>
            Space within header for object header metadata information
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.space_t.mesg">
            <summary>
            Space within header for actual message information
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.space_t.free">
            <summary>
            Free space within object header
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.mesg_t.present">
            <summary>
            Flags to indicate presence of message type in header
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.hdr_info_t.mesg_t.shared">
            <summary>
            Flags to indicate message type is shared in header
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.meta_size_t.obj">
            <summary>
            v1/v2 B-tree and local/fractal heap for groups, B-tree for
            chunked datasets
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.meta_size_t.attr">
            <summary>
            v2 B-tree and heap for attributes
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5O.info_t">
            <summary>
            Information struct for object
            (for H5Oget_info/H5Oget_info_by_name/H5Oget_info_by_idx)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.fileno">
            <summary>
            File number that object is located in
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.addr">
            <summary>
            Object address in file
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.type">
            <summary>
            Basic object type (group, dataset, etc.)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.rc">
            <summary>
            Reference count of object
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.atime">
            <summary>
            Access time
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.mtime">
            <summary>
            Modification time
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.ctime">
            <summary>
            Change time
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.btime">
            <summary>
            Birth time
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.num_attrs">
            <summary>
            # of attributes attached to object
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.hdr">
            <summary>
            Object header information
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.info_t.meta_size">
            <summary>
            Extra metadata storage for object and attributes
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5O.iterate_t">
            <summary>
            Prototype for H5Ovisit/H5Ovisit_by_name() operator
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="info"></param>
            <param name="op_data"></param>
            <returns></returns>
        </member>
        <member name="F:HDF.PInvoke.H5O.mcdt_search_ret_t.ERROR">
            <summary>
            Abort H5Ocopy [value = -1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.mcdt_search_ret_t.CONT">
            <summary>
            Continue the global search of all committed datatypes in the
            destination file [value = 0]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5O.mcdt_search_ret_t.STOP">
            <summary>
            Stop the search, but continue copying. The committed datatype
            will be copied but not merged. [value = 1]
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5O.mcdt_search_cb_t">
            <summary>
            Callback to invoke when completing the search for a matching
            committed datatype from the committed dtype list
            </summary>
            <param name="op_data">Pointer to user-defined input data.</param>
            <returns>Returns one of the <code>MCDT_SEARCH_*</code> values.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5.allocate_memory(System.IntPtr,System.UInt32)">
            <summary>
            Allocates memory that will later be freed internally by the HDF5
            Library.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-AllocateMemory
            </summary>
            <param name="size">
            Specifies the size in bytes of the buffer to be allocated.
            </param>
            <param name="clear">
            Specifies whether the new buffer is to be initialized to 0 (zero).
            </param>
            <returns>
            On success, returns pointer to newly allocated buffer or returns
            NULL if size is 0 (zero). Returns NULL on failure.
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5.close">
            <summary>
            Flushes all data to disk, closes all open identifiers, and cleans
            up memory.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-Close
            </summary>
            <returns>
            Returns a non-negative value if successful; otherwise returns a
            negative value.
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5.dont_atexit">
            <summary>
            Instructs library not to install atexit cleanup routine.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-DontAtExit
            </summary>
            <returns>
            Returns a non-negative value if successful; otherwise returns a
            negative value.
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5.free_memory(System.IntPtr)">
            <summary>
            Frees memory allocated by the HDF5 Library.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-FreeMemory
            </summary>
            <param name="buf">
            Buffer to be freed. Can be NULL.
            </param>
            <returns>
            Returns a non-negative value if successful; otherwise returns a
            negative value.
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5.garbage_collect">
            <summary>
            Garbage collects on all free-lists of all types.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-GarbageCollect
            </summary>
            <returns>
            Returns a non-negative value if successful; otherwise returns a
            negative value.
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5.get_libversion(System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            Returns the HDF library release number.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-Version
            </summary>
            <param name="majnum">
            The major version of the library.
            </param>
            <param name="minnum">
            The minor version of the library.
            </param>
            <param name="relnum">
            The release number of the library.
            </param>
            <returns>
            Returns a non-negative value if successful; otherwise returns a
            negative value.
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5.is_library_threadsafe(System.UInt32@)">
            <summary>
            Determine whether the HDF5 Library was built with the thread-safety
            feature enabled.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-IsLibraryThreadsafe
            </summary>
            <param name="is_ts">
            Boolean value indicating whether the library was built with
            thread-safety enabled.
            </param>
            <returns>
            Returns a non-negative value if successful; otherwise returns a
            negative value.
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5.open">
            <summary>
            Initializes the HDF5 library.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-Open
            </summary>
            <returns>
            Returns a non-negative value if successful; otherwise returns a
            negative value.
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5.resize_memory(System.IntPtr,System.IntPtr)">
            <summary>
            Resizes and possibly re-allocates memory that will later be freed
            internally by the HDF5 Library.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-ResizeMemory
            </summary>
            <param name="mem">
            Pointer to a buffer to be resized. May be NULL.
            </param>
            <param name="size">
            New size of the buffer, in bytes.
            </param>
            <returns>
            On success, returns pointer to resized or reallocated buffer or
            returns NULL if size is 0 (zero). Returns NULL on failure.
            </returns>
        </member>
        <member name="M:HDF.PInvoke.H5.set_free_list_limits(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets free-list size limits.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5.html#Library-SetFreeListLimits
            </summary>
            <param name="reg_global_lim">
            The cumulative limit, in bytes, on memory used for all regular
            free lists. (Default: 1MB)
            </param>
            <param name="reg_list_lim">
            The limit, in bytes, on memory used for each regular free list.
            (Default: 64KB)
            </param>
            <param name="arr_global_lim">
            The cumulative limit, in bytes, on memory used for all array
            free lists.(Default: 4MB)
            </param>
            <param name="arr_list_lim">
            The limit, in bytes, on memory used for each array free list.
            (Default: 256KB)
            </param>
            <param name="blk_global_lim">
            The cumulative limit, in bytes, on memory used for all block
            free lists and, separately, for all factory free lists.
            (Default: 16MB)
            </param>
            <param name="blk_list_lim">
            The limit, in bytes, on memory used for each block or factory
            free list. (Default: 1MB)
            </param>
            <returns>
            Returns a non-negative value if successful; otherwise returns a
            negative value.
            </returns>
        </member>
        <member name="T:HDF.PInvoke.H5.iter_order_t">
            <summary>
            Common iteration orders
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.iter_order_t.UNKNOWN">
            <summary>
            Unknown order [value = -1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.iter_order_t.INC">
            <summary>
            Increasing order [value = 0].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.iter_order_t.DEC">
            <summary>
            Decreasing order [value = 1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.iter_order_t.NATIVE">
            <summary>
            No particular order, whatever is fastest [value = 2].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.iter_order_t.N">
            <summary>
            Number of iteration orders [value = 3].
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5.H5IterationResult">
            <summary>
             Iteration callback values
             (Actually, any postive value will cause the iterator to stop and
             pass back that positive value to the function that called the
             iterator)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.H5IterationResult.FAILURE">
            <summary>
            Failure [value = -1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.H5IterationResult.CONT">
            <summary>
            Success and continue [value = 0].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.H5IterationResult.STOP">
            <summary>
            Success and stop [value = 1].
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5.index_t">
            <summary>
            The types of indices on links in groups/attributes on objects.
            Primarily used for "[do] [foo] by index" routines and for iterating
            over links in groups/attributes on objects.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.index_t.UNKNOWN">
            <summary>
            Unknown index type [value = -1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.index_t.NAME">
            <summary>
            Index on names [value = 0].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.index_t.CRT_ORDER">
            <summary>
            Index on creation order [value = 1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.index_t.N">
            <summary>
            Number of indices defined [value = 2].
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5.ih_info_t">
            <summary>
            Storage info struct used by H5O_info_t and H5F_info_t 
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5.ih_info_t.index_size">
            <summary>
            btree and/or list
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.MAX_LINK_NAME_LEN">
            <summary>
            Maximum length of a link's name
            (encoded in a 32-bit unsigned integer: 4GB - 1)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.SAME_LOC">
            <summary>
            Constant to indicate operation occurs on same location
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.LINK_CLASS_T_VERS">
            <summary>
            Current version of the class_t struct
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.TYPE_BUILTIN_MAX">
            <summary>
            Maximum value link value for "built-in" link types
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.TYPE_UD_MIN">
            <summary>
            Link ids at or above this value are "user-defined" link types.
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5L.copy(System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies a link from one location to another.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Copy
            </summary>
            <param name="src_loc">Location identifier of the source link</param>
            <param name="src_name">Name of the link to be copied</param>
            <param name="dst_loc">Location identifier specifying the destination
            of the copy</param>
            <param name="dst_name">Name to be assigned to the new copy</param>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.copy(System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Copies a link from one location to another.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Copy
            </summary>
            <param name="src_loc">Location identifier of the source link</param>
            <param name="src_name">Name of the link to be copied</param>
            <param name="dst_loc">Location identifier specifying the destination
            of the copy</param>
            <param name="dst_name">Name to be assigned to the new copy</param>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.create_external(System.String,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates an external link, a soft link to an object in a different file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateExternal
            </summary>
            <param name="file_name">Name of the target file containing the
            target object</param>
            <param name="obj_name">Path within the target file to the target
            object</param>
            <param name="link_loc_id">File or group identifier where the new
            link is to be created</param>
            <param name="link_name">Name of the new link, relative to
            <paramref name="link_loc_id"/></param>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>The <paramref name="file_name"/> must be an ASCII string!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.create_external(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Creates an external link, a soft link to an object in a different file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateExternal
            </summary>
            <param name="file_name">Name of the target file containing the
            target object</param>
            <param name="obj_name">Path within the target file to the target
            object</param>
            <param name="link_loc_id">File or group identifier where the new
            link is to be created</param>
            <param name="link_name">Name of the new link, relative to
            <paramref name="link_loc_id"/></param>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.create_hard(System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates a hard link to an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateHard
            </summary>
            <param name="cur_loc">The file or group identifier for the target
            object.</param>
            <param name="cur_name">Name of the target object, which must
            already exist.</param>
            <param name="dst_loc">The file or group identifier for the new link.</param>
            <param name="dst_name">The name of the new link.</param>
            <param name="lcpl_id">Link creation property list identifier.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.create_hard(System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Creates a hard link to an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateHard
            </summary>
            <param name="cur_loc">The file or group identifier for the target
            object.</param>
            <param name="cur_name">Name of the target object, which must
            already exist.</param>
            <param name="dst_loc">The file or group identifier for the new link.</param>
            <param name="dst_name">The name of the new link.</param>
            <param name="lcpl_id">Link creation property list identifier.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings only!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.create_soft(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates a soft link to an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateSoft
            </summary>
            <param name="link_target">Path to the target object, which is not
            required to exist.</param>
            <param name="link_loc_id">The file or group identifier for the new
            link.</param>
            <param name="link_name">The name of the new link.</param>
            <param name="lcpl_id">Link creation property list identifier.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.create_soft(System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Creates a soft link to an object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateSoft
            </summary>
            <param name="link_target">Path to the target object, which is not
            required to exist.</param>
            <param name="link_loc_id">The file or group identifier for the new
            link.</param>
            <param name="link_name">The name of the new link.</param>
            <param name="lcpl_id">Link creation property list identifier.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.create_ud(System.Int32,System.Byte[],HDF.PInvoke.H5L.type_t,System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Creates a link of a user-defined type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateUD
            </summary>
            <param name="link_loc_id">Link location identifier</param>
            <param name="link_name">Link name</param>
            <param name="link_type">User-defined link class</param>
            <param name="udata">User-supplied link information</param>
            <param name="udata_size">Size of udata buffer</param>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.create_ud(System.Int32,System.String,HDF.PInvoke.H5L.type_t,System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Creates a link of a user-defined type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateUD
            </summary>
            <param name="link_loc_id">Link location identifier</param>
            <param name="link_name">Link name</param>
            <param name="link_type">User-defined link class</param>
            <param name="udata">User-supplied link information</param>
            <param name="udata_size">Size of udata buffer</param>
            <param name="lcpl_id">Link creation property list identifier</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.delete(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Removes a link from a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Delete
            </summary>
            <param name="loc_id">Identifier of the file or group containing
            the object.</param>
            <param name="name">Name of the link to delete.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.delete(System.Int32,System.String,System.Int32)">
            <summary>
            Removes a link from a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Delete
            </summary>
            <param name="loc_id">Identifier of the file or group containing
            the object.</param>
            <param name="name">Name of the link to delete.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.delete_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Int32)">
            <summary>
            Removes the n-th link in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-DeleteByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Index or field which determines the order</param>
            <param name="order">Order within field or index</param>
            <param name="n">Link for which to retrieve information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.delete_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Int32)">
            <summary>
            Removes the n-th link in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-DeleteByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Index or field which determines the order</param>
            <param name="order">Order within field or index</param>
            <param name="n">Link for which to retrieve information</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.exists(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Determine whether a link with the specified name exists in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Exists
            </summary>
            <param name="loc_id">Identifier of the file or group to query.</param>
            <param name="name">The name of the link to check.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns 1 or 0 if successful; otherwise returns a negative
            value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.exists(System.Int32,System.String,System.Int32)">
            <summary>
            Determine whether a link with the specified name exists in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Exists
            </summary>
            <param name="loc_id">Identifier of the file or group to query.</param>
            <param name="name">The name of the link to check.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns 1 or 0 if successful; otherwise returns a negative
            value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_info(System.Int32,System.Byte[],HDF.PInvoke.H5L.info_t@,System.Int32)">
            <summary>
            Returns information about a link.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetInfo
            </summary>
            <param name="loc_id">File or group identifier.</param>
            <param name="name">Name of the link for which information is being
            sought.</param>
            <param name="linfo">Buffer in which link information is returned.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_info(System.Int32,System.String,HDF.PInvoke.H5L.info_t@,System.Int32)">
            <summary>
            Returns information about a link.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetInfo
            </summary>
            <param name="loc_id">File or group identifier.</param>
            <param name="name">Name of the link for which information is being
            sought.</param>
            <param name="linfo">Buffer in which link information is returned.</param>
            <param name="lapl_id">Link access property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_info_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,HDF.PInvoke.H5L.info_t@,System.Int32)">
            <summary>
            Retrieves metadata for a link in a group, according to the order
            within a field or index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetInfoByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Index or field which determines the order</param>
            <param name="order">Order within field or index</param>
            <param name="n">Link for which to retrieve information</param>
            <param name="linfo">Buffer in which link value is returned</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_info_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,HDF.PInvoke.H5L.info_t@,System.Int32)">
            <summary>
            Retrieves metadata for a link in a group, according to the order
            within a field or index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetInfoByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Index or field which determines the order</param>
            <param name="order">Order within field or index</param>
            <param name="n">Link for which to retrieve information</param>
            <param name="linfo">Buffer in which link value is returned</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_name_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Byte[],System.IntPtr,System.Int32)">
            <summary>
            Retrieves name of the nth link in a group, according to the order
            within a specified field or index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetNameByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Index or field which determines the order</param>
            <param name="order">Order within field or index</param>
            <param name="n">Link for which to retrieve information</param>
            <param name="name">Buffer in which link value is returned</param>
            <param name="size">Size in bytes of <paramref name="name"/></param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns the size of the link name if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_name_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.Text.StringBuilder,System.IntPtr,System.Int32)">
            <summary>
            Retrieves name of the nth link in a group, according to the order
            within a specified field or index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetNameByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Index or field which determines the order</param>
            <param name="order">Order within field or index</param>
            <param name="n">Link for which to retrieve information</param>
            <param name="name">Buffer in which link value is returned</param>
            <param name="size">Size in bytes of <paramref name="name"/></param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns the size of the link name if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_val(System.Int32,System.Byte[],System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Returns the value of a symbolic link.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetVal
            </summary>
            <param name="loc_id">File or group identifier.</param>
            <param name="name">Link whose value is to be returned.</param>
            <param name="buf">The buffer to hold the returned link value.</param>
            <param name="size">Maximum number of characters of link value to be
            returned.</param>
            <param name="lapl_id">List access property list identifier.</param>
            <returns>Returns a non-negative value, with the link value in
            <paramref name="buf"/>, if successful. Otherwise returns a negative
            value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_val(System.Int32,System.String,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Returns the value of a symbolic link.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetVal
            </summary>
            <param name="loc_id">File or group identifier.</param>
            <param name="name">Link whose value is to be returned.</param>
            <param name="buf">The buffer to hold the returned link value.</param>
            <param name="size">Maximum number of characters of link value to be
            returned.</param>
            <param name="lapl_id">List access property list identifier.</param>
            <returns>Returns a non-negative value, with the link value in
            <paramref name="buf"/>, if successful. Otherwise returns a negative
            value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_val_by_idx(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Retrieves value of the nth link in a group, according to the order
            within an index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetValByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order within field or index</param>
            <param name="n">Link for which to retrieve information</param>
            <param name="buf">Pointer to buffer in which link value is returned</param>
            <param name="size">Size in bytes of <paramref name="group_name"/></param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.get_val_by_idx(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Retrieves value of the nth link in a group, according to the order
            within an index.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-GetValByIdx
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order within field or index</param>
            <param name="n">Link for which to retrieve information</param>
            <param name="buf">Pointer to buffer in which link value is returned</param>
            <param name="size">Size in bytes of <paramref name="group_name"/></param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.is_registered(HDF.PInvoke.H5L.type_t)">
            <summary>
            Determines whether a class of user-defined links is registered.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-IsRegistered
            </summary>
            <param name="id">User-defined link class identifier</param>
            <returns>Returns a positive value if the link class has been
            registered and zero if it is unregistered. Otherwise returns a
            negative value; this may mean that the identifier is not a valid
            user-defined class identifier.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.iterate(System.Int32,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64@,HDF.PInvoke.H5L.iterate_t,System.IntPtr)">
            <summary>
            Iterates through links in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Iterate
            </summary>
            <param name="grp_id">Identifier specifying subject group</param>
            <param name="idx_type">Type of index which determines the order</param>
            <param name="order">Order within index</param>
            <param name="idx">Iteration position at which to start</param>
            <param name="op">Callback function passing data regarding the link
            to the calling application</param>
            <param name="op_data">User-defined pointer to data required by the
            application for its processing of the link</param>
            <returns>On success, returns the return value of the first operator
            that returns a positive value, or zero if all members were
            processed with no operator returning non-zero. On failure, returns
            a negative value if something goes wrong within the library, or the
            first negative value returned by an operator.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.iterate_by_name(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64@,HDF.PInvoke.H5L.iterate_t,System.IntPtr,System.Int32)">
            <summary>
            Iterates through links in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-IterateByName
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Type of index which determines the order</param>
            <param name="order">Order within index</param>
            <param name="idx">Iteration position at which to start</param>
            <param name="op">Callback function passing data regarding the link
            to the calling application</param>
            <param name="op_data">User-defined pointer to data required by the
            application for its processing of the link</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.iterate_by_name(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,System.UInt64@,HDF.PInvoke.H5L.iterate_t,System.IntPtr,System.Int32)">
            <summary>
            Iterates through links in a group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-IterateByName
            </summary>
            <param name="loc_id">File or group identifier specifying location
            of subject group</param>
            <param name="group_name">Name of subject group</param>
            <param name="idx_type">Type of index which determines the order</param>
            <param name="order">Order within index</param>
            <param name="idx">Iteration position at which to start</param>
            <param name="op">Callback function passing data regarding the link
            to the calling application</param>
            <param name="op_data">User-defined pointer to data required by the
            application for its processing of the link</param>
            <param name="lapl_id">Link access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.move(System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Moves a link within an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Move
            </summary>
            <param name="src_loc">Original file or group identifier.</param>
            <param name="src_name">Original link name.</param>
            <param name="dst_loc">Destination file or group identifier.</param>
            <param name="dst_name">New link name.</param>
            <param name="lcpl_id">Link creation property list identifier to be
            associated with the new link.</param>
            <param name="lapl_id">Link access property list identifier to be
            associated with the new link.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.move(System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Moves a link within an HDF5 file.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Move
            </summary>
            <param name="src_loc">Original file or group identifier.</param>
            <param name="src_name">Original link name.</param>
            <param name="dst_loc">Destination file or group identifier.</param>
            <param name="dst_name">New link name.</param>
            <param name="lcpl_id">Link creation property list identifier to be
            associated with the new link.</param>
            <param name="lapl_id">Link access property list identifier to be
            associated with the new link.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5L.register(HDF.PInvoke.H5L.class_t@)">
            <summary>
            Registers a user-defined link class or changes behavior of an existing class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Register
            </summary>
            <param name="cls">Pointer to a buffer containing the struct
            describing the user-defined link class</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.unpack_elink_val(System.IntPtr,System.IntPtr,System.UInt32@,System.IntPtr@,System.IntPtr@)">
            <summary>
            Decodes external link information.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-UnpackELinkVal
            </summary>
            <param name="ext_linkval">Buffer containing external link
            information</param>
            <param name="link_size">Size, in bytes, of the
            <paramref name="ext_linkval"/> buffer</param>
            <param name="flags">External link flags, packed as a bitmap</param>
            <param name="filename">Returned filename</param>
            <param name="obj_path">Returned object path, relative to
            <paramref name="filename"/></param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.unregister(HDF.PInvoke.H5L.type_t)">
            <summary>
            Unregisters a class of user-defined links.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Unregister
            </summary>
            <param name="id">User-defined link class identifier</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.visit(System.Int32,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,HDF.PInvoke.H5L.iterate_t,System.IntPtr)">
            <summary>
            Recursively visits all links starting from a specified group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-Visit
            </summary>
            <param name="grp_id">Identifier of the group at which the recursive
            iteration begins.</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which index is traversed</param>
            <param name="op">Callback function passing data regarding the link
            to the calling application</param>
            <param name="op_data">User-defined pointer to data required by the
            application for its processing of the link</param>
            <returns>On success, returns the return value of the first operator
            that returns a positive value, or zero if all members were
            processed with no operator returning non-zero. On failure, returns
            a negative value if something goes wrong within the library, or the
            first negative value returned by an operator.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.visit_by_name(System.Int32,System.Byte[],HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,HDF.PInvoke.H5L.iterate_t,System.IntPtr,System.Int32)">
            <summary>
            Recursively visits all links starting from a specified group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-VisitByName
            </summary>
            <param name="loc_id">Identifier of a file or group</param>
            <param name="group_name">Name of the group, generally relative to
            <paramref name="loc_id"/>, that will serve as root of the iteration</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which index is traversed</param>
            <param name="op">Callback function passing data regarding the link
            to the calling application</param>
            <param name="op_data">User-defined pointer to data required by the
            application for its processing of the link</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>On success, returns the return value of the first operator
            that returns a positive value, or zero if all members were
            processed with no operator returning non-zero. On failure, returns
            a negative value if something goes wrong within the library, or the
            first negative value returned by an operator.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5L.visit_by_name(System.Int32,System.String,HDF.PInvoke.H5.index_t,HDF.PInvoke.H5.iter_order_t,HDF.PInvoke.H5L.iterate_t,System.IntPtr,System.Int32)">
            <summary>
            Recursively visits all links starting from a specified group.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-VisitByName
            </summary>
            <param name="loc_id">Identifier of a file or group</param>
            <param name="group_name">Name of the group, generally relative to
            <paramref name="loc_id"/>, that will serve as root of the iteration</param>
            <param name="idx_type">Type of index</param>
            <param name="order">Order in which index is traversed</param>
            <param name="op">Callback function passing data regarding the link
            to the calling application</param>
            <param name="op_data">User-defined pointer to data required by the
            application for its processing of the link</param>
            <param name="lapl_id">Link access property list identifier</param>
            <returns>On success, returns the return value of the first operator
            that returns a positive value, or zero if all members were
            processed with no operator returning non-zero. On failure, returns
            a negative value if something goes wrong within the library, or the
            first negative value returned by an operator.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5L.type_t">
            <summary>
            Link class types.
            Values less than 64 are reserved for the HDF5 library's internal
            use. Values 64 to 255 are for "user-defined" link class types;
            these types are defined by HDF5 but their behavior can be
            overridden by users. Users who want to create new classes of links
            should contact the HDF5 development team at hdfhelp@hdfgroup.org .
            These values can never change because they appear in HDF5 files.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.type_t.ERROR">
            <summary>
            Invalid link type id [value = -1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.type_t.HARD">
            <summary>
            Hard link id [value = 0]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.type_t.SOFT">
            <summary>
            Soft link id [value = 1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.type_t.EXTERNAL">
            <summary>
            External link id [value = 64]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.type_t.MAX">
            <summary>
            Maximum link type id [value = 255]
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5L.info_t">
            <summary>
            Information struct for link (for H5Lget_info/H5Lget_info_by_idx)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.info_t.type">
            <summary>
            Type of link
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.info_t.corder_valid">
            <summary>
            Indicate if creation order is valid
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.info_t.corder">
            <summary>
            Creation order
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.info_t.cset">
            <summary>
            Character set of link name
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.info_t.u">
            <summary>
            Address to which hard link points or
            size of a soft link or UD link value
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5L.create_func_t">
            <summary>
            Link creation callback
            </summary>
            <param name="link_name"></param>
            <param name="loc_group"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <param name="lcpl_id"></param>
            <returns></returns>
        </member>
        <member name="T:HDF.PInvoke.H5L.create_func_ascii_t">
            <summary>
            Link creation callback
            </summary>
            <param name="link_name"></param>
            <param name="loc_group"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <param name="lcpl_id"></param>
            <returns></returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5L.move_func_t">
            <summary>
            Callback for when the link is moved
            </summary>
            <param name="new_name"></param>
            <param name="new_loc"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <returns></returns>
        </member>
        <member name="T:HDF.PInvoke.H5L.move_func_ascii_t">
            <summary>
            Callback for when the link is moved
            </summary>
            <param name="new_name"></param>
            <param name="new_loc"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <returns></returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5L.copy_func_t">
            <summary>
            Callback for when the link is copied
            </summary>
            <param name="new_name"></param>
            <param name="new_loc"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <returns></returns>
        </member>
        <member name="T:HDF.PInvoke.H5L.copy_func_ascii_t">
            <summary>
            Callback for when the link is copied
            </summary>
            <param name="new_name"></param>
            <param name="new_loc"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <returns></returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5L.traverse_func_t">
            <summary>
            Callback during link traversal
            </summary>
            <param name="link_name"></param>
            <param name="cur_group"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <param name="lapl_id"></param>
            <returns></returns>
        </member>
        <member name="T:HDF.PInvoke.H5L.traverse_func_ascii_t">
            <summary>
            Callback during link traversal
            </summary>
            <param name="link_name"></param>
            <param name="cur_group"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <param name="lapl_id"></param>
            <returns></returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5L.delete_func_t">
            <summary>
            Callback for when the link is deleted
            </summary>
            <param name="link_name"></param>
            <param name="file"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <returns></returns>
        </member>
        <member name="T:HDF.PInvoke.H5L.delete_func_ascii_t">
            <summary>
            Callback for when the link is deleted
            </summary>
            <param name="link_name"></param>
            <param name="file"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <returns></returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5L.query_func_t">
            <summary>
            Callback for querying the link
            </summary>
            <param name="link_name"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <param name="buf"></param>
            <param name="buf_size"></param>
            <returns>Returns the size of the buffer needed</returns>
        </member>
        <member name="T:HDF.PInvoke.H5L.query_func_ascii_t">
            <summary>
            Callback for querying the link
            </summary>
            <param name="link_name"></param>
            <param name="lnkdata"></param>
            <param name="lnkdata_size"></param>
            <param name="buf"></param>
            <param name="buf_size"></param>
            <returns>Returns the size of the buffer needed</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5L.class_t">
            <summary>
            User-defined link types
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.class_t.version">
            <summary>
            Version number of this struct
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.class_t.id">
            <summary>
            Link type ID
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.class_t.comment">
            <summary>
            Comment for debugging
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.class_t.create_func">
            <summary>
            Callback during link creation
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.class_t.move_func">
            <summary>
            Callback after moving link
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.class_t.copy_func">
            <summary>
            Callback after copying link
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.class_t.trav_func">
            <summary>
            Callback during link traversal
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.class_t.del_func">
            <summary>
            Callback for link deletion
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5L.class_t.query_func">
            <summary>
            Callback for queries
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5L.iterate_t">
            <summary>
            Prototype for H5Literate/H5Literate_by_name() operator
            </summary>
            <param name="group">Group that serves as root of the iteration</param>
            <param name="name">Name of link, relative to <paramref name="group"/>,
            being examined at current step of the iteration</param>
            <param name="info"><code>H5L.info_t</code> struct containing
            information regarding that link</param>
            <param name="op_data">User-defined pointer to data required by the
            application in processing the link</param>
            <returns>Zero causes the visit iterator to continue, returning zero
            when all group members have been processed. A positive value causes
            the visit iterator to immediately return that positive value,
            indicating short-circuit success. A negative value causes the visit
            iterator to immediately return that value, indicating failure.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5L.elink_traverse_t">
            <summary>
            Callback for external link traversal
            </summary>
            <param name="parent_file_name"></param>
            <param name="parent_group_name"></param>
            <param name="child_file_name"></param>
            <param name="child_object_name"></param>
            <param name="acc_flags"></param>
            <param name="fapl_id"></param>
            <param name="op_data"></param>
            <returns></returns>
            <remarks>File names MUST be ASCII strings.</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5L.elink_traverse_ascii_t">
            <summary>
            Callback for external link traversal
            </summary>
            <param name="parent_file_name"></param>
            <param name="parent_group_name"></param>
            <param name="child_file_name"></param>
            <param name="child_object_name"></param>
            <param name="acc_flags"></param>
            <param name="fapl_id"></param>
            <param name="op_data"></param>
            <returns></returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="T:HDF.PInvoke.H5FD.file_image_op_t">
            <summary>
            Define enum for the source of file image callbacks
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5FD.file_image_callbacks_t">
            <summary>
            Define structure to hold file image callbacks
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.NCSET">
            <summary>
            Number of character sets actually defined 
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.H5T_NSTR">
            <summary>
            num H5T_str_t types actually defined
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.OPAQUE_TAG_MAX">
            <summary>
            Maximum length of an opaque tag
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.VARIABLE">
            <summary>
            Indicate that a string is variable length (null-terminated in C,
            instead of fixed length)
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5T.array_create(System.Int32,System.UInt32,System.UInt64[])">
            <summary>
            Creates an array datatype object.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-ArrayCreate2
            </summary>
            <param name="base_type_id">Datatype identifier for the array base
            datatype.</param>
            <param name="rank">Rank of the array.</param>
            <param name="dims">Size of each array dimension.</param>
            <returns>Returns a valid datatype identifier if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.close(System.Int32)">
            <summary>
            Releases a datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Close
            </summary>
            <param name="type_id">Identifier of datatype to release.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.commit(System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Commits a transient datatype, linking it into the file and creating
            a new named datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Commit2
            </summary>
            <param name="loc_id">Location identifier</param>
            <param name="name">Name given to committed datatype</param>
            <param name="dtype_id">Identifier of datatype to be committed and,
            upon function’s return, identifier for the committed datatype</param>
            <param name="lcpl_id">Link creation property list</param>
            <param name="tcpl_id">Datatype creation property list</param>
            <param name="tapl_id">Datatype access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.commit(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Commits a transient datatype, linking it into the file and creating
            a new named datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Commit2
            </summary>
            <param name="loc_id">Location identifier</param>
            <param name="name">Name given to committed datatype</param>
            <param name="dtype_id">Identifier of datatype to be committed and,
            upon function’s return, identifier for the committed datatype</param>
            <param name="lcpl_id">Link creation property list</param>
            <param name="tcpl_id">Datatype creation property list</param>
            <param name="tapl_id">Datatype access property list</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.commit_anon(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Commits a transient datatype to a file, creating a new named
            datatype, but does not link it into the file structure.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-CommitAnon
            </summary>
            <param name="loc_id">A file or group identifier specifying the file
            in which the new named datatype is to be created.</param>
            <param name="dtype_id">A datatype identifier.</param>
            <param name="tcpl_id">A datatype creation property list identifier.</param>
            <param name="tapl_id">A datatype access property list identifier.</param>
            <returns></returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.committed(System.Int32)">
            <summary>
            Determines whether a datatype is a named type or a transient type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Committed
            </summary>
            <param name="dtype_id">Datatype identifier.</param>
            <returns>When successful, returns a positive value, for
            <code>TRUE</code>, if the datatype has been committed, or 0 (zero),
            for <code>FALSE</code>, if the datatype has not been committed.
            Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.compiler_conv(System.Int32,System.Int32)">
            <summary>
            Check whether the library’s default conversion is hard conversion.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-CompilerConv
            </summary>
            <param name="src_id">Identifier for the source datatype.</param>
            <param name="dst_id">Identifier for the destination datatype.</param>
            <returns>When successful, returns a positive value, for
            <code>TRUE</code>, if the datatype has been committed, or 0 (zero),
            for <code>FALSE</code>, if the datatype has not been committed.
            Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.convert(System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Converts data from one specified datatype to another.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Convert
            </summary>
            <param name="src_type_id">Identifier for the source datatype.</param>
            <param name="dest_type_id">Identifier for the destination datatype.</param>
            <param name="nelmts">Size of array <paramref name="buf"/>.</param>
            <param name="buf">Array containing pre- and post-conversion values.</param>
            <param name="background">Optional background buffer.</param>
            <param name="plist_id">Dataset transfer property list identifier.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.copy(System.Int32)">
            <summary>
            Copies an existing datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Copy
            </summary>
            <param name="type_id">Identifier of datatype to copy.</param>
            <returns>Returns a datatype identifier if successful; otherwise
            returns a negative value</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.create(HDF.PInvoke.H5T.class_t,System.IntPtr)">
            <summary>
            Creates a new datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Create
            </summary>
            <param name="cls">Class of datatype to create.</param>
            <param name="size">Size, in bytes, of the datatype being created</param>
            <returns>Returns datatype identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.decode(System.Byte[])">
            <summary>
            Decode a binary object description of datatype and return a new
            object handle.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Decode
            </summary>
            <param name="buf">Buffer for the datatype object to be decoded.</param>
            <returns>Returns an object identifier (non-negative) if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.detect_class(System.Int32,HDF.PInvoke.H5T.class_t)">
            <summary>
            Determines whether a datatype contains any datatypes of the given
            datatype class.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-DetectClass
            </summary>
            <param name="dtype_id">Datatype identifier.</param>
            <param name="dtype_class">Datatype class.</param>
            <returns>Returns <code>TRUE</code> or <code>FALSE</code> if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.encode(System.Int32,System.Byte[],System.IntPtr@)">
            <summary>
            Encode a datatype object description into a binary buffer.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Encode
            </summary>
            <param name="obj_id">Identifier of the object to be encoded.</param>
            <param name="buf">Buffer for the object to be encoded into. If the
            provided buffer is <code>NULL</code>, only the size of buffer
            needed is returned through <paramref name="nalloc"/>.</param>
            <param name="nalloc">The size of the buffer allocated or needed.</param>
            <returns></returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.enum_create(System.Int32)">
            <summary>
            Creates a new enumeration datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-EnumCreate
            </summary>
            <param name="dtype_id">Datatype identifier for the base datatype. 
            Must be an integer datatype.</param>
            <returns>Returns the datatype identifier for the new enumeration
            datatype if successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.enum_insert(System.Int32,System.String,System.IntPtr)">
            <summary>
            Inserts a new enumeration datatype member.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-EnumInsert
            </summary>
            <param name="dtype_id">Datatype identifier for the enumeration
            datatype.</param>
            <param name="name">Name of the new member.</param>
            <param name="value">Pointer to the value of the new member.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.enum_nameof(System.Int32,System.IntPtr,System.Text.StringBuilder,System.IntPtr)">
            <summary>
            Returns the symbol name corresponding to a specified member of an
            enumeration datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-EnumNameOf
            </summary>
            <param name="dtype_id">Enumeration datatype identifier.</param>
            <param name="value">Value of the enumeration datatype.</param>
            <param name="name">Buffer for output of the symbol name.</param>
            <param name="size">The capacity of the buffer, in bytes
            (characters).</param>
            <returns>Returns a non-negative value if successful. Otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.enum_valueof(System.Int32,System.String,System.IntPtr)">
            <summary>
            Returns the value corresponding to a specified member of an
            enumeration datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-EnumValueOf
            </summary>
            <param name="dtype_id">Enumeration datatype identifier.</param>
            <param name="name">Symbol name of the enumeration datatype.</param>
            <param name="value">Buffer for output of the value of the
            enumeration datatype.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.equal(System.Int32,System.Int32)">
            <summary>
            Determines whether two datatype identifiers refer to the same
            datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Equal
            </summary>
            <param name="type_id1">Identifier of datatype to compare.</param>
            <param name="type_id2">Identifier of datatype to compare.</param>
            <returns>When successful, returns a positive value, for
            <code>TRUE</code>, if the datatype has been committed, or 0 (zero),
            for <code>FALSE</code>, if the datatype has not been committed.
            Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.find(System.Int32,System.Int32,HDF.PInvoke.H5T.cdata_t@)">
            <summary>
            Finds a conversion function.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Find
            </summary>
            <param name="src_id">Identifier for the source datatype.</param>
            <param name="dst_id">Identifier for the destination datatype.</param>
            <param name="pcdata">Pointer to type conversion data.</param>
            <returns>Returns a pointer to a suitable conversion function if
            successful. Otherwise returns <code>NULL</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_array_dims(System.Int32,System.UInt64[])">
            <summary>
            Retrieves sizes of array dimensions.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetArrayDims2
            </summary>
            <param name="adtype_id">Array datatype identifier.</param>
            <param name="dims">Sizes of array dimensions.</param>
            <returns>Returns the non-negative number of dimensions of the array
            type if successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_array_ndims(System.Int32)">
            <summary>
            Returns the rank of an array datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetArrayNdims
            </summary>
            <param name="adtype_id">Array datatype identifier.</param>
            <returns>Returns the rank of the array if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_class(System.Int32)">
            <summary>
            Returns the datatype class identifier.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetClass
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns datatype class identifier if successful; otherwise
            <code>H5T_NO_CLASS</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_create_plist(System.Int32)">
            <summary>
            Returns a copy of a datatype creation property list.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetCreatePlist
            </summary>
            <param name="dtype_id">Datatype identifier.</param>
            <returns>Returns a datatype property list identifier if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_cset(System.Int32)">
            <summary>
            Retrieves the character set type of a string datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetCset
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns a valid character set type if successful;
            otherwise <code>H5T.cset_t.CSET_ERROR</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_ebias(System.Int32)">
            <summary>
            Retrieves the exponent bias of a floating-point type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetEbias
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns the bias if successful; otherwise 0.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_fields(System.Int32,System.IntPtr@,System.IntPtr@,System.IntPtr@,System.IntPtr@,System.IntPtr@)">
            <summary>
            Retrieves floating point datatype bit field information.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetFields
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <param name="spos">Pointer to location to return floating-point
            sign bit.</param>
            <param name="epos">Pointer to location to return exponent
            bit-position.</param>
            <param name="esize">Pointer to location to return size of exponent
            in bits.</param>
            <param name="mpos">Pointer to location to return mantissa
            bit-position.</param>
            <param name="msize">Pointer to location to return size of mantissa
            in bits.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_inpad(System.Int32)">
            <summary>
            Retrieves the internal padding type for unused bits in
            floating-point datatypes.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetInpad
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns a valid padding type if successful; otherwise
            <code>H5T.pad_t.ERROR</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_member_class(System.Int32,System.UInt32)">
            <summary>
            Returns datatype class of compound datatype member.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetMemberClass
            </summary>
            <param name="cdtype_id">Datatype identifier of compound object.</param>
            <param name="member_no">Compound type member number.</param>
            <returns>Returns the datatype class, a non-negative value, if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_member_index(System.Int32,System.String)">
            <summary>
            Retrieves the index of a compound or enumeration datatype member.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetMemberIndex
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <param name="field_name">Name of the field or member whose index is
            to be retrieved.</param>
            <returns>Returns a valid field or member index if successful;
            otherwise returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_member_name(System.Int32,System.UInt32)">
            <summary>
            Retrieves the name of a compound or enumeration datatype member.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetMemberName
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <param name="field_idx">Zero-based index of the field or element
            whose name is to be retrieved.</param>
            <returns>Returns a pointer to a string allocated in unmanaged
            memory if successful; otherwise returns <code>NULL</code>.</returns>
            <remarks>The caller is responsible for freeing the allocated
            memory.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_member_offset(System.Int32,System.UInt32)">
            <summary>
            Retrieves the offset of a field of a compound datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetMemberOffset
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <param name="memb_no">Number of the field whose offset is
            requested.</param>
            <returns></returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_member_type(System.Int32,System.UInt32)">
            <summary>
            Returns the datatype of the specified member.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetMemberType
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <param name="field_idx">Field index (0-based) of the field type to
            retrieve.</param>
            <returns>Returns the identifier of a copy of the datatype of the
            field if successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_member_value(System.Int32,System.UInt32,System.IntPtr)">
            <summary>
            Returns the value of an enumeration datatype member.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetMemberValue
            </summary>
            <param name="dtype_id">Datatype identifier for the enumeration
            datatype.</param>
            <param name="memb_no">Number of the enumeration datatype member.</param>
            <param name="value">Pointer to a buffer for output of the value of
            the enumeration datatype member.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_native_type(System.Int32,HDF.PInvoke.H5T.direction_t)">
            <summary>
            Returns the native datatype of a specified datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetNativeType
            </summary>
            <param name="dtype_id">Datatype identifier for the dataset
            datatype.</param>
            <param name="direction">Direction of search.</param>
            <returns>Returns the native datatype identifier for the specified
            dataset datatype if successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_nmembers(System.Int32)">
            <summary>
            Retrieves the number of elements in a compound or enumeration
            datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetNmembers
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns the number of elements if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_norm(System.Int32)">
            <summary>
            Retrieves mantissa normalization of a floating-point datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetNorm
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns a valid normalization type if successful;
            otherwise <code>H5T.norm_t.ERROR</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_offset(System.Int32)">
            <summary>
            Retrieves the bit offset of the first significant bit.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetOffset
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns an offset value if successful; otherwise returns a
            negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_order(System.Int32)">
            <summary>
            Returns the byte order of an atomic datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetOrder
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns a byte order constant if successful; otherwise
            <code>H5T.order_t.ERROR</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_pad(System.Int32,HDF.PInvoke.H5T.pad_t@,HDF.PInvoke.H5T.pad_t@)">
            <summary>
            Retrieves the padding type of the least and most-significant bit
            padding.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetPad
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <param name="lsb">Pointer to location to return least-significant
            bit padding type.</param>
            <param name="msb">Pointer to location to return most-significant
            bit padding type.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_precision(System.Int32)">
            <summary>
            Returns the precision of an atomic datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetPrecision
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns the number of significant bits if successful;
            otherwise 0.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_sign(System.Int32)">
            <summary>
            Retrieves the sign type for an integer type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetSign
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns a valid sign type if successful; otherwise
            <code>H5T.sign_t.ERROR</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_size(System.Int32)">
            <summary>
            Returns the size of a datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetSize
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns the size of the datatype in bytes if successful;
            otherwise 0.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_strpad(System.Int32)">
            <summary>
            Retrieves the type of padding used for a string datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetStrpad
            </summary>
            <param name="dtype_id">Identifier of datatype to query.</param>
            <returns>Returns a valid string storage mechanism if successful;
            otherwise <code>H5T.str_t.ERROR</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_super(System.Int32)">
            <summary>
            Returns the base datatype from which a datatype is derived.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetSuper
            </summary>
            <param name="dtype_id">Datatype identifier for the derived
            datatype.</param>
            <returns>Returns the datatype identifier for the base datatype if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.get_tag(System.Int32)">
            <summary>
            Gets the tag associated with an opaque datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-GetTag
            </summary>
            <param name="dtype_id">Datatype identifier for the opaque datatype.</param>
            <returns>Returns a pointer to a string allocated in unmanaged
            memory if successful; otherwise returns <code>NULL</code>.</returns>
            <remarks>The caller is responsible for freeing the allocated
            memory.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.insert(System.Int32,System.String,System.IntPtr,System.Int32)">
            <summary>
            Adds a new member to a compound datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Insert
            </summary>
            <param name="dtype_id">Identifier of compound datatype to modify.</param>
            <param name="name">Name of the field to insert.</param>
            <param name="offset">Offset in memory structure of the field to
            insert.</param>
            <param name="field_id">Datatype identifier of the field to insert.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.is_variable_str(System.Int32)">
            <summary>
            Determines whether datatype is a variable-length string.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-IsVariableString
            </summary>
            <param name="dtype_id">Datatype identifier.</param>
            <returns>Returns <code>TRUE</code> or <code>FALSE</code> if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.lock_datatype(System.Int32)">
            <summary>
            Locks a datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Lock
            </summary>
            <param name="dtype_id">Identifier of datatype to lock.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.open(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Opens a committed (named) datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Open2
            </summary>
            <param name="loc_id">A file or group identifier.</param>
            <param name="name">A datatype name, defined within the file or
            group identified by <paramref name="loc_id"/>.</param>
            <param name="tapl_id">Datatype access property list identifier.</param>
            <returns>Returns a committed datatype identifier if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.open(System.Int32,System.String,System.Int32)">
            <summary>
            Opens a committed (named) datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Open2
            </summary>
            <param name="loc_id">A file or group identifier.</param>
            <param name="name">A datatype name, defined within the file or
            group identified by <paramref name="loc_id"/>.</param>
            <param name="tapl_id">Datatype access property list identifier.</param>
            <returns>Returns a committed datatype identifier if successful;
            otherwise returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.pack(System.Int32)">
            <summary>
            Recursively removes padding from within a compound datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Pack
            </summary>
            <param name="dtype_id">Identifier of datatype to modify.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.register(HDF.PInvoke.H5T.pers_t,System.String,System.Int32,System.Int32,HDF.PInvoke.H5T.conv_t)">
            <summary>
            Registers a conversion function.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Register
            </summary>
            <param name="type">Conversion function type</param>
            <param name="name">Name displayed in diagnostic output</param>
            <param name="src_id">Identifier of source datatype</param>
            <param name="dst_id">Identifier of destination datatype</param>
            <param name="func">Function to convert between source and
            destination datatypes</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_cset(System.Int32,HDF.PInvoke.H5T.cset_t)">
            <summary>
            Sets character set to be used in a string or character datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetCset
            </summary>
            <param name="dtype_id">Identifier of datatype to modify.</param>
            <param name="cset">Character set type.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_ebias(System.Int32,System.IntPtr)">
            <summary>
            Sets the exponent bias of a floating-point type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetEbias
            </summary>
            <param name="dtype_id">Identifier of datatype to set.</param>
            <param name="ebias">Exponent bias value.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_fields(System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sets locations and sizes of floating point bit fields.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetFields
            </summary>
            <param name="dtype_id">Identifier of datatype to set.</param>
            <param name="spos">Sign position, i.e., the bit offset of the
            floating-point sign bit.</param>
            <param name="epos">Exponent bit position.</param>
            <param name="esize">Size of exponent in bits.</param>
            <param name="mpos">Mantissa bit position.</param>
            <param name="msize">Size of mantissa in bits.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_inpad(System.Int32,HDF.PInvoke.H5T.pad_t)">
            <summary>
            Sets interal bit padding of floating point numbers.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetInpad
            </summary>
            <param name="dtype_id">Identifier of datatype to modify.</param>
            <param name="inpad">Padding type.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_norm(System.Int32,HDF.PInvoke.H5T.norm_t)">
            <summary>
            Sets the mantissa normalization of a floating-point datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetNorm
            </summary>
            <param name="dtype_id">Identifier of datatype to set.</param>
            <param name="norm">Mantissa normalization type.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_offset(System.Int32,System.IntPtr)">
            <summary>
            Sets the bit offset of the first significant bit.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetOffset
            </summary>
            <param name="dtype_id">Identifier of datatype to set.</param>
            <param name="offset">Offset of first significant bit.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_order(System.Int32,HDF.PInvoke.H5T.order_t)">
            <summary>
            Sets the byte order of a datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetOrder
            </summary>
            <param name="dtype_id">Identifier of datatype to set.</param>
            <param name="order">Byte order.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_pad(System.Int32,HDF.PInvoke.H5T.pad_t,HDF.PInvoke.H5T.pad_t)">
            <summary>
            Sets the least and most-significant bits padding types.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetPad
            </summary>
            <param name="dtype_id">Identifier of datatype to set.</param>
            <param name="lsb">Padding type for least-significant bits.</param>
            <param name="msb">Padding type for most-significant bits.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_precision(System.Int32,System.IntPtr)">
            <summary>
            Sets the precision of an atomic datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetPrecision
            </summary>
            <param name="dtype_id">Identifier of datatype to set.</param>
            <param name="precision">Number of bits of precision for datatype.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_sign(System.Int32,HDF.PInvoke.H5T.sign_t)">
            <summary>
            Sets the sign property for an integer type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetSign
            </summary>
            <param name="dtype_id">Identifier of datatype to set.</param>
            <param name="sign">Sign type.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_size(System.Int32,System.IntPtr)">
            <summary>
            Sets the total size for a datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetSize
            </summary>
            <param name="dtype_id">Identifier of datatype for which the size is
            being changed</param>
            <param name="size">New datatype size in bytes or <code>VARIABLE</code></param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_strpad(System.Int32,HDF.PInvoke.H5T.str_t)">
            <summary>
            Defines the type of padding used for character strings.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetStrpad
            </summary>
            <param name="dtype_id">Identifier of datatype to modify.</param>
            <param name="strpad">String padding type.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5T.set_tag(System.Int32,System.String)">
            <summary>
            Tags an opaque datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-SetTag
            </summary>
            <param name="dtype_id">Datatype identifier for the opaque datatype
            to be tagged.</param>
            <param name="tag">Descriptive ASCII string with which the opaque
            datatype is to be tagged.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks><paramref name="tag"/> is intended to provide a concise
            description; the maximum size is hard-coded in the HDF5 Library as
            256 bytes </remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.unregister(HDF.PInvoke.H5T.pers_t,System.String,System.Int32,System.Int32,HDF.PInvoke.H5T.conv_t)">
            <summary>
            Removes a conversion function.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-Unregister
            </summary>
            <param name="type">Conversion function type</param>
            <param name="name">Name displayed in diagnostic output.</param>
            <param name="src_id">Identifier of source datatype.</param>
            <param name="dst_id">Identifier of destination datatype.</param>
            <param name="func">Function to convert between source and
            destination datatypes.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>ASCII strings ONLY!</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5T.vlen_create(System.Int32)">
            <summary>
            Creates a new variable-length array datatype.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5T.html#Datatype-VLCreate
            </summary>
            <param name="base_type_id">Base type of datatype to create.</param>
            <returns>Returns datatype identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5T.class_t">
            <summary>
            These are the various classes of datatypes.
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.order_t">
            <summary>
            Byte orders
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.order_t.ERROR">
            <summary>
            error
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.order_t.LE">
            <summary>
            little endian
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.order_t.BE">
            <summary>
            big endian
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.order_t.VAX">
            <summary>
            VAX mixed endian
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.order_t.MIXED">
            <summary>
            Compound type with mixed member orders
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.order_t.ONE">
            <summary>
            no particular order (strings, bits,..)
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.sign_t">
            <summary>
            Types of integer sign schemes
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.sign_t.ERROR">
            <summary>
            error
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.sign_t.NONE">
            <summary>
            unsigned
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.sign_t.SGN_2">
            <summary>
            two's complement
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.norm_t">
            <summary>
            Floating-point normalization schemes
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.norm_t.ERROR">
            <summary>
            error
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.norm_t.IMPLIED">
            <summary>
            msb of mantissa isn't stored, always 1
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.norm_t.MSBSET">
            <summary>
            msb of mantissa is always 1
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.norm_t.NONE">
            <summary>
            not normalized
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.cset_t">
            <summary>
            Character set to use for text strings.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cset_t.ERROR">
            <summary>
            error [value = -1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cset_t.ASCII">
            <summary>
            US ASCII [value = 0].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cset_t.UTF8">
            <summary>
            UTF-8 Unicode encoding [value = 1].
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.str_t">
            <summary>
            Type of padding to use in character strings.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.ERROR">
            <summary>
            error
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.NULLTERM">
            <summary>
            null terminate like in C
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.NULLPAD">
            <summary>
            pad with nulls
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.SPACEPAD">
            <summary>
            pad with spaces like in Fortran
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_3">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_4">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_5">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_6">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_7">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_8">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_9">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_10">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_11">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_12">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_13">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_14">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.str_t.RESERVED_15">
            <summary>
            reserved for later use
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.pad_t">
            <summary>
            Type of padding to use in other atomic types
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.pad_t.ERROR">
            <summary>
            error
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.pad_t.ZERO">
            <summary>
            always set to zero
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.pad_t.ONE">
            <summary>
            always set to one
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.pad_t.BACKGROUND">
            <summary>
            set to background value
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.conv_except_t">
            <summary>
            The exception type passed into the conversion callback function
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_except_t.RANGE_HI">
            <summary>
            source value is greater than destination's range
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_except_t.RANGE_LOW">
            <summary>
            source value is less than destination's range
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_except_t.PRECISION">
            <summary>
            source value loses precision in destination
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_except_t.TRUNCATE">
            <summary>
            source value is truncated in destination
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_except_t.PINF">
            <summary>
            source value is positive infinity(floating number)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_except_t.NINF">
            <summary>
            source value is negative infinity(floating number)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_except_t.NAN">
            <summary>
            source value is NaN(floating number)
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.cmd_t">
            <summary>
            Commands sent to conversion functions
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cmd_t.INIT">
            <summary>
            query and/or initialize private data
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cmd_t.CONV">
            <summary>
            convert data from source to dest datatype
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cmd_t.FREE">
            <summary>
            function is being removed from path
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.bkg_t">
            <summary>
            How is the `bkg' buffer used by the conversion function?
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.bkg_t.NO">
            <summary>
            background buffer is not needed, send NULL
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.bkg_t.TEMP">
            <summary>
            bkg buffer used as temp storage only
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.bkg_t.YES">
            <summary>
            init bkg buf with data before conversion
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.cdata_t">
            <summary>
            Type conversion client data
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cdata_t.command">
            <summary>
            what should the conversion function do?
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cdata_t.need_bkg">
            <summary>
            is the background buffer needed?
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cdata_t.recalc">
            <summary>
            recalculate private data
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.cdata_t.priv">
            <summary>
            private data
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.pers_t">
            <summary>
            Conversion function persistence
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.pers_t.DONTCARE">
            <summary>
            wild card
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.pers_t.HARD">
            <summary>
            hard conversion function
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.pers_t.SOFT">
            <summary>
            soft conversion function
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.direction_t">
            <summary>
            The order to retrieve atomic native datatype
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.direction_t.DEFAULT">
            <summary>
            default direction is ascending
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.direction_t.ASCEND">
            <summary>
            in ascending order
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.direction_t.DESCEND">
            <summary>
            in descending order
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.conv_ret_t">
            <summary>
            The return value from conversion callback function
            conv_except_func_t
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_ret_t.ABORT">
            <summary>
            abort conversion [value = -1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_ret_t.UNHANDLED">
            <summary>
            callback function failed to handle the exception [value = 0]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.conv_ret_t.HANDLED">
            <summary>
            callback function handled the exception successfully [value = 1]
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.hvl_t">
            <summary>
            Variable Length Datatype struct in memory
            (This is only used for VL sequences, not VL strings, which are
            stored in byte[]'s)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.hvl_t.len">
            <summary>
            Length of VL data (in base type units)
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5T.hvl_t.p">
            <summary>
            Pointer to VL data
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5T.conv_except_func_t">
            <summary>
            Exception handler.  If an exception like overflow happenes during
            conversion, this function is called if it's registered through
            H5P.set_type_conv_cb.
            </summary>
            <param name="except_type"></param>
            <param name="src_id"></param>
            <param name="dst_id"></param>
            <param name="src_buf"></param>
            <param name="dst_buf"></param>
            <param name="user_data"></param>
            <returns></returns>
        </member>
        <member name="M:HDF.PInvoke.H5Z.filter_avail(HDF.PInvoke.H5Z.filter_t)">
            <summary>
            Determines whether a filter is available.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5Z.html#Compression-FilterAvail
            </summary>
            <param name="filter">Filter identifier.</param>
            <returns>Returns a Boolean value if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5Z.get_filter_info(HDF.PInvoke.H5Z.filter_t,System.UInt32@)">
            <summary>
            Retrieves information about a filter.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5Z.html#Compression-GetFilterInfo
            </summary>
            <param name="filter">Identifier of the filter to query.</param>
            <param name="filter_config">A bit field encoding the returned
            filter information</param>
            <returns>Returns a non-negative value on success, a negative value
            on failure.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5Z.register(HDF.PInvoke.H5Z.class_t@)">
            <summary>
            Registers new filter.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5Z.html#Compression-Register
            </summary>
            <param name="filter_class">A pointer to a buffer for the struct
            containing filter-definition information.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5Z.unregister(HDF.PInvoke.H5Z.filter_t)">
            <summary>
            Unregisters a filter.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5Z.html#Compression-Unregister
            </summary>
            <param name="filter">Identifier of the filter to be unregistered.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5Z.filter_t">
            <summary>
            Filter IDs
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.ERROR">
            <summary>
            no filter [value = -1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.NONE">
            <summary>
            reserved indefinitely [value = 0]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.DEFLATE">
            <summary>
            deflation like gzip ]value = 1]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.SHUFFLE">
            <summary>
            shuffle the data [value = 2]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.FLETCHER32">
            <summary>
            fletcher32 checksum of EDC [value = 3]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.SZIP">
            <summary>
            szip compression [value = 4]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.NBIT">
            <summary>
            nbit compression [value = 5]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.SCALEOFFSET">
            <summary>
            scale+offset compression [value = 6]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.RESERVED">
            <summary>
            filter ids below this value are reserved for library use [value = 256]
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.filter_t.MAX">
            <summary>
            maximum filter id [value = 65535]
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5Z.SO_scale_type_t">
            <summary>
            Special parameters for ScaleOffset filter
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5Z.EDC_t">
            <summary>
            Values to decide if EDC is enabled for reading data
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.EDC_t.ERROR">
            <summary>
            error value
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5Z.cb_return_t">
            <summary>
            Return values for filter callback function
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.cb_return_t.FAIL">
            <summary>
            I/O should fail if filter fails.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.cb_return_t.CONT">
            <summary>
            I/O continues if filter fails.
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5Z.filter_func_t">
            <summary>
            Filter callback function definition
            </summary>
            <param name="filter"></param>
            <param name="buf"></param>
            <param name="buf_size"></param>
            <param name="op_data"></param>
            <returns></returns>
        </member>
        <member name="T:HDF.PInvoke.H5Z.class_t">
            <summary>
            The filter table maps filter identification numbers to structs that
            contain a pointers to the filter function and timing statistics.
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.class_t.version">
            <summary>
            Version number of the <code>class_t</code> struct
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.class_t.id">
            <summary>
            Filter ID number
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.class_t.encoder_present">
            <summary>
            Does this filter have an encoder?
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.class_t.decoder_present">
            <summary>
            Does this filter have a decoder?
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.class_t.name">
            <summary>
            Comment for debugging
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.class_t.can_apply">
            <summary>
            The "can apply" callback for a filter
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.class_t.set_local">
            <summary>
            The "set local" callback for a filter
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5Z.class_t.filter">
            <summary>
            The actual filter function
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.MAX_RANK">
            <summary>
            Define user-level maximum number of dimensions
            </summary>
        </member>
        <member name="M:HDF.PInvoke.H5S.close(System.Int32)">
            <summary>
            Releases and terminates access to a dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-Close
            </summary>
            <param name="space_id">Identifier of dataspace to release.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.copy(System.Int32)">
            <summary>
            Creates an exact copy of a dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-Copy
            </summary>
            <param name="space_id">Identifier of dataspace to copy.</param>
            <returns>Returns a dataspace identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.create(HDF.PInvoke.H5S.class_t)">
            <summary>
            Creates a new dataspace of a specified type.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-Create
            </summary>
            <param name="type">Type of dataspace to be created.</param>
            <returns>Returns a dataspace identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.create_simple(System.Int32,System.UInt64[],System.UInt64[])">
            <summary>
            Creates a new simple dataspace and opens it for access.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-CreateSimple
            </summary>
            <param name="rank">Number of dimensions of dataspace.</param>
            <param name="dims">Array specifying the size of each dimension.</param>
            <param name="maxdims">Array specifying the maximum size of each
            dimension.</param>
            <returns>Returns a dataspace identifier if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.decode(System.Byte[])">
            <summary>
            Decode a binary object description of data space and return a new
            object handle.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-Decode
            </summary>
            <param name="buf">Buffer for the data space object to be decoded.</param>
            <returns>Returns an object ID(non-negative) if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.encode(System.Int32,System.Byte[],System.IntPtr@)">
            <summary>
            Encode a data space object description into a binary buffer.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-Encode
            </summary>
            <param name="obj_id">Identifier of the object to be encoded.</param>
            <param name="buf">Buffer for the object to be encoded into. If the
            provided buffer is <code>NULL</code>, only the size of buffer
            needed is returned through <paramref name="nalloc"/>.</param>
            <param name="nalloc">The size of the allocated buffer or the size
            of the buffer needed.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.extent_copy(System.Int32,System.Int32)">
            <summary>
            Copies the extent of a dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-ExtentCopy
            </summary>
            <param name="dest_space_id">The identifier for the dataspace to
            which the extent is copied.</param>
            <param name="source_space_id">The identifier for the dataspace from
            which the extent is copied.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.extent_equal(System.Int32,System.Int32)">
            <summary>
            Determines whether two dataspace extents are equal.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-ExtentEqual
            </summary>
            <param name="space1_id">First dataspace identifier.</param>
            <param name="space2_id">Second dataspace identifier.</param>
            <returns>Returns 1 if equal, 0 if unequal, if successful;
            otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_select_bounds(System.Int32,System.UInt64[],System.UInt64[])">
            <summary>
            Gets the bounding box containing the current selection.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectBounds
            </summary>
            <param name="space_id">Identifier of dataspace to query.</param>
            <param name="start">Starting coordinates of the bounding box.</param>
            <param name="end">Ending coordinates of the bounding box, i.e.,
            the coordinates of the diagonally opposite corner.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>The <code>start</code> and <code>end</code> buffers must
            be large enough to hold the dataspace rank number of coordinates.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_select_elem_npoints(System.Int32)">
            <summary>
            Gets the number of points in the current point selection.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectElemNPoints
            </summary>
            <param name="space_id">Identifier of dataspace to query.</param>
            <returns>Returns the number of points in the current dataspace
            point selection if successful. Otherwise returns a negative
            value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_select_elem_pointlist(System.Int32,System.UInt64,System.UInt64,System.UInt64[])">
            <summary>
            Gets the list of points in a point selection.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectElemPointList
            </summary>
            <param name="space_id">Dataspace identifier of selection to query.</param>
            <param name="startpoint">Element point to start with.</param>
            <param name="numpoints">Number of element points to get.</param>
            <param name="buf">List of element points selected.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_select_hyper_blocklist(System.Int32,System.UInt64,System.UInt64,System.UInt64[])">
            <summary>
            Gets the list of hyperslab blocks in a hyperslab selection.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectHyperBlockList
            </summary>
            <param name="space_id">Dataspace identifier of selection to query.</param>
            <param name="startblock">Hyperslab block to start with.</param>
            <param name="numblocks">Number of hyperslab blocks to get.</param>
            <param name="buf">List of hyperslab blocks selected.</param>
            <returns></returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_select_hyper_nblocks(System.Int32)">
            <summary>
            Get number of hyperslab blocks in a hyperslab selection.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectHyperNBlocks
            </summary>
            <param name="space_id">Identifier of dataspace to query.</param>
            <returns>Returns the number of hyperslab blocks in a hyperslab
            selection if successful. Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_select_npoints(System.Int32)">
            <summary>
            Determines the number of elements in a dataspace selection.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectNpoints
            </summary>
            <param name="space_id">Dataspace identifier.</param>
            <returns>Returns the number of elements in the selection if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_select_type(System.Int32)">
            <summary>
            Determines the type of the dataspace selection.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-GetSelectType
            </summary>
            <param name="space_id">Dataspace identifier.</param>
            <returns>Returns the dataspace selection type, a value of the
            enumerated datatype <code>H5S.sel_type</code>, if successful.
            Otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_simple_extent_dims(System.Int32,System.UInt64[],System.UInt64[])">
            <summary>
            Retrieves dataspace dimension size and maximum size.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-ExtentDims
            </summary>
            <param name="space_id">Identifier of the dataspace object to query</param>
            <param name="dims">Pointer to array to store the size of each dimension.</param>
            <param name="maxdims">Pointer to array to store the maximum size of each dimension.</param>
            <returns>Returns the number of dimensions in the dataspace if
            successful; otherwise returns a negative value.</returns>
            <remarks>Either or both of <paramref name="dims"/> and
            <paramref name="maxdims"/> may be <code>NULL</code>.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_simple_extent_ndims(System.Int32)">
            <summary>
            Determines the dimensionality of a dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-ExtentNdims
            </summary>
            <param name="space_id">Identifier of the dataspace</param>
            <returns>Returns the number of dimensions in the dataspace if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_simple_extent_npoints(System.Int32)">
            <summary>
            Determines the number of elements in a dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-ExtentNpoints
            </summary>
            <param name="space_id">Identifier of the dataspace object to query</param>
            <returns>Returns the number of elements in the dataspace if
            successful; otherwise returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.get_simple_extent_type(System.Int32)">
            <summary>
            Determines the current class of a dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-ExtentType
            </summary>
            <param name="space_id">Dataspace identifier.</param>
            <returns>Returns a dataspace class name if successful; otherwise
            <code>H5S.class_t.NO_CLASS</code>.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.is_simple(System.Int32)">
            <summary>
            Determines whether a dataspace is a simple dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-IsSimple
            </summary>
            <param name="space_id">Identifier of the dataspace to query</param>
            <returns>When successful, returns a positive value, for
            <code>TRUE</code>, or 0 (zero), for <code>FALSE</code>. Otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.offset_simple(System.Int32,System.Int64[])">
            <summary>
            Sets the offset of a simple dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-OffsetSimple
            </summary>
            <param name="space_id">The identifier for the dataspace object to
            reset.</param>
            <param name="offset">The offset at which to position the selection.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
            <remarks>The offset array must be the same number of elements as
            the number of dimensions for the dataspace. If the offset array is
            set to <code>NULL</code>, the offset for the dataspace is reset
            to 0.</remarks>
        </member>
        <member name="M:HDF.PInvoke.H5S.select_all(System.Int32)">
            <summary>
            Selects an entire dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectAll
            </summary>
            <param name="dspace_id">The identifier for the dataspace for which
            the selection is being made.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.select_elements(System.Int32,HDF.PInvoke.H5S.seloper_t,System.IntPtr,System.UInt64[])">
            <summary>
            Selects array elements to be included in the selection for a
            dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectElements
            </summary>
            <param name="space_id">Identifier of the dataspace.</param>
            <param name="op">Operator specifying how the new selection is to be
            combined with the existing selection for the dataspace.</param>
            <param name="num_elements">Number of elements to be selected.</param>
            <param name="coord">A pointer to a buffer containing a serialized
            copy of a 2-dimensional array of zero-based values specifying the
            coordinates of the elements in the point selection.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.select_hyperslab(System.Int32,HDF.PInvoke.H5S.seloper_t,System.UInt64[],System.UInt64[],System.UInt64[],System.UInt64[])">
            <summary>
            Selects a hyperslab region to add to the current selected region.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectHyperslab
            </summary>
            <param name="space_id">Identifier of dataspace selection to modify</param>
            <param name="op">Operation to perform on current selection.</param>
            <param name="start">Offset of start of hyperslab</param>
            <param name="stride">Number of blocks included in hyperslab.</param>
            <param name="count">Hyperslab stride.</param>
            <param name="block">Size of block in hyperslab.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.select_none(System.Int32)">
            <summary>
            Resets the selection region to include no elements.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectNone
            </summary>
            <param name="space_id">The identifier for the dataspace in which
            the selection is being reset.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.select_valid(System.Int32)">
            <summary>
            Verifies that the selection is within the extent of the dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SelectValid
            </summary>
            <param name="space_id">Identifier for the dataspace being queried.</param>
            <returns>Returns a positive value, for <code>TRUE</code>, if the
            selection is contained within the extent or 0 (zero), for
            <code>FALSE</code>, if it is not. Returns a negative value on error
            conditions such as the selection or extent not being defined.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.set_extent_none(System.Int32)">
            <summary>
            Removes the extent from a dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SetExtentNone
            </summary>
            <param name="space_id">The identifier for the dataspace from which
            the extent is to be removed.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="M:HDF.PInvoke.H5S.set_extent_simple(System.Int32,System.Int32,System.UInt64[],System.UInt64[])">
            <summary>
            Sets or resets the size of an existing dataspace.
            See https://www.hdfgroup.org/HDF5/doc/RM/RM_H5S.html#Dataspace-SetExtentSimple
            </summary>
            <param name="space_id">Dataspace identifier.</param>
            <param name="rank">Rank, or dimensionality, of the dataspace.</param>
            <param name="current_size">Array containing current size of
            dataspace.</param>
            <param name="maximum_size">Array containing maximum size of
            dataspace.</param>
            <returns>Returns a non-negative value if successful; otherwise
            returns a negative value.</returns>
        </member>
        <member name="T:HDF.PInvoke.H5S.class_t">
            <summary>
            Different types of dataspaces
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.class_t.NO_CLASS">
            <summary>
            error [value = -1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.class_t.SCALAR">
            <summary>
            scalar variable [value = 0].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.class_t.SIMPLE">
            <summary>
            simple data space [value = 1].
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.class_t.NULL">
            <summary>
            null data space [value = 2].
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5S.seloper_t">
            <summary>
            Different ways of combining selections
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.NOOP">
            <summary>
            error
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.SET">
            <summary>
            Select "set" operation
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.OR">
            <summary>
            Binary "or" operation for hyperslabs
            (add new selection to existing selection)
            Original region:  AAAAAAAAAA
            New region:             BBBBBBBBBB
            A or B:           CCCCCCCCCCCCCCCC
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.AND">
            <summary>
            Binary "and" operation for hyperslabs
            (only leave overlapped regions in selection)
            Original region:  AAAAAAAAAA
            New region:             BBBBBBBBBB
            A and B:                CCCC
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.XOR">
            <summary>
            Binary "xor" operation for hyperslabs
            (only leave non-overlapped regions in selection)
            Original region:  AAAAAAAAAA
            New region:             BBBBBBBBBB
            A xor B:          CCCCCC    CCCCCC
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.NOTB">
            <summary>
            Binary "not" operation for hyperslabs
            (only leave non-overlapped regions in original selection)
            Original region:  AAAAAAAAAA
            New region:             BBBBBBBBBB
            A not B:          CCCCCC
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.NOTA">
            <summary>
            Binary "not" operation for hyperslabs
            (only leave non-overlapped regions in new selection)
            Original region:  AAAAAAAAAA
            New region:             BBBBBBBBBB
            B not A:                    CCCCCC
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.APPEND">
            <summary>
            Append elements to end of point selection
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.PREPEND">
            <summary>
            Prepend elements to beginning of point selection
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.seloper_t.INVALID">
            <summary>
            Invalid upper bound on selection operations
            </summary>
        </member>
        <member name="T:HDF.PInvoke.H5S.sel_type">
            <summary>
            Enumerated type for the type of selection
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.sel_type.ERROR">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.sel_type.NONE">
            <summary>
            Nothing selected
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.sel_type.POINTS">
            <summary>
            Sequence of points selected
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.sel_type.HYPERSLABS">
            <summary>
            "New-style" hyperslab selection defined
            </summary>
        </member>
        <member name="F:HDF.PInvoke.H5S.sel_type.ALL">
            <summary>
            Entire extent selected
            </summary>
        </member>
    </members>
</doc>
